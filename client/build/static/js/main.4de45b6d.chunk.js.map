{"version":3,"sources":["common/constant.js","assets/getmeta.png","assets/cover.png","dashboard/table.js","common/header.js","common/util.js","common/txconfirmation.js","dashboard/body.js","transaction/tx_details.js","home/MainNav.js","home/home.js","pages/info.js","getstarted/login.js","transaction/create_invoice.js","transaction/send_payment.js","transaction/send_payment_confirm.js","profile/profile_page.js","dashboard/set_profile.js","common/404.js","pages/getmetamask.js","App.js","registerServiceWorker.js","utilities/GlobalStyle.js","index.js"],"names":["module","exports","address","abi","escrowAddress","profile_abi","profile_address","page_size","Table","props","state","display","tx_type","tableRows","this","type","i","customerLedger","length","url","push","key","to","className","merchantLedger","Component","Header","window","ethereum","web3","Web3","enable","then","setState","eth","accounts","setInterval","location","reload","e","href","profile_url","role","aria-label","aria-expanded","data-target","aria-hidden","id","AddressDropdown","status","StatusButton","text","util","returnTxMap","transact","parseInt","buyer","Receiver","escrow","fee","value","notes","sortTx","txs","sort","a","b","txTemplate","statusButton","size","icon","Dashboard","balance","customerLedgerLength","merchantLedgerLength","funds","profileName","profileInfo","customerLedgerName","merchantLedgerName","customerStart","merchantStart","customerEnd","merchantEnd","sentid","receiveid","urlParams","URLSearchParams","search","get","console","log","contract","constants","at","profile_contract","getBalance","error","result","fromWei","toNumber","getProfileLength","call","ProfileDB","EscrowFee","Funds","getCustomerLedgerLength","loadCustomerLedger","getMerchantLedgerLength","loadMerchantLedger","MerchantLedger","getTransaction","newLedger","loadBuyerUserNames","CustomerLedger","loadSellerUserNames","sellerName","_","sortBy","reverse","buyerName","sentNext","sentPrev","receiveNext","receivePrev","sentNextUrl","sentPrevUrl","receiveNextUrl","receivePrevUrl","style","width","disabled","onClick","setTimeout","componentDidMount","Profile","profile_link","FundsAvailable","title","toFixed","WithdrawFunds","withdraw","sendTransaction","from","gas","gasPrice","SendPayment","TransactionDetails","escrowName","txid","buyerTxCount","sellerTxCount","escrowTxCount","ledgerid","match","params","user_contract","loadProfileName","loadCount","userType","getEscrowLedgerLength","TransactionAction","buyer_profile_url","seller_profile_url","history","back","TxActionSeller","TxActionBuyer","ReleaseFundsButton","releaseFunds","bind","RefundButton","refundCustomer","refund","RaiseDisputeButton","raiseDispute","HomeContainer","styled","Navbar","Logo","Image","MainNav","expand","Container","Brand","src","require","alt","Nav","ButtonGroup","variant","Button","MainJumbotron","Jumbotron","MainContainer","MainImage","CreditsText","p","Home","Section1","fluid","target","rel","Section2","Section3","Section4","Section5","roundness","DevSection","Section6","Info","class","Login","CreateInvoice","ethPrice","ethInputText","currency","modal","ethAmount","usdAmount","sellerAddress","addressInputText","name","info","loadProfileInfo","LoadEthPrice","updateAmountInputText","fetch","response","json","data","price","Math","round","parseFloat","catch","input","document","getElementById","checkAmountInputText","String","amount","protocol","hostname","isAddress","onChange","placeholder","activateModal","SendPaymentConfirm","txt","createPayment","ProfilePage","totalSentComplete","totalSentEth","totalSentInEscrow","totalSentInEscrowEth","totalTransfersEth","totalTransfersComplete","totalTransfersInEscrow","totalTransfersInEscrowEth","url_string","URL","searchParams","sum_transacted_eth","sum_transacted_transact","sum_in_escrow_eth","sum_in_escrow_transact","username","SetProfile","InitializeProfile","loading","readOnly","Page404","getMetamask","getmeta","App","handleAddress","callBackendAPI","body","Error","message","res","express","err","path","exact","component","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","process","origin","addEventListener","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"2GAglBAA,EAAOC,QAAU,CAChBC,QA9kBe,6CA8kBEC,IAvgBN,CACX,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,OACR,KAAQ,YAGV,KAAQ,0BACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,MACR,KAAQ,YAGV,KAAQ,eACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,GACR,KAAQ,YAGV,KAAQ,oBACR,QAAW,CACV,CACC,KAAQ,WACR,KAAQ,WAET,CACC,KAAQ,WACR,KAAQ,WAET,CACC,KAAQ,cACR,KAAQ,WAET,CACC,KAAQ,QACR,KAAQ,WAET,CACC,KAAQ,YACR,KAAQ,WAET,CACC,KAAQ,SACR,KAAQ,SAET,CACC,KAAQ,QACR,KAAQ,WAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,GACR,KAAQ,YAGV,KAAQ,YACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,OACR,KAAQ,YAGV,KAAQ,wBACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,OACR,KAAQ,YAGV,KAAQ,iBACR,QAAW,CACV,CACC,KAAQ,WACR,KAAQ,WAET,CACC,KAAQ,WACR,KAAQ,WAET,CACC,KAAQ,SACR,KAAQ,WAET,CACC,KAAQ,YACR,KAAQ,WAET,CACC,KAAQ,QACR,KAAQ,WAET,CACC,KAAQ,SACR,KAAQ,SAET,CACC,KAAQ,QACR,KAAQ,WAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,GACV,KAAQ,WACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,GACR,KAAQ,WAET,CACC,KAAQ,GACR,KAAQ,YAGV,KAAQ,eACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,KACR,KAAQ,YAGV,KAAQ,eACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,GACV,KAAQ,QACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,GACV,KAAQ,UACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,SAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,KACR,KAAQ,YAGV,KAAQ,iBACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,KACR,KAAQ,YAGV,KAAQ,eACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,OACR,KAAQ,YAGV,KAAQ,0BACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,GACR,KAAQ,WAET,CACC,KAAQ,GACR,KAAQ,YAGV,KAAQ,iBACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,YACR,KAAQ,WAET,CACC,KAAQ,eACR,KAAQ,WAET,CACC,KAAQ,SACR,KAAQ,WAGV,KAAQ,gBACR,QAAW,GACX,SAAW,EACX,gBAAmB,UACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,GACR,KAAQ,YAGV,KAAQ,QACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,WACR,KAAQ,YAGV,KAAQ,oBACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,GACR,KAAQ,WAET,CACC,KAAQ,GACR,KAAQ,YAGV,KAAQ,iBACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,KAAQ,WACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,WACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,cACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,KACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,QACR,KAAQ,YAGV,KAAQ,kBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,KAAQ,WACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,WACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,cACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,KACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,QACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,SACR,KAAQ,UAGV,KAAQ,oBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,KAAQ,WACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,WACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,cACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,KACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,QACR,KAAQ,YAGV,KAAQ,iBACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,KAAQ,OACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,QACR,KAAQ,YAGV,KAAQ,WACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,KAAQ,gBACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,WACR,KAAQ,YAGV,KAAQ,uBACR,KAAQ,UAMiBC,cAjlBL,6CAklBrBC,YA3kBmB,CACnB,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,QACR,KAAQ,UAET,CACC,KAAQ,QACR,KAAQ,WAGV,KAAQ,aACR,QAAW,GACX,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,OACR,KAAQ,YAGV,KAAQ,mBACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,GACR,KAAQ,WAET,CACC,KAAQ,GACR,KAAQ,YAGV,KAAQ,YACR,QAAW,CACV,CACC,KAAQ,OACR,KAAQ,UAET,CACC,KAAQ,OACR,KAAQ,WAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,aA4gBiBC,gBA7kBH,6CA8kBvBC,UAJiB,I,oBC/kBlBP,EAAOC,QAAU,IAA0B,qC,6ICA3CD,EAAOC,QAAU,IAA0B,mC,iJC6F5BO,G,+DAvFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAETC,QAAS,GAJG,E,qDAWhB,IAmCEC,EAnCEC,EAAY,GAGhB,GAAwB,SAApBC,KAAKL,MAAMM,KACb,IAAK,IAAIC,EAAI,EAAGA,EAAIF,KAAKL,MAAMQ,eAAeC,OAAQF,IAAI,CACxD,IAAMG,EAAG,sCAAkCL,KAAKL,MAAMQ,eAAeD,GAA1B,IAE3CH,EAAUO,KACR,wBAAIC,IAAKP,KAAKL,MAAMQ,eAAeD,GAA1B,IACP,4BAAKF,KAAKL,MAAMQ,eAAeD,GAA1B,IACL,4BAAI,kBAAC,IAAD,CAAMM,GAAIH,GAAV,cAA2BL,KAAKL,MAAMQ,eAAeD,GAA1B,YAC/B,uBAAGO,UAAU,aAAaT,KAAKL,MAAMQ,eAAeD,GAA1B,UACzBF,KAAKL,MAAMQ,eAAeD,GAA1B,QAED,4BAAKF,KAAKL,MAAMQ,eAAeD,GAA1B,MAAL,eAKN,IAAK,IAAIA,EAAI,EAAGA,EAAIF,KAAKL,MAAMe,eAAeN,OAAQF,IAAI,CACxD,IAAMG,EAAG,yCAAqCL,KAAKL,MAAMe,eAAeR,GAA1B,IAC9CH,EAAUO,KACR,wBAAIC,IAAKP,KAAKL,MAAMe,eAAeR,GAA1B,IACP,4BAAKF,KAAKL,MAAMe,eAAeR,GAA1B,IACL,4BAAI,kBAAC,IAAD,CAAMM,GAAIH,GAAV,gBAA6BL,KAAKL,MAAMe,eAAeR,GAA1B,WACjC,uBAAGO,UAAU,aAAaT,KAAKL,MAAMe,eAAeR,GAA1B,OACzBF,KAAKL,MAAMe,eAAeR,GAA1B,QAED,4BAAKF,KAAKL,MAAMe,eAAeR,GAA1B,MAAL,UAWR,OAH2BJ,EAAT,SAApBE,KAAKL,MAAMM,KAA4B,6BAAyC,iCAI1E,6BAEA,6BACF,yBAAKQ,UAAU,SACf,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACf,2BAAIX,OAQJ,6BAEA,2BAAOW,UAAU,8CACjB,+BACA,oCACA,oCACA,uCAEA,gCAGA,+BACKV,S,GA9EOY,c,iBCuFLC,E,kDAtFb,WAAYjB,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACTR,QAAS,IAHG,E,gEAOE,IAAD,OACf,GAAIyB,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACED,OAAOC,SAASG,SAASC,MAAK,WAE1B,EAAKC,SAAS,CAAC/B,QAAS2B,EAAKK,IAAIC,SAAS,KAC1CC,aAAY,WACNP,EAAKK,IAAIC,SAAS,KAAO,EAAKzB,MAAMR,SACpCyB,OAAOU,SAASC,WAEnB,QAGP,MAAMC,UAMRZ,OAAOU,SAASG,KAAO,W,+BAI7B,IAAMC,EAAW,2BAAuB3B,KAAKJ,MAAMR,SACnD,OACI,yBAAKqB,UAAU,SAASmB,KAAK,aAAaC,aAAW,mBACrD,yBAAKpB,UAAU,gBAGb,uBAAGmB,KAAK,SAASnB,UAAU,uBAAuBoB,aAAW,OAAOC,gBAAc,QAAQC,cAAY,sBACpG,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAItB,yBAAKC,GAAG,qBAAqBxB,UAAU,eACrC,yBAAKA,UAAU,gBAGf,kBAAC,IAAD,CAAMD,GAAG,cAAa,uBAAGC,UAAU,eAAb,cAIpB,yBAAKA,UAAU,yCACf,kBAAC,IAAD,CAAMD,GAAImB,GAAa,uBAAGlB,UAAU,eAAb,iBAIzB,yBAAKA,UAAU,gCACf,kBAAC,IAAD,CAAMD,GAAG,wBAAwBC,UAAU,eAA3C,oBAKJ,kBAAC,IAAD,CAAMD,GAAG,0BACT,uBAAGC,UAAU,eAAb,kBAMI,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAiBrB,QAASY,KAAKJ,MAAMR,WAEvC,kBAAC,IAAD,CAAMoB,GAAG,KACT,uBAAGC,UAAU,eAAb,kB,GA5ESE,aAyFfuB,E,uKAGF,OACI,yBAAKzB,UAAU,eACRT,KAAKL,MAAMP,a,GALIuB,a,gBC1FxBwB,EAAS,CAAC,kBAAmB,iBAAkB,WAAY,uBAI3DC,GAHO,IAAIpB,IAAKH,OAAOC,U,uKAKzB,OACI,gCAASd,KAAKL,MAAM0C,U,GAHD1B,cAmDZ2B,EA3CF,CACTC,YAAa,SAACN,EAAGO,GAEb,MAAO,CACHP,GAAIQ,SAASR,GACbS,MAAOF,EAAS,GAChBG,SAAUH,EAAS,GACnBI,OAAQJ,EAAS,GACjBK,IAAKL,EAAS,GAAT,SAAa,GAAI,IACtBM,MAAON,EAAS,GAAT,SAAa,GAAI,IACxBL,OAAQA,EAAOM,SAASD,EAAS,KACjCO,MAAOP,EAAS,KAIxBQ,OAAQ,SAAAC,GACJ,OAAOA,EAAIC,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAElB,GAAKmB,EAAEnB,OAGtCoB,WAAY,WACR,MAAM,CACNpB,GAAI,GACJS,MAAO,GACPC,SAAU,GACVC,OAAQ,GACRC,IAAK,GACLC,MAAO,GACPX,OAAQ,GACRY,MAAO,KAIXZ,OAAQ,WACJ,OAAOA,GAGXmB,aAAc,SAACC,EAAMtD,EAAMuD,GACvB,OACA,kBAAC,EAAD,CAAcnB,KAAK,U,GChDE1B,Y,gBCQvB8C,E,kDACJ,WAAY9D,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACTR,QAAS,GACTsE,QAAS,EACTvD,eAAgB,GAChBO,eAAgB,GAChBiD,qBAAsB,EACtBC,qBAAsB,EACtBC,MAAO,EAEPC,YAAa,aACbC,YAAa,aAEbC,mBAAoB,GACpBC,mBAAoB,GAEpBC,cAAe,EACfC,cAAe,EACfC,YAAa,EACbC,YAAa,EAEbC,OAAQ,KACRC,UAAW,MAvBC,E,gEA2BA,IAAD,OACTC,EAAY,IAAIC,gBAAgB5D,OAAOU,SAASmD,QAChDJ,EAASE,EAAUG,IAAI,QACvBJ,EAAYC,EAAUG,IAAI,WAClBH,EAAUG,IAAI,SAQ5B,GANAC,QAAQC,IAAIP,GACZtE,KAAKmB,SAAS,CACZmD,OAAQA,EACRC,UAAWA,IAGT1D,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAI7B,IAAM4D,EAAW/D,EAAKK,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SACzD6F,EAAmBlE,EAAKK,IAAI0D,SAASC,IAAUxF,aAAayF,GAAGD,IAAUvF,iBAE/E,EAAK2B,SAAS,CACZ/B,QAAS2B,EAAKK,IAAIC,SAAS,GAC3ByD,SAAUA,EACVG,iBAAkBA,IAIpBlE,EAAKK,IAAI8D,WAAWnE,EAAKK,IAAIC,SAAS,IAAI,SAAC8D,EAAOC,GAC9C,EAAKjE,SAAS,CAACuC,QAAS3C,EAAKsE,QAAQD,EAAQ,SAASE,gBAM1DL,EAAiBM,iBAAiBC,KAAKzE,EAAKK,IAAIC,SAAS,IAAI,SAAC8D,EAAOC,GAE1C,IAArB3C,SAAS2C,GAQbH,EAAiBQ,UAAUD,KAAKzE,EAAKK,IAAIC,SAAS,GAAK+D,EAAS,GAAI,SAACD,EAAOC,GAC1E,EAAKjE,SAAS,CACZ2C,YAAasB,EAAO,GACpBrB,YAAaqB,EAAO,QAVtB,EAAKjE,SAAS,CACZ2C,YAAa,QACbC,YAAa,QAanBe,EAASY,UAAUF,KAAKzE,EAAKK,IAAIC,SAAS,IAAI,SAAC8D,EAAOC,GACpD,EAAKjE,SAAS,CAAC0B,IAAKuC,EAAO,QAK7BN,EAASa,MAAMH,KAAKzE,EAAKK,IAAIC,SAAS,IAAI,SAAC8D,EAAOC,GAChD,EAAKjE,SAAS,CAAC0C,MAAOuB,EAAO,KAAD,IAAE,GAAI,SAKtC,EAAKxF,MAAMkF,SAASc,wBAAwBJ,KAAKzE,EAAKK,IAAIC,SAAS,IAAI,SAAC8D,EAAOC,GAE7E,IAAIlB,EACW,OAAXI,GAAmB7B,SAAS6B,GAAU7B,SAAS2C,IACjDR,QAAQC,IAAIP,GAEZ,EAAKnD,SAAS,CACZwC,qBAAsBlB,SAAS2C,GAC/BlB,cAAezB,SAAS6B,KAE1BJ,EAAgBzB,SAAS6B,KAIzB,EAAKnD,SAAS,CACZwC,qBAAsBlB,SAAS2C,GAC/BlB,cAAezB,SAAS2C,GAAU,IAGpClB,EAAgBzB,SAAS2C,GAAU,GAGrC,EAAKS,mBAAmB3B,MAIxBY,EAASgB,wBAAwBN,KAAKzE,EAAKK,IAAIC,SAAS,IAAI,SAAC8D,EAAOC,GAEhD,OAAdb,GAAsB9B,SAAS8B,GAAa9B,SAAS2C,GACvD,EAAKjE,SAAS,CACZyC,qBAAsBnB,SAAS2C,GAC/BjB,cAAe1B,SAAS8B,KAK1B,EAAKpD,SAAS,CACZyC,qBAAsBnB,SAAS2C,GAC/BjB,cAAe1B,SAAS2C,GAAU,IAKxC,EAAKW,wBAMHzE,aAAY,WACNP,EAAKK,IAAIC,SAAS,KAAO,EAAKzB,MAAMR,UACtCyB,OAAOU,SAASG,KAAO,gBAExB,QAGP,MAAMD,UAMRZ,OAAOU,SAASG,KAAO,W,2CAIR,IAAD,OACZX,EAAO,IAAIC,IAAKH,OAAOC,UAC7Bd,KAAKmB,SAAS,CACZkD,YAAcrE,KAAKJ,MAAMuE,cAAgB,EAAIY,IAAUtF,UAAa,EAAI,EAAKO,KAAKJ,MAAMuE,cAAgB,EAAIY,IAAUtF,YAIxHO,KAAKmB,SAAS,CACdT,eAAgB,GAChBuD,mBAAoB,KAGpB,IAZkB,eAYT/D,GACP,EAAKN,MAAMkF,SAASkB,eAAeR,KAAKzE,EAAKK,IAAIC,SAAS,GAAGnB,GAAG,SAACiF,EAAOlD,GAGtE,EAAKrC,MAAMkF,SAASmB,eAAeT,KAAKvD,GAAI,SAACkD,EAAOC,GAElD,IAAM5C,EAAWF,EAAKC,YAAYrC,EAAEkF,GAChCc,EAAY,EAAKtG,MAAMc,eAC3BwF,EAAU5F,KAAKkC,GAIX0D,EAAU9F,SAAY,EAAI,EAAKR,MAAMuE,cAAgB,EAAKvE,MAAMyE,cAIlE,EAAKlD,SAAS,CAACT,eAAgBwF,IAC/BtB,QAAQC,IAAI,YAAcqB,EAAU9F,QAEpC,EAAK+F,6BAnBJjG,EAAIF,KAAKJ,MAAMuE,cAAejE,GAAKF,KAAKJ,MAAMyE,YAAanE,IAAK,EAAhEA,K,yCA4BQgE,GAAe,IAAD,OACzBnD,EAAO,IAAIC,IAAKH,OAAOC,UAC7Bd,KAAKmB,SAAS,CACZiD,YAAcF,EAAgB,EAAIa,IAAUtF,UAAa,EAAI,EAAKO,KAAKJ,MAAMsE,cAAgB,EAAIa,IAAUtF,YAE7G,IAAI2E,EAAeF,EAAgB,EAAIa,IAAUtF,UAAa,EAAI,EAAKO,KAAKJ,MAAMsE,cAAgB,EAAIa,IAAUtF,UAChHmF,QAAQC,IAAIX,GACZU,QAAQC,IAAIT,GAGZpE,KAAKmB,SAAS,CACdhB,eAAgB,GAChB6D,mBAAoB,KAIpB,IAhB+B,eAgBtB9D,GACP,EAAKN,MAAMkF,SAASsB,eAAeZ,KAAKzE,EAAKK,IAAIC,SAAS,GAAGnB,GAAG,SAACiF,EAAOlD,GAItE,EAAKrC,MAAMkF,SAASmB,eAAeT,KAAKvD,GAAI,SAACkD,EAAOC,GAElD,IAAM5C,EAAWF,EAAKC,YAAYrC,EAAEkF,GAChCc,EAAY,EAAKtG,MAAMO,eAC3B+F,EAAU5F,KAAKkC,GAIX0D,EAAU9F,SAAY,EAAI8D,EAAgBE,IAI5C,EAAKjD,SAAS,CAAChB,eAAgB+F,IAC/BtB,QAAQC,IAAI,YAAcqB,EAAU9F,QAEpC,EAAKiG,8BApBJnG,EAAIgE,EAAehE,GAAKkE,EAAalE,IAAK,EAA1CA,K,8CA6Ba,IAAD,OACrB0E,QAAQC,IAAI,eAAiB7E,KAAKJ,MAAMc,eAAeN,QAEvD,IAHqB,eAGZF,GAGT,EAAKN,MAAMqF,iBAAiBM,iBAAiBC,KAAK,EAAK5F,MAAMc,eAAeR,GAAGyC,UAAU,SAACwC,EAAOC,GAEjG,GAAyB,IAArB3C,SAAS2C,GACX,CACE,EAAKxF,MAAMc,eAAeR,GAAGoG,WAAa,GAC1C,IAAInD,EAAI,EAAKvD,MAAMqE,mBAAmB3D,KAAK,EAAKV,MAAMc,eAAeR,IACrE0E,QAAQC,IAAI1B,QAKhB,EAAKvD,MAAMqF,iBAAiBQ,UAAUD,KAAK,EAAK5F,MAAMc,eAAeR,GAAGyC,SAAWyC,EAAS,GAAI,SAACD,EAAOC,GACtG,EAAKxF,MAAMc,eAAeR,GAAGoG,WAAalB,EAAO,GACjD,IAAIjC,EAAI,EAAKvD,MAAMqE,mBAMnB,GALAd,EAAE7C,KAAK,EAAKV,MAAMc,eAAeR,IACjC,EAAKiB,SAAS,CACZ8C,mBAAoBd,IAEtByB,QAAQC,IAAI,gBACR,EAAKjF,MAAMqE,mBAAmB7D,SAAW,EAAKR,MAAMc,eAAeN,OAAO,CAC5E,IAAI8F,EAAYK,IAAEC,OAAO,EAAK5G,MAAMqE,mBAAoB,MAAMwC,UAC9D,EAAKtF,SAAS,CACZ8C,mBAAoBiC,YAzBjBhG,EAAI,EAAGA,EAAIF,KAAKJ,MAAMc,eAAeN,OAAQF,IAAK,EAAlDA,K,4CAoCW,IAAD,OACnB0E,QAAQC,IAAI,eAAiB7E,KAAKJ,MAAMO,eAAeC,QAEvD,IAHmB,eAGVF,GAGT,EAAKN,MAAMqF,iBAAiBM,iBAAiBC,KAAK,EAAK5F,MAAMO,eAAeD,GAAGyC,UAAU,SAACwC,EAAOC,GAEjG,GAAyB,IAArB3C,SAAS2C,GACX,CACE,EAAKxF,MAAMO,eAAeD,GAAGoG,WAAa,GAC1C,IAAInD,EAAI,EAAKvD,MAAMoE,mBAAmB1D,KAAK,EAAKV,MAAMO,eAAeD,IACrE0E,QAAQC,IAAI1B,QAKhB,EAAKvD,MAAMqF,iBAAiBQ,UAAUD,KAAK,EAAK5F,MAAMO,eAAeD,GAAGyC,SAAWyC,EAAS,GAAI,SAACD,EAAOC,GACtG,EAAKxF,MAAMO,eAAeD,GAAGoG,WAAalB,EAAO,GACjD,IAAIjC,EAAI,EAAKvD,MAAMoE,mBAMnB,GALAb,EAAE7C,KAAK,EAAKV,MAAMO,eAAeD,IACjC,EAAKiB,SAAS,CACZ6C,mBAAoBb,IAEtByB,QAAQC,IAAI,gBACR,EAAKjF,MAAMoE,mBAAmB5D,SAAW,EAAKR,MAAMO,eAAeC,OAAO,CAC5E,IAAI8F,EAAYK,IAAEC,OAAO,EAAK5G,MAAMoE,mBAAoB,MAAMyC,UAC9D,EAAKtF,SAAS,CACZ6C,mBAAoBkC,YAzBjBhG,EAAI,EAAGA,EAAIF,KAAKJ,MAAMO,eAAeC,OAAQF,IAAK,EAAlDA,K,2CAqCX,IADmB,IAAD,kBACTA,GAGT,EAAKN,MAAMqF,iBAAiBM,iBAAiBC,KAAK,EAAK5F,MAAMc,eAAeR,GAAGwC,OAAO,SAACyC,EAAOC,GAE9F,GAAyB,IAArB3C,SAAS2C,GACX,CACE,EAAKxF,MAAMc,eAAeR,GAAGwG,UAAY,GACzC,IAAIvD,EAAI,EAAKvD,MAAMqE,mBAAmB3D,KAAK,EAAKV,MAAMc,eAAeR,IACrE0E,QAAQC,IAAI1B,QAKhB,EAAKvD,MAAMqF,iBAAiBQ,UAAUD,KAAK,EAAK5F,MAAMc,eAAeR,GAAGwC,MAAQ0C,EAAS,GAAI,SAACD,EAAOC,GACnG,EAAKxF,MAAMc,eAAeR,GAAGwG,UAAYtB,EAAO,GAChD,IAAIjC,EAAI,EAAKvD,MAAMqE,mBAMnB,GALAd,EAAE7C,KAAK,EAAKV,MAAMc,eAAeR,IACjC,EAAKiB,SAAS,CACZ8C,mBAAoBd,IAGlB,EAAKvD,MAAMqE,mBAAmB7D,SAAW,EAAKR,MAAMc,eAAeN,OAAO,CAC5E,IAAI8F,EAAYK,IAAEC,OAAO,EAAK5G,MAAMqE,mBAAoB,MAAMwC,UAC9D,EAAKtF,SAAS,CACZ8C,mBAAoBiC,YAzBjBhG,EAAI,EAAGA,EAAIF,KAAKJ,MAAMc,eAAeN,OAAQF,IAAK,EAAlDA,K,+BAmCC,IAGJyG,EAKAC,EAKAC,EAKAC,EAlBG,OAKPH,EADC3G,KAAKJ,MAAMsE,cAAgBa,IAAUtF,WAAc,EACzCO,KAAKJ,MAAMsE,cACXlE,KAAKJ,MAAMsE,cAAgBa,IAAUtF,UAIhDmH,EADC5G,KAAKJ,MAAMsE,cAAgBa,IAAUtF,WAAcO,KAAKJ,MAAM+D,qBACpD3D,KAAKJ,MAAM+D,qBAAuB,EAClC3D,KAAKJ,MAAMsE,cAAgBa,IAAUtF,UAIhDoH,EADC7G,KAAKJ,MAAMuE,cAAgBY,IAAUtF,WAAc,EACtCO,KAAKJ,MAAMuE,cACXnE,KAAKJ,MAAMuE,cAAgBY,IAAUtF,UAInDqH,EADC9G,KAAKJ,MAAMuE,cAAgBY,IAAUtF,WAAcO,KAAKJ,MAAMgE,qBACjD5D,KAAKJ,MAAMgE,qBAAuB,EAClC5D,KAAKJ,MAAMuE,cAAgBY,IAAUtF,UAEnD,IAAMsH,EAAW,0BAAsBJ,EAAtB,oBAA0C3G,KAAKJ,MAAMuE,eAChE6C,EAAW,0BAAsBJ,EAAtB,oBAA0C5G,KAAKJ,MAAMuE,eAChE8C,EAAc,6BAAyBJ,EAAzB,iBAA6C7G,KAAKJ,MAAMsE,eACtEgD,EAAc,6BAAyBJ,EAAzB,iBAA6C9G,KAAKJ,MAAMsE,eAE5E,OACE,6BACA,kBAAC,EAAD,MACA,6BAASzD,UAAU,WAGnB,yBAAKA,UAAU,YAAY0G,MAAO,CAACC,MAAO,MAC1C,yBAAK3G,UAAU,WACf,yBAAKA,UAAU,uBAEb,kBAAC,EAAD,CAAgBiD,QAAS1D,KAAKJ,MAAM8D,UACpC,kBAAC,EAAD,CAAeG,MAAO7D,KAAKJ,MAAMiE,MAAOiB,SAAU9E,KAAKJ,MAAMkF,SAAU1F,QAASY,KAAKJ,MAAMR,UAC3F,kBAAC,EAAD,CAAS0E,YAAa9D,KAAKJ,MAAMkE,YAAaC,YAAa/D,KAAKJ,MAAMmE,YAAa3E,QAASY,KAAKJ,MAAMR,UACvG,kBAAC,EAAD,CAAaiI,SAAqC,UAA3BrH,KAAKJ,MAAMkE,eAGlC,yBAAKrD,UAAU,UAIf,yBAAKA,UAAU,OAIf,kBAAC,EAAD,CAAON,eAAgBH,KAAKJ,MAAMoE,mBAAoBtD,eAAgBV,KAAKJ,MAAMqE,mBAAoBhE,KAAM,SAC3G,6BACA,yBAAKQ,UAAU,kCAAkCmB,KAAK,aAAaC,aAAW,cAC9E,kBAAC,IAAD,CAAMrB,GAAIwG,EAAaM,QAAS,WAE5BC,YAAW,WACT,EAAKC,sBACJ,OAEH,uBAAG/G,UAAU,uBAAb,aACJ,kBAAC,IAAD,CAAMD,GAAIuG,EAAaO,QAAS,WAE5BC,YAAW,WACT,EAAKC,sBACJ,OAEH,uBAAG/G,UAAU,0BAAb,gBAMJ,yBAAKA,UAAU,OAIf,kBAAC,EAAD,CAAON,eAAgBH,KAAKJ,MAAMoE,mBAAoBtD,eAAgBV,KAAKJ,MAAMqE,mBAAoBhE,KAAM,aAC3G,6BACA,yBAAKQ,UAAU,kCAAkCmB,KAAK,aAAaC,aAAW,cAC9E,kBAAC,IAAD,CAAMrB,GAAI0G,EAAgBI,QAAS,WAC/BC,YAAW,WACT,EAAKC,sBACJ,OACF,uBAAG/G,UAAU,uBAAb,aACL,kBAAC,IAAD,CAAMD,GAAIyG,EAAgBK,QAAS,WAC/BC,YAAW,WACT,EAAKC,sBACJ,OACF,uBAAG/G,UAAU,mBAAb,yB,GAjcWE,aAidlB8G,E,uKAGF,IAAMC,EAAY,2BAAuB1H,KAAKL,MAAMP,SACpD,OACE,yBAAKqB,UAAU,OACb,uBAAGA,UAAU,sCAAb,gBACA,6BACA,2BAAIT,KAAKL,MAAMmE,aACf,2BAAI9D,KAAKL,MAAMoE,aACf,6BACA,uBAAGtD,UAAU,uBACb,kBAAC,IAAD,CAAMD,GAAG,yBAAwB,uBAAGC,UAAU,qBAAb,mBADjC,OAGA,kBAAC,IAAD,CAAMD,GAAIkH,GAAc,uBAAGjH,UAAU,qBAAb,uB,GAdVE,aAsBhBgH,E,uKAIF,OACE,yBAAKlH,UAAU,OACb,uBAAGA,UAAU,sCAAb,mBACA,6BACA,uBAAGA,UAAU,aAAY,uBAAGA,UAAU,gBAAgBiB,KAAK,IAAIkG,MAAO5H,KAAKL,MAAM+D,UAC5E1D,KAAKL,MAAM+D,QAASmE,QAAQ,KADjC,QAEA,kC,GAVqBlH,aAiBvBmH,E,uKAGM,IAAD,OAGP,OACE,yBAAKrH,UAAU,OACf,uBAAGA,UAAU,sCAAb,iBACA,6BACA,uBAAGA,UAAU,aAAY,uBAAGA,UAAU,gBAAgBiB,KAAK,IAAIkG,MAAO5H,KAAKL,MAAMkE,QAC5E7D,KAAKL,MAAMkE,MAAOgE,QAAQ,KAD/B,QAEA,6BACA,uBAAGpH,UAAU,oBAAoB6G,QAAS,WACxC,EAAK3H,MAAMmF,SAASiD,SAASC,gBAAgB,CAC3CC,KAAM,EAAKtI,MAAMP,QACjB8I,IAAI,KACNC,SAAU,OAEV,SAAChD,EAAOC,SANV,uB,GAbsBzE,aA8BtByH,E,uKAIF,OAA4B,IAAxBpI,KAAKL,MAAM0H,SAEX,yBAAK5G,UAAU,OAEf,uBAAGA,UAAU,sCAAb,YAA8D,6BAC9D,wFAAgE,6BAChE,kBAAC,IAAD,CAAMD,GAAG,0BAAyB,4BAAQC,UAAU,oBAAoB4G,UAAQ,GAA9C,iBAClC,uBAAG5G,UAAU,aAAb,gDASA,yBAAKA,UAAU,OAEf,uBAAGA,UAAU,sCAAb,YAA8D,6BAC9D,wFAAgE,6BAChE,kBAAC,IAAD,CAAMD,GAAG,0BAAyB,uBAAGC,UAAU,qBAAb,sB,GAxBhBE,aAsDX8C,GAnBa9C,YAmBb8C,GChlBM4E,E,kDAEnB,WAAY1I,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACX8G,UAAW,GACXJ,WAAY,GACZgC,WAAY,GACZ9F,SAAUF,EAAKe,aACfkF,KAAM,EACNC,aAAc,GACdC,cAAe,GACfC,cAAe,GACfC,SAAU,GAXI,E,gEAeA,IAAD,OAMjB,GALA/D,QAAQC,IAAI7E,KAAKL,MAAMiJ,MAAMC,OAAO5G,IACpCjC,KAAKmB,SAAS,CACZoH,KAAMvI,KAAKL,MAAMiJ,MAAMC,OAAO5G,GAC9BhC,KAAMD,KAAKL,MAAMiJ,MAAMC,OAAO5I,OAE5BY,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAE3B,IAAM4D,EAAW/D,EAAKK,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SACzD0J,EAAgB/H,EAAKK,IAAI0D,SAASC,IAAUxF,aAAayF,GAAGD,IAAUvF,iBAE5E,EAAK2B,SAAS,CACZ/B,QAAS2B,EAAKK,IAAIC,SAAS,GAC3ByD,SAAUA,EACVgE,cAAeA,IAGjBlE,QAAQC,IAAI9D,EAAKK,IAAIC,SAAS,IAC9BuD,QAAQC,IAAI,EAAKlF,MAAMiJ,MAAMC,OAAO5G,IAElC6C,EAASsB,eAAeZ,KAAKzE,EAAKK,IAAIC,SAAS,GAAG,EAAK1B,MAAMiJ,MAAMC,OAAO5G,IAAI,SAACkD,EAAOlD,GAGpF6C,EAASmB,eAAeT,KAAKvD,GAAI,SAACkD,EAAOC,GACzCR,QAAQC,IAAIO,GACZ,IAAM5C,EAAWF,EAAKC,YAAYN,EAAGmD,GACrC,EAAKjE,SAAS,CACZqB,SAAUA,EACVmG,SAAU1G,IAGZ2C,QAAQC,IAAIrC,GACZ,EAAKuG,gBAAgB,QAASvG,EAASE,OACvC,EAAKqG,gBAAgB,WAAYvG,EAASG,UAC1C,EAAKoG,gBAAgB,SAAUvG,EAASI,QACxC,EAAKoG,UAAUxG,EAASE,MAAOF,EAASG,SAAUH,EAASI,cAM/DtB,aAAY,WACNP,EAAKK,IAAIC,SAAS,KAAO,EAAKzB,MAAMR,SACpCyB,OAAOU,SAASC,WAEnB,QAGP,MAAMC,UAMRZ,OAAOU,SAASG,KAAO,W,sCAIXuH,EAAS7J,GAAS,IAAD,OAC/BY,KAAKJ,MAAMkJ,cAAcvD,iBAAiBC,KAAKpG,GAAS,SAAC+F,EAAOC,GACrC,IAArB3C,SAAS2C,IAIb,EAAKxF,MAAMkJ,cAAcrD,UAAUD,KAAKpG,EAAUgG,EAAS,GAAI,SAACD,EAAOC,GACrE,OAAO6D,GACL,IAAK,QACD,EAAK9H,SAAS,CAACuF,UAAWtB,IAC1B,MACJ,IAAK,WACD,EAAKjE,SAAS,CAACmF,WAAYlB,IAC3B,MACJ,IAAK,SACD,EAAKjE,SAAS,CAACmH,WAAYlD,a,gCAS7B1C,EAAOC,EAAUC,GAAQ,IAAD,OAChC5C,KAAKJ,MAAMkF,SAASc,wBAAwBJ,KAAK9C,GAAO,SAACyC,EAAOC,GAC9D,EAAKjE,SAAS,CAACqH,aAAc/F,SAAS2C,QAExCpF,KAAKJ,MAAMkF,SAASgB,wBAAwBN,KAAK7C,GAAU,SAACwC,EAAOC,GACjE,EAAKjE,SAAS,CAACsH,cAAehG,SAAS2C,QAEzCpF,KAAKJ,MAAMkF,SAASoE,sBAAsB1D,KAAK5C,GAAQ,SAACuC,EAAOC,GAC7D,EAAKjE,SAAS,CAACuH,cAAejG,SAAS2C,U,+BAQzC,IAAI+D,EAHJvE,QAAQC,IAAI7E,KAAKJ,MAAM2I,MAKrBY,EADsB,UAApBnJ,KAAKJ,MAAMK,KACO,kBAAC,EAAD,CACpB6E,SAAU9E,KAAKJ,MAAMkF,SACrB1F,QAASY,KAAKJ,MAAMR,QACpBuJ,SAAU3I,KAAKJ,MAAM+I,SACrBnG,SAAUxC,KAAKJ,MAAM4C,WAGD,kBAAC,EAAD,CACpBsC,SAAU9E,KAAKJ,MAAMkF,SACrB1F,QAASY,KAAKJ,MAAMR,QACpBuJ,SAAU3I,KAAKJ,MAAM+I,SACrBnG,SAAUxC,KAAKJ,MAAM4C,WAIvB,IAAM4G,EAAiB,2BAAuBpJ,KAAKJ,MAAM4C,SAAX,OACxC6G,EAAkB,2BAAuBrJ,KAAKJ,MAAM4C,SAAX,UAE/C,OACE,6BACE,kBAAC,EAAD,MAEF,6BAAS/B,UAAU,WACnB,yBAAKA,UAAU,YAAY0G,MAAO,CAACC,MAAM,MACzC,uBAAG3G,UAAU,gBAAgB6G,QAAS,kBAAMzG,OAAOyI,QAAQC,SAA3D,6BAGA,6BAEA,yBAAK9I,UAAU,gBAAgB0G,MAAO,CAACC,MAAM,MAE7C,yBAAK3G,UAAU,SACf,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACf,oDAIA,yBAAKA,UAAU,eACf,yBAAKA,UAAU,cACf,gEAKA,6BACA,uBAAGA,UAAU,+BAA+BT,KAAKJ,MAAM4C,SAASM,MAAhE,QAEA,yBAAKrC,UAAU,WAEf,yBAAKA,UAAU,wBAEf,2CACA,2BAAIT,KAAKJ,MAAM8G,UAAU,IACzB,2BAAI1G,KAAKJ,MAAM4I,aAAf,wBAEA,yBAAK/H,UAAU,oBAAmB,6BAChC,0BAAMA,UAAU,QAChB,uBAAGA,UAAU,yBAGf,yBAAKA,UAAU,yBACf,yCACA,2BAAIT,KAAKJ,MAAM0G,WAAW,IAC1B,2BAAItG,KAAKJ,MAAM6I,cAAf,6BAIA,yBAAKhI,UAAU,qBACf,0CACA,2BAAIT,KAAKJ,MAAM0I,WAAW,IAC1B,2BAAItI,KAAKJ,MAAM8I,cAAf,2BAEA,6BACA,yBAAKjI,UAAU,uBACf,kBAAC,IAAD,CAAMD,GAAI4I,GAAmB,uBAAG3I,UAAU,qBACxC,0BAAMA,UAAU,QAChB,uBAAGA,UAAU,iBAEb,sDALF,OAQA,kBAAC,IAAD,CAAMD,GAAI6I,GACV,uBAAG5I,UAAU,qBACX,0BAAMA,UAAU,QAChB,uBAAGA,UAAU,iBAEb,0DAKF,6BAEA,8CAAsB,6BAAK,6BAI3B,2BAAOA,UAAU,SACf,+BACA,4BACA,wBAAI0G,MAAO,CAACC,MAAM,MAAlB,gBACA,4BAAKpH,KAAKJ,MAAM4C,SAASM,MAAzB,SAEA,4BACA,mCACA,4BAAK9C,KAAKJ,MAAM4C,SAASK,IAAzB,SAGA,4BACA,0CACA,4BAAK7C,KAAKJ,MAAM4C,SAASM,MAAQ9C,KAAKJ,MAAM4C,SAASK,IAArD,SAIA,4BACA,+CACA,4BACG7C,KAAKJ,MAAM4C,SAASO,UAKzB,6BAGA,uBAAGtC,UAAU,iBAAb,sBACD,6BACA,uBAAGA,UAAU,uBACZ,4BAAQA,UAAU,8BAChB,0BAAMA,UAAU,QAChB,uBAAGA,UAAU,kBAEb,8BAAOT,KAAKJ,MAAM4C,SAASL,UAG7B,6BACCgH,S,GAjQuCxI,aA6Q1C6I,E,uKAGF,OACE,6BACA,uBAAG/I,UAAU,iBAAb,sBACA,6BAEA,uBAAGA,UAAU,uBACb,kBAAC,EAAD,CACAqE,SAAU9E,KAAKL,MAAMmF,SACrB1F,QAASY,KAAKL,MAAMP,QACpBmJ,KAAMvI,KAAKL,MAAMgJ,SACjBnG,SAAUxC,KAAKL,MAAM6C,WAErB,kBAAC,EAAD,CACCsC,SAAU9E,KAAKL,MAAMmF,SACrB1F,QAASY,KAAKL,MAAMP,QACpBmJ,KAAMvI,KAAKL,MAAMgJ,SACjBnG,SAAUxC,KAAKL,MAAM6C,iB,GAnBC7B,aA2BvB8I,E,uKAIF,OACE,6BACA,uBAAGhJ,UAAU,iBAAb,sBACA,6BACA,uBAAGA,UAAU,uBACb,kBAAC,EAAD,CACAqE,SAAU9E,KAAKL,MAAMmF,SACrB1F,QAASY,KAAKL,MAAMP,QACpBmJ,KAAMvI,KAAKL,MAAMgJ,SACjBnG,SAAUxC,KAAKL,MAAM6C,WAErB,kBAAC,EAAD,CACAsC,SAAU9E,KAAKL,MAAMmF,SACrB1F,QAASY,KAAKL,MAAMP,QACpBmJ,KAAMvI,KAAKL,MAAMgJ,SACjBnG,SAAUxC,KAAKL,MAAM6C,iB,GAnBC7B,aA4BtB+I,E,6KAEF,IACM5E,EADO,IAAI9D,IAAKH,OAAOC,UACPM,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SAC/DwF,QAAQC,IAAI7E,KAAKL,MAAM4I,MACvBzD,EAAS6E,aAAa3B,gBACpBhI,KAAKL,MAAM4I,KACX,CACEN,KAAMjI,KAAKL,MAAMP,QACjB8I,IAAI,KACNC,SAAU,OAEV,SAAChD,EAAOC,GACNR,QAAQC,IAAIO,Q,+BAOd,OAAIpF,KAAKL,MAAM6C,SAASL,SAAWG,EAAKH,SAAS,IAAMnC,KAAKL,MAAM6C,SAASL,SAAWG,EAAKH,SAAS,GAEhG,4BAAQ1B,UAAU,oBAAoB6G,QAAStH,KAAK2J,aAAaC,KAAK5J,OACtE,0BAAMS,UAAU,QAChB,uBAAGA,UAAU,wBAEb,gDAOA,4BAAQA,UAAU,oBAAoB4G,UAAQ,GAC9C,0BAAM5G,UAAU,QAChB,uBAAGA,UAAU,wBAEb,oD,GArCuBE,aA8CzBkJ,E,uKAEF,IACM/E,EADO,IAAI9D,IAAKH,OAAOC,UACPM,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SAC/DwF,QAAQC,IAAI7E,KAAKL,MAAM4I,MACvBzD,EAASgF,eAAe9B,gBACtBhI,KAAKL,MAAM4I,KACX,CACEN,KAAMjI,KAAKL,MAAMP,UAEnB,SAAC+F,EAAOC,GACNR,QAAQC,IAAIO,Q,+BAOd,OAAIpF,KAAKL,MAAM6C,SAASL,SAAWG,EAAKH,SAAS,IAAMnC,KAAKL,MAAM6C,SAASL,SAAWG,EAAKH,SAAS,GAEhG,uBAAG1B,UAAU,oBAAoB6G,QAAStH,KAAK+J,OAAOH,KAAK5J,OAC3D,0BAAMS,UAAU,QAChB,uBAAGA,UAAU,wBAEb,+CAOA,uBAAGA,UAAU,oBAAoB4G,UAAQ,GACzC,0BAAM5G,UAAU,QAChB,uBAAGA,UAAU,wBAEb,mD,GAnCiBE,aA4CvBqJ,E,6KAEA,IACMlF,EADO,IAAI9D,IAAKH,OAAOC,UACPM,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SAC/DwF,QAAQC,IAAI7E,KAAKL,MAAM4I,MACvBzD,EAASmF,aAAajC,gBACpBhI,KAAKL,MAAM4I,KACX,CACEN,KAAMjI,KAAKL,MAAMP,UAEnB,SAAC+F,EAAOC,GACNR,QAAQC,IAAIO,Q,+BAOd,OAAIpF,KAAKL,MAAM6C,SAASL,SAAWG,EAAKH,SAAS,IAAMnC,KAAKL,MAAM6C,SAASL,SAAWG,EAAKH,SAAS,GAEhG,uBAAG1B,UAAU,iBAAiB6G,QAAStH,KAAKiK,aAAaL,KAAK5J,OAC9D,0BAAMS,UAAU,QAChB,uBAAGA,UAAU,kBAEb,gDAOA,uBAAGA,UAAU,iBAAiB4G,UAAQ,GACtC,0BAAM5G,UAAU,QAChB,uBAAGA,UAAU,kBAEb,oD,GAnCqBE,a,0cC9ZjC,IAAMuJ,EAAgBC,YAAOC,IAAPD,CAAH,KAiBbE,EAAOF,YAAOG,IAAPH,CAAH,KAKK,SAASI,IAEpB,OAGJ,kBAACL,EAAD,CAAeM,OAAO,MACtB,kBAACC,EAAA,EAAD,KACE,kBAACL,EAAA,EAAOM,MAAR,CAAcjK,UAAU,UAAUiB,KAAK,KACrC,kBAAC2I,EAAD,CAAMM,IAAKC,EAAQ,KAAwBC,IAAI,UAEjD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEtK,UAAU,qCACVuK,QAAQ,WAER,kBAACC,EAAA,EAAD,CAAQvJ,KAAK,KAAb,QACA,kBAACuJ,EAAA,EAAD,CAAQvJ,KAAK,SAAb,QACA,kBAACuJ,EAAA,EAAD,CAAQvJ,KAAK,UAAb,e,msBCpCN,IAAMwJ,GAAgBf,YAAOgB,IAAPhB,CAAH,MAIbiB,GAAgBjB,YAAOM,IAAPN,CAAH,MAYbkB,GAAYlB,YAAOG,IAAPH,CAAH,MAeTmB,GAAcnB,IAAOoB,EAAV,MAUF,SAASC,KAEtB,OAKF,iCAEI,kBAAC,GAAD,MAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MAEA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,O,IASIC,G,uKAKN,OACA,kBAACP,GAAD,CAAeQ,OAAK,GACd,kBAACN,GAAD,CAAe3K,UAAU,sDACvB,yBAAKwB,GAAG,kBACN,wBAAIxB,UAAU,8BAAd,uEAGA,uBAAGA,UAAU,2BAAb,gJAGA,kBAACwK,EAAA,EAAD,CAAQD,QAAQ,UAAUzH,KAAK,KAAK3B,KAAK,SAASF,KAAK,UAAvD,2BAIF,yBAAKO,GAAG,kBAAkBxB,UAAU,WAClC,kBAAC4K,GAAD,CACEV,IAAI,qEACJE,IAAI,YAEN,kBAACS,GAAD,CAAa7K,UAAU,kCAAvB,SACS,IACP,uBAAGiB,KAAK,sBAAsBiK,OAAO,SAASC,IAAI,uBAChD,iD,GA3BSjL,aAsCjBkL,G,uKAKN,OACA,6BAASpL,UAAU,aACf,6BACA,6BACJ,yBAAKA,UAAU,6BAA4B,oDAC3C,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iCAEf,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACX,+CACA,8MAGI,6BAAK,6BAHT,6GAYhB,yBAAKA,UAAU,eACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iCAEf,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACX,oDACA,2LAC6J,6BAAK,6BADlK,oTAIA,6BAAK,kCAMrB,yBAAKA,UAAU,eACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iCAEf,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACX,qEACA,kaAC+X,6BAAK,6BAChY,6BAAK,mCAQ7B,kC,GAhEuBE,aAwEjBmL,G,uKAKN,OACA,yBAAKrL,UAAU,aACf,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,eACf,wBAAIA,UAAU,cAAd,iBAGI,wBAAIA,UAAU,kBAEd,mR,GAfWE,aA6BjBoL,G,uKAKN,OACA,yBAAKtL,UAAU,aACf,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,oCACf,yBAAKA,UAAU,eACf,wBAAIA,UAAU,cAAd,uBAEA,4BAASA,UAAU,WACP,yBAAK2G,MAAM,OAAOuD,IAAI,2EAA2EE,IAAI,MAChG,6BACT,4OACuE,6BAAK,6BAD5E,+EAIJ,6BACI,uBAAGpK,UAAU,uBACb,kBAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,+BAA5B,mBAMV,uBAAGA,UAAU,aAAb,cAAoC,uBAAGiB,KAAK,sFAAsFiK,OAAO,UAArG,YAApC,uD,GA3BqBhL,aAwCjBqL,G,uKAKN,OACA,yBAAKvL,UAAU,mBACf,yBAAKA,UAAU,+BACf,wBAAIA,UAAU,cAAd,cAGA,sIACY,6BACA,uBAAGA,UAAU,uBACzB,kBAAC,yBAAD,CAAuB+C,KAAM,SAAUD,KAAM,GAAI0I,UAAW,GAAI5L,IAAI,qCACpE,kBAAC,yBAAD,CAAuBmD,KAAK,UAAUD,KAAM,GAAI0I,UAAW,GAAK5L,IAAI,iCACpE,kBAAC,yBAAD,CAAuBmD,KAAK,OAAOD,KAAM,GAAI0I,UAAW,GAAK5L,IAAI,qCACjE,kBAAC,yBAAD,CAAuBmD,KAAK,WAAWD,KAAM,GAAI0I,UAAW,GAAI5L,IAAI,+CACpE,kBAAC,yBAAD,CAAuBmD,KAAK,SAASD,KAAM,GAAI0I,UAAW,GAAI5L,IAAI,kCAGlE,6BACA,oCAAY,6BAfZ,6BAgBA,6BACA,6BACA,qCAAa,6BAlBb,mCAoBA,6BACA,6BACA,sCAAc,6BAtBd,+BAwBA,6BAAK,mC,GA/BkBM,aA0CjBuL,G,uKAKN,OACA,yBAAKzL,UAAU,aACf,yBAAKA,UAAU,+BACf,wBAAIA,UAAU,cAAd,sBAGA,6FACA,6BACA,2BAAG,8CAAsB,6BAAK,uBAAGiB,KAAK,mFAAR,YAA9B,KAAsI,uBAAGA,KAAK,kFAAkFiK,OAAO,UAAjG,YAAyH,mC,GAbtOhL,aAuBnBwL,G,uKAKJ,OACE,yBAAK1L,UAAU,mBACf,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,eACf,wBAAIA,UAAU,cAAd,qBAGR,0TAG+R,6BAAK,6BAHpS,sTASI,6BAAK,6BATT,wMAW4E,kBAAC,IAAD,CAAMD,GAAG,UAAT,aAX5E,OAiBI,6BACA,yBAAKmK,IAAI,qEAAqEvD,MAAM,QAE5E,mC,GAjCOzG,aCxQRyL,G,uKAjDX,OACI,6BACA,6BAASC,MAAM,gBACX,yBAAKA,MAAM,aACP,yBAAKA,MAAM,aACP,wBAAIA,MAAM,SAAV,oBAGA,wBAAIA,MAAM,YAAV,uCAQhB,yBAAKA,MAAM,oBAAoBlF,MAAO,CAACC,MAAM,MAC7C,6BACA,yCACA,0eAEA,uEACA,+dAEA,uDACA,sZAEA,6BAEA,yFAEA,uBAAG3G,UAAU,uBACjB,kBAAC,yBAAD,CAAuB+C,KAAM,SAAUD,KAAM,GAAI0I,UAAW,GAAI5L,IAAI,qCACpE,kBAAC,yBAAD,CAAuBmD,KAAK,UAAUD,KAAM,GAAI0I,UAAW,GAAK5L,IAAI,iCACpE,kBAAC,yBAAD,CAAuBmD,KAAK,OAAOD,KAAM,GAAI0I,UAAW,GAAK5L,IAAI,qCACjE,kBAAC,yBAAD,CAAuBmD,KAAK,WAAWD,KAAM,GAAI0I,UAAW,GAAI5L,IAAI,+CACpE,kBAAC,yBAAD,CAAuBmD,KAAK,SAASD,KAAM,GAAI0I,UAAW,GAAI5L,IAAI,mCAK9D,kC,GA9CeM,aCiGJ2L,G,kDA7FX,WAAY3M,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTR,QAAS,IAHC,E,gEASE,IAAD,OACf,GAAIyB,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAE3B,EAAKC,SAAS,CAAC/B,QAAS2B,EAAKK,IAAIC,SAAS,KAC1CC,aAAY,WACNP,EAAKK,IAAIC,SAAS,KAAO,EAAKzB,MAAMR,SACpC,EAAK+B,SAAS,CAAC/B,QAAS2B,EAAKK,IAAIC,SAAS,OAE7C,QAGP,MAAMI,UAMRZ,OAAOU,SAASG,KAAO,iB,+BAmC/B,OApB0C,6CAAkB,0BAAM2K,MAAM,yBAAwB,uBAAGA,MAAM,0BAIjE,gDAAqB,0BAAMA,MAAM,yBAAwB,uBAAGA,MAAM,0BAMxF,6CAAkB,0BAAMA,MAAM,yBAAwB,uBAAGA,MAAM,0BAW7E,6BAEA,6BAASA,MAAM,sBAAqB,kBAAC,EAAD,MACpC,yBAAKA,MAAM,aACP,yBAAKA,MAAM,+BACP,yBAAKA,MAAM,2BACP,wBAAIA,MAAM,uBAAV,SACA,uBAAGA,MAAM,0BAAT,kCACA,yBAAKA,MAAM,OAEP,6BAEI,uBAAG5L,UAAU,qBAAqBT,KAAKJ,MAAMR,SAE7C,6BACA,kBAAC,IAAD,CAAMoB,GAAG,cAAa,4BAAQ6L,MAAM,iDAAd,oB,GAlF9B1L,a,SCqRL4L,G,kDAnRX,WAAY5M,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT4M,SAAU,aACVpN,QAAS,GACTqN,aAAc,uBAAGhM,UAAU,SAC3BiM,SAAU,MACVC,MAAO,GACPC,UAAW,EACXC,UAAW,EACXC,cAAe,GACfC,iBAAkB,uBAAGtM,UAAU,SAC/BuM,KAAM,GACNC,KAAM,GACN5M,IAAK,IAET,EAAK6M,gBAAkB,EAAKA,gBAAgBtD,KAArB,iBAEvB,EAAKuD,aAAe,EAAKA,aAAavD,KAAlB,iBACpB,EAAKwD,sBAAwB,EAAKA,sBAAsBxD,KAA3B,iBAnBf,E,gEAsBE,IAAD,OACf,GAAI/I,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAEVH,EAAKK,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SAA/D,IACM0J,EAAgB/H,EAAKK,IAAI0D,SAASC,IAAUxF,aAAayF,GAAGD,IAAUvF,iBAG5E,EAAK2B,SAAS,CACV/B,QAAS2B,EAAKK,IAAIC,SAAS,GAC3ByH,cAAeA,IAGnBxH,aAAY,WACNP,EAAKK,IAAIC,SAAS,KAAO,EAAKzB,MAAMR,SACpCyB,OAAOU,SAASC,WAEnB,QAGP,MAAMC,UAMRZ,OAAOU,SAASG,KAAO,SAG3B1B,KAAKmN,iB,qCAGI,IAAD,OAEZE,MAAM,mEACLnM,MAAK,SAAAoM,GAAQ,OAAIA,EAASC,UAC1BrM,MAAK,SAAAsM,GACJ,IAAMC,EAAQC,KAAKC,OAAOC,WAAWJ,EAAI,KAAS,GAAb,OAA4BI,WAAWJ,EAAI,KAAS,GAAb,QAA2B,EAAE,KAAK,IAC9G,EAAKrM,SAAS,CAACqL,SAAUiB,OAE1BI,OAAM,SAAA1I,GAAK,OAAIP,QAAQO,MAAMA,Q,8CAI9B,IAAM2I,EAAQC,SAASC,eAAe,UAAUlL,MAChD,GAAI9C,KAAKiO,uBAET,GAA4B,QAAxBjO,KAAKJ,MAAM8M,SACX1M,KAAKmB,SAAS,CACVsL,aAAc,uBAAGhM,UAAU,QAAQqN,EAArB,cAAuCJ,KAAKC,MAAMG,EAAQ9N,KAAKJ,MAAM4M,SAAS,KAAK,KACjGI,UAAWgB,WAAWE,UAIvB,GAA4B,QAAxB9N,KAAKJ,MAAM8M,SAAmB,CAEzC,IAAIE,EAAYc,KAAKC,MAAMG,EAAM9N,KAAKJ,MAAM4M,SAAS,KAAU,IAC3DxM,KAAKmB,SAAS,CACV0L,UAAWiB,EACXrB,aAAc,uBAAGhM,UAAU,QAAQmM,EAArB,cAA2CkB,GACzDlB,UAAWgB,WAAWhB,Q,6CAQ9B,IAAMkB,EAAQC,SAASC,eAAe,UAAUlL,MAChD,OAAIoL,OAAON,WAAWE,MAAYA,GAASI,OAAON,WAAWE,IAAU,I,sCAWvE,IAAoC,IAAhC9N,KAAKiO,uBAST,GADArJ,QAAQC,IAAI7E,KAAKJ,MAAMoN,MACC,sBAApBhN,KAAKJ,MAAMoN,KAAf,CAQI,IAAMmB,EAAiC,QAAxBnO,KAAKJ,MAAM8M,SAAqB1M,KAAKJ,MAAMgN,UAAY5M,KAAKJ,MAAMiN,UAEjF7M,KAAKmB,SAAS,CACVd,IAAI,GAAD,OAAKQ,OAAOU,SAAS6M,SAArB,aAAkCvN,OAAOU,SAAS8M,SAAlD,kCAAoFrO,KAAKJ,MAAMR,QAA/F,YAA0GY,KAAKJ,MAAM8M,SAArH,YAAiIyB,UAVxInO,KAAKmB,SAAS,CACV4L,iBAAkB,uBAAGtM,UAAU,kBAAb,8EATtBT,KAAKmB,SAAS,CACVsL,aAAc,uBAAGhM,UAAU,kBAAb,yC,wCAsBN,IAAD,OAGTM,EAAO,IAAIC,IAAKH,OAAOC,UACvB1B,EAAU2B,EAAKK,IAAIC,SAAS,GAGlC,IAAgC,IAA5BN,EAAKuN,UAAUlP,GAKf,OAJAwF,QAAQC,IAAI,wBACZ7E,KAAKmB,SAAS,CACV4L,iBAAkB,uBAAGtM,UAAU,kBAAb,yBAK1BT,KAAKJ,MAAMkJ,cAAcvD,iBAAiBC,KAAKpG,GAAS,SAAC+F,EAAOC,GAC5DR,QAAQC,IAAR,iCAAsCO,IACtCR,QAAQC,IAAR,UAAezF,IACU,IAArBqD,SAAS2C,GAcf,EAAKxF,MAAMkJ,cAAcrD,UAAUD,KAAKpG,EAAUgG,EAAS,GAAI,SAACD,EAAOC,GACrE,EAAKjE,SAAS,CACZ6L,KAAM,QACNC,KAAM7H,EAAO,GACb0H,cAAe1N,EACf2N,iBAAkB,uBAAGtM,UAAU,gBAAb,kBAA4C2E,EAAO,SAjBrE,EAAKjE,SAAS,CACd6L,KAAM,oBACNC,KAAM,GACNF,iBAAkB,uBAAGtM,UAAU,kBAAb,6BAAwD,kBAAC,IAAD,CAAMD,GAAG,yBAAT,oBAAxD,mC,+BAsBhB,IAAD,OACU,mBAAeR,KAAKJ,MAAMkN,eAG3C,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKrM,UAAS,gBAAWT,KAAKJ,MAAM+M,QACpC,yBAAKlM,UAAU,mBAAmB6G,QAAS,kBAAM,EAAKnG,SAAS,CAACwL,MAAO,QACvE,yBAAKlM,UAAU,iBACX,kBAAC,GAAD,CACArB,QAASY,KAAKJ,MAAMR,QACpBwN,UAAW5M,KAAKJ,MAAMgN,UACtBE,cAAe9M,KAAKJ,MAAMkN,iBAG9B,4BAAQrM,UAAU,uBAAuB6G,QAAS,kBAAM,EAAKnG,SAAS,CAACwL,MAAO,SAIhF,6BAASlM,UAAU,WACnB,yBAAKA,UAAU,YAAY0G,MAAO,CAACC,MAAM,MACzC,uBAAG3G,UAAU,gBAAgB6G,QAAS,kBAAMzG,OAAOyI,QAAQC,SAA3D,gBAGA,6BAEA,yBAAK9I,UAAU,gBAAgB0G,MAAO,CAACC,MAAM,MAE7C,yBAAK3G,UAAU,SACf,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACf,+CAIA,yBAAKA,UAAU,eACf,yBAAKA,UAAU,cACf,0CAAgBT,KAAKJ,MAAM4M,aAK3B,6BAEJ,2BAAO/L,UAAU,SAAjB,kBACA,yBAAKA,UAAU,oBAEf,yBAAKA,UAAU,WACX,0BAAMA,UAAU,UAChB,4BAAQwB,GAAG,WAAW+K,KAAK,WAC3BuB,SAAU,WAEN,EAAKpN,SAAS,CACVuL,SAAUqB,SAASC,eAAe,YAAYlL,MAC9C2J,aAAc,uBAAGhM,UAAU,WAE/BsN,SAASC,eAAe,UAAUlL,MAAQ,KAG1C,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,UAKR,yBAAKrC,UAAU,WACX,2BAAOA,UAAU,QAAQR,KAAK,OAAOuO,YAAY,SAASvM,GAAG,SAASsM,SAAUvO,KAAKoN,0BAIxFpN,KAAKJ,MAAM6M,aACZ,uBAAGhM,UAAU,QAAb,sGACA,6BACA,6BAGA,6BACA,yBAAKA,UAAU,uBAEX,uBAAGA,UAAU,oBAAoB6G,QAAS,kBAAM,EAAKmH,kBAEnD,yDAIH,uBAAGhO,UAAU,qBAAqBT,KAAKJ,MAAMS,Y,GAvQxBM,aAwRtB+N,G,kDAGJ,WAAY/O,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACT4I,aAAc,GACdC,cAAe,GACfC,cAAe,GACfhC,UAAW,GACXJ,WAAY,GACZgC,WAAY,GACZqG,IAAK,4BAET,EAAK5F,gBAAkB,EAAKA,gBAAgBa,KAArB,iBACvB,EAAKZ,UAAY,EAAKA,UAAUY,KAAf,iBAZD,E,gEAeA,IAAD,OAEf,GADAhF,QAAQC,IAAI7E,KAAKL,MAAMmN,eACnBjM,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAE3B,IAAM4D,EAAW/D,EAAKK,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SACzD0J,EAAgB/H,EAAKK,IAAI0D,SAASC,IAAUxF,aAAayF,GAAGD,IAAUvF,iBAC5E,EAAK2B,SAAS,CACZ2D,SAAUA,EACVgE,cAAeA,IAGjB,EAAKC,gBAAgB,QAAShI,EAAKK,IAAIC,SAAS,IAChD,EAAK0H,gBAAgB,WAAY,EAAKpJ,MAAMmN,eAC5C,EAAK/D,gBAAgB,SAAUhE,IAAUzF,eACzC,EAAK0J,UAAUjI,EAAKK,IAAIC,SAAS,GAAI,EAAK1B,MAAMmN,cAAe/H,IAAUzF,kBAI7E,MAAMmC,UAMRZ,OAAOU,SAASG,KAAO,W,kDAM3B1B,KAAK+I,gBAAgB,WAAY/I,KAAKL,MAAMmN,iB,oCAGlC,IAAD,OAEX9M,KAAKJ,MAAMkF,SAAS8J,cAAc5G,gBAChChI,KAAKL,MAAMmN,cACV9M,KAAKJ,MAAMR,QACZ,GACA,CACE6I,KAAMjI,KAAKL,MAAMP,QACjB0D,MAAO9C,KAAKL,MAAMiN,UAAX,SAAsB,GAAI,IACjC1E,IAAK,OAGP,SAAC/C,EAAOC,GACNR,QAAQC,IAAIO,GACZ,EAAKjE,SAAS,CACVwN,IAAK,iBAETrN,aAAY,WACVT,OAAOU,SAASG,KAAO,eACtB,U,sCAKOuH,EAAS7J,GAAS,IAAD,OAC7BY,KAAKJ,MAAMkJ,cAAcvD,iBAAiBC,KAAKpG,GAAS,SAAC+F,EAAOC,GACrC,IAArB3C,SAAS2C,KAKbR,QAAQC,IAAI,MACZ,EAAKjF,MAAMkJ,cAAcrD,UAAUD,KAAKpG,EAAUgG,EAAS,GAAI,SAACD,EAAOC,GACrE,OAAO6D,GACL,IAAK,QACD,EAAK9H,SAAS,CAACuF,UAAWtB,IAC1B,MACJ,IAAK,WACD,EAAKjE,SAAS,CAACmF,WAAYlB,IAC3B,MACJ,IAAK,SACD,EAAKjE,SAAS,CAACmH,WAAYlD,c,gCAS7B1C,EAAOC,EAAUC,GAAQ,IAAD,OAChC5C,KAAKJ,MAAMkF,SAASc,wBAAwBJ,KAAK9C,GAAO,SAACyC,EAAOC,GAC9D,EAAKjE,SAAS,CAACqH,aAAc/F,SAAS2C,QAExCpF,KAAKJ,MAAMkF,SAASgB,wBAAwBN,KAAK7C,GAAU,SAACwC,EAAOC,GACjE,EAAKjE,SAAS,CAACsH,cAAehG,SAAS2C,QAEzCpF,KAAKJ,MAAMkF,SAASoE,sBAAsB1D,KAAK5C,GAAQ,SAACuC,EAAOC,GAC7D,EAAKjE,SAAS,CAACuH,cAAejG,SAAS2C,U,+BAKjC,IAAD,OAGP,OACE,6BACA,6BACA,yBAAK3E,UAAU,gBAAgB0G,MAAO,CAACC,MAAM,MAE7C,yBAAK3G,UAAU,SACf,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACf,gDAIA,yBAAKA,UAAU,eACf,yBAAKA,UAAU,cACf,+BAMA,6BACA,uBAAGA,UAAU,+BAAb,mBAA8D,6BAE9D,uBAAGA,UAAU,+BAA+BT,KAAKL,MAAMiN,UAAvD,QACA,yBAAKnM,UAAU,WAEf,yBAAKA,UAAU,wBAEf,2CACA,2BAAIT,KAAKJ,MAAM8G,UAAU,IACzB,uBAAGjG,UAAU,aAAaT,KAAKL,MAAMP,QAArC,WAEA,yBAAKqB,UAAU,oBAAmB,6BAChC,0BAAMA,UAAU,QAChB,uBAAGA,UAAU,yBAGf,yBAAKA,UAAU,yBACf,yCACA,2BAAIT,KAAKJ,MAAM0G,WAAW,IAC1B,uBAAG7F,UAAU,aAAaT,KAAKL,MAAMmN,eACrC,8BAIA,yBAAKrM,UAAU,qBACf,0CACA,uCAEA,6BACA,yBAAKA,UAAU,uBAEf,uBAAGA,UAAU,oBAAoB6G,QAAS,kBAAM,EAAKc,gBAEnD,8BAAOpI,KAAKJ,MAAM+O,OAIpB,6BACA,uBAAGlO,UAAU,aAAb,gDACiD,6BADjD,iFAEkF,6BAFlF,oE,GAnLyBE,aCuBlByH,I,yDA7SX,WAAYzI,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT4M,SAAU,aACVpN,QAAS,GACTqN,aAAc,uBAAGhM,UAAU,SAC3BiM,SAAU,MACVC,MAAO,GACPC,UAAW,EACXE,cAAe,GACfC,iBAAkB,uBAAGtM,UAAU,SAC/BuM,KAAM,GACNC,KAAM,IAEV,EAAKC,gBAAkB,EAAKA,gBAAgBtD,KAArB,iBAEvB,EAAKuD,aAAe,EAAKA,aAAavD,KAAlB,iBACpB,EAAKwD,sBAAwB,EAAKA,sBAAsBxD,KAA3B,iBAjBf,E,gEAoBE,IAAD,OACf,GAAI/I,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAEVH,EAAKK,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SAA/D,IACM0J,EAAgB/H,EAAKK,IAAI0D,SAASC,IAAUxF,aAAayF,GAAGD,IAAUvF,iBAE5E,EAAK2B,SAAS,CACV/B,QAAS2B,EAAKK,IAAIC,SAAS,GAC3ByH,cAAeA,IAEnBxH,aAAY,WACNP,EAAKK,IAAIC,SAAS,KAAO,EAAKzB,MAAMR,SACpCyB,OAAOU,SAASC,WAEnB,QAGP,MAAMC,UAMRZ,OAAOU,SAASG,KAAO,SAG3B1B,KAAKmN,iB,qCAGI,IAAD,OAEZE,MAAM,mEACLnM,MAAK,SAAAoM,GAAQ,OAAIA,EAASC,UAC1BrM,MAAK,SAAAsM,GACJ,IAAMC,EAAQC,KAAKC,OAAOC,WAAWJ,EAAI,KAAS,GAAb,OAA4BI,WAAWJ,EAAI,KAAS,GAAb,QAA2B,EAAE,KAAK,IAC9G,EAAKrM,SAAS,CAACqL,SAAUiB,OAE1BI,OAAM,SAAA1I,GAAK,OAAIP,QAAQO,MAAMA,Q,8CAI9B,IAAM2I,EAAQC,SAASC,eAAe,UAAUlL,MAChD,GAAI9C,KAAKiO,uBAET,GAA4B,QAAxBjO,KAAKJ,MAAM8M,SACX1M,KAAKmB,SAAS,CACVsL,aAAc,uBAAGhM,UAAU,QAAQqN,EAArB,cAAuCJ,KAAKC,MAAMG,EAAQ9N,KAAKJ,MAAM4M,SAAS,KAAK,KACjGI,UAAWgB,WAAWE,UAIvB,GAA4B,QAAxB9N,KAAKJ,MAAM8M,SAAmB,CAEzC,IAAIE,EAAYc,KAAKC,MAAMG,EAAM9N,KAAKJ,MAAM4M,SAAS,KAAU,IAC3DxM,KAAKmB,SAAS,CACVsL,aAAc,uBAAGhM,UAAU,QAAQmM,EAArB,cAA2CkB,GACzDlB,UAAWgB,WAAWhB,Q,6CAQ9B,IAAMkB,EAAQC,SAASC,eAAe,UAAUlL,MAChD,OAAIoL,OAAON,WAAWE,MAAYA,GAASI,OAAON,WAAWE,IAAU,I,sCAWvE,IAAoC,IAAhC9N,KAAKiO,uBAAT,CASA,IAAMlN,EAAO,IAAIC,IAAKH,OAAOC,UACvB1B,EAAU2O,SAASC,eAAe,iBAAiBlL,MACzD,IAAgC,IAA5B/B,EAAKuN,UAAUlP,GAKf,OAJAwF,QAAQC,IAAI,wBACZ7E,KAAKmB,SAAS,CACV4L,iBAAkB,uBAAGtM,UAAU,kBAAb,yBAO1BmE,QAAQC,IAAI7E,KAAKJ,MAAMoN,MACC,sBAApBhN,KAAKJ,MAAMoN,KAOfhN,KAAKmB,SAAS,CACVwL,MAAO,YACPG,cAAeiB,SAASC,eAAe,iBAAiBlL,QARxD9C,KAAKmB,SAAS,CACV4L,iBAAkB,uBAAGtM,UAAU,kBAAb,8EAtBtBT,KAAKmB,SAAS,CACVsL,aAAc,uBAAGhM,UAAU,kBAAb,yC,wCAgCN,IAAD,OAGTrB,EAAU2O,SAASC,eAAe,iBAAiBlL,MAGzD,IAAgC,IAFnB,IAAI9B,IAAKH,OAAOC,UAEpBwN,UAAUlP,GAKf,OAJAwF,QAAQC,IAAI,wBACZ7E,KAAKmB,SAAS,CACV4L,iBAAkB,uBAAGtM,UAAU,kBAAb,yBAK1BT,KAAKJ,MAAMkJ,cAAcvD,iBAAiBC,KAAKpG,GAAS,SAAC+F,EAAOC,GAC5DR,QAAQC,IAAR,iCAAsCO,IACtCR,QAAQC,IAAR,UAAezF,IACU,IAArBqD,SAAS2C,GAcf,EAAKxF,MAAMkJ,cAAcrD,UAAUD,KAAKpG,EAAUgG,EAAS,GAAI,SAACD,EAAOC,GACrE,EAAKjE,SAAS,CACZ6L,KAAM5H,EAAO,GACb6H,KAAM7H,EAAO,GACb0H,cAAe1N,EACf2N,iBAAkB,uBAAGtM,UAAU,gBAAb,kBAA4C2E,EAAO,SAjBrE,EAAKjE,SAAS,CACd6L,KAAM,oBACNC,KAAM,GACNF,iBAAkB,uBAAGtM,UAAU,kBAAb,qF,+BAsBhB,IAAD,OACDkB,EAAW,2BAAuB3B,KAAKJ,MAAMkN,eAGnD,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKrM,UAAS,gBAAWT,KAAKJ,MAAM+M,QACpC,yBAAKlM,UAAU,mBAAmB6G,QAAS,kBAAM,EAAKnG,SAAS,CAACwL,MAAO,QACvE,yBAAKlM,UAAU,iBACX,kBAAC,GAAD,CACArB,QAASY,KAAKJ,MAAMR,QACpBwN,UAAW5M,KAAKJ,MAAMgN,UACtBE,cAAe9M,KAAKJ,MAAMkN,iBAG9B,4BAAQrM,UAAU,uBAAuB6G,QAAS,kBAAM,EAAKnG,SAAS,CAACwL,MAAO,SAIhF,6BAASlM,UAAU,WACnB,yBAAKA,UAAU,YAAY0G,MAAO,CAACC,MAAM,MACzC,uBAAG3G,UAAU,gBAAgB6G,QAAS,kBAAMzG,OAAOyI,QAAQC,SAA3D,gBAGA,6BAEA,yBAAK9I,UAAU,gBAAgB0G,MAAO,CAACC,MAAM,MAE7C,yBAAK3G,UAAU,SACf,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACf,iDAIA,yBAAKA,UAAU,eACf,yBAAKA,UAAU,cACf,0CAAgBT,KAAKJ,MAAM4M,aAK3B,6BAEJ,2BAAO/L,UAAU,SAAjB,kBACA,yBAAKA,UAAU,oBAEf,yBAAKA,UAAU,WACX,0BAAMA,UAAU,UAChB,4BAAQwB,GAAG,WAAW+K,KAAK,WAC3BuB,SAAU,WAEN,EAAKpN,SAAS,CACVuL,SAAUqB,SAASC,eAAe,YAAYlL,MAC9C2J,aAAc,uBAAGhM,UAAU,WAE/BsN,SAASC,eAAe,UAAUlL,MAAQ,KAG1C,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,UAKR,yBAAKrC,UAAU,WACX,2BAAOA,UAAU,QAAQR,KAAK,OAAOuO,YAAY,SAASvM,GAAG,SAASsM,SAAUvO,KAAKoN,0BAIxFpN,KAAKJ,MAAM6M,aACZ,6BAGA,yBAAKhM,UAAU,SACf,2BAAOA,UAAU,SAAjB,kBACA,yBAAKA,UAAU,yCAAyC0G,MAAO,CAACC,MAAM,MAClE,2BAAO3G,UAAU,QAAQR,KAAK,OAC9BuO,YAAY,6CACZvM,GAAG,gBACHsM,SAAU,kBAAK,EAAKrB,qBAEpB,0BAAMzM,UAAU,yBAChB,uBAAGA,UAAU,kBAIhBT,KAAKJ,MAAMmN,iBACZ,6BACA,kBAAC,IAAD,CAAMvM,GAAImB,EAAagK,OAAO,UAAS,uBAAGlL,UAAU,8BAC9C,0BAAMA,UAAU,QAChB,uBAAGA,UAAU,iBAEb,4DAGN,6BACA,yBAAKA,UAAU,uBAEX,uBAAGA,UAAU,oBAAoB6G,QAAS,kBAAM,EAAKmH,kBACnD,0BAAMhO,UAAU,QAChB,uBAAGA,UAAU,iBAEb,wCAIF,uBAAGA,UAAU,+BAAb,qE,GAjSkBE,cAkTpB+N,G,kDAGJ,WAAY/O,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACT4I,aAAc,GACdC,cAAe,GACfC,cAAe,GACfhC,UAAW,GACXJ,WAAY,GACZgC,WAAY,GACZqG,IAAK,4BAET,EAAK5F,gBAAkB,EAAKA,gBAAgBa,KAArB,iBACvB,EAAKZ,UAAY,EAAKA,UAAUY,KAAf,iBAZD,E,gEAeA,IAAD,OAEf,GADAhF,QAAQC,IAAI7E,KAAKL,MAAMmN,eACnBjM,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAE3B,IAAM4D,EAAW/D,EAAKK,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SACzD0J,EAAgB/H,EAAKK,IAAI0D,SAASC,IAAUxF,aAAayF,GAAGD,IAAUvF,iBAC5E,EAAK2B,SAAS,CACZ2D,SAAUA,EACVgE,cAAeA,IAGjB,EAAKC,gBAAgB,QAAShI,EAAKK,IAAIC,SAAS,IAChD,EAAK0H,gBAAgB,WAAY,EAAKpJ,MAAMmN,eAC5C,EAAK/D,gBAAgB,SAAUhE,IAAUzF,eACzC,EAAK0J,UAAUjI,EAAKK,IAAIC,SAAS,GAAI,EAAK1B,MAAMmN,cAAe/H,IAAUzF,kBAI7E,MAAMmC,UAMRZ,OAAOU,SAASG,KAAO,W,kDAM3B1B,KAAK+I,gBAAgB,WAAY/I,KAAKL,MAAMmN,iB,oCAGlC,IAAD,OAEX9M,KAAKmB,SAAS,CACVwN,IAAK,qCAGT3O,KAAKJ,MAAMkF,SAAS8J,cAAc5G,gBAChChI,KAAKL,MAAMmN,cACX/H,IAAUzF,cACV,GACA,CACE2I,KAAMjI,KAAKL,MAAMP,QACjB0D,MAAO9C,KAAKL,MAAMiN,UAAX,SAAsB,GAAI,IACjC1E,IAAI,KACJC,SAAU,OAGZ,SAAChD,EAAOC,GAEDD,EAWH,EAAKhE,SAAS,CACVwN,IAAK,8BAXT/J,QAAQC,IAAIO,GACZ,EAAKjE,SAAS,CACVwN,IAAK,iBAETrN,aAAY,WACVT,OAAOU,SAASG,KAAO,eACtB,W,sCAaKuH,EAAS7J,GAAS,IAAD,OAC7BY,KAAKJ,MAAMkJ,cAAcvD,iBAAiBC,KAAKpG,GAAS,SAAC+F,EAAOC,GACrC,IAArB3C,SAAS2C,KAKbR,QAAQC,IAAI,MACZ,EAAKjF,MAAMkJ,cAAcrD,UAAUD,KAAKpG,EAAUgG,EAAS,GAAI,SAACD,EAAOC,GACrE,OAAO6D,GACL,IAAK,QACD,EAAK9H,SAAS,CAACuF,UAAWtB,IAC1B,MACJ,IAAK,WACD,EAAKjE,SAAS,CAACmF,WAAYlB,IAC3B,MACJ,IAAK,SACD,EAAKjE,SAAS,CAACmH,WAAYlD,c,gCAS7B1C,EAAOC,EAAUC,GAAQ,IAAD,OAChC5C,KAAKJ,MAAMkF,SAASc,wBAAwBJ,KAAK9C,GAAO,SAACyC,EAAOC,GAC9D,EAAKjE,SAAS,CAACqH,aAAc/F,SAAS2C,QAExCpF,KAAKJ,MAAMkF,SAASgB,wBAAwBN,KAAK7C,GAAU,SAACwC,EAAOC,GACjE,EAAKjE,SAAS,CAACsH,cAAehG,SAAS2C,QAEzCpF,KAAKJ,MAAMkF,SAASoE,sBAAsB1D,KAAK5C,GAAQ,SAACuC,EAAOC,GAC7D,EAAKjE,SAAS,CAACuH,cAAejG,SAAS2C,U,+BAKjC,IAAD,OAGP,OACE,6BACA,6BACA,yBAAK3E,UAAU,gBAAgB0G,MAAO,CAACC,MAAM,MAE7C,yBAAK3G,UAAU,SACf,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACf,gDAIA,yBAAKA,UAAU,eACf,yBAAKA,UAAU,cACf,+BAMA,6BACA,uBAAGA,UAAU,+BAAb,mBAA8D,6BAE9D,uBAAGA,UAAU,+BAA+BT,KAAKL,MAAMiN,UAAvD,QACA,yBAAKnM,UAAU,WAEf,yBAAKA,UAAU,wBAEf,2CACA,2BAAIT,KAAKJ,MAAM8G,UAAU,IACzB,uBAAGjG,UAAU,aAAaT,KAAKL,MAAMP,QAArC,WAEA,yBAAKqB,UAAU,oBAAmB,6BAChC,0BAAMA,UAAU,QAChB,uBAAGA,UAAU,yBAGf,yBAAKA,UAAU,yBACf,yCACA,2BAAIT,KAAKJ,MAAM0G,WAAW,IAC1B,uBAAG7F,UAAU,aAAaT,KAAKL,MAAMmN,eACrC,8BAIA,yBAAKrM,UAAU,qBACf,0CACA,uCAEA,6BACA,yBAAKA,UAAU,uBAEf,uBAAGA,UAAU,oBAAoB6G,QAAS,kBAAM,EAAKc,gBAEnD,8BAAOpI,KAAKJ,MAAM+O,OAIpB,6BACA,uBAAGlO,UAAU,aAAb,gDACiD,6BADjD,iFAEkF,6BAFlF,oE,GAlMyBE,aCjKlB+N,G,kDA9Ib,WAAY/O,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACTR,QAAS,IAHG,E,gEAOA,IAAD,OACf,GAAIyB,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAE3B,IAAM4D,EAAW/D,EAAKK,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SAE/D,EAAK+B,SAAS,CACZ/B,QAAS2B,EAAKK,IAAIC,SAAS,GAC3ByD,SAAUA,IAEZxD,aAAY,WACNP,EAAKK,IAAIC,SAAS,KAAO,EAAKzB,MAAMR,SACpCyB,OAAOU,SAASC,WAEnB,QAGP,MAAMC,UAMRZ,OAAOU,SAASG,KAAO,W,oCAM7B1B,KAAKJ,MAAMkF,SAAS8J,cAAc5G,gBAChC,6CACA,6CACA,GACA,CACEC,KAAMjI,KAAKJ,MAAMR,QACjB0D,MAAO,IAAK,KAAL,IAAM,GAAI,IACjBoF,IAAI,KACJC,SAAU,OAEZ,SAAChD,EAAOC,GACNR,QAAQC,IAAIO,Q,+BAKN,IAAD,OAMP,OACE,6BACE,kBAAC,EAAD,MAEF,6BAAS3E,UAAU,WACnB,yBAAKA,UAAU,YAAY0G,MAAO,CAACC,MAAM,MACzC,uBAAG3G,UAAU,gBAAgB6G,QAAS,kBAAMzG,OAAOyI,QAAQC,SAA3D,gBAGA,6BAEA,yBAAK9I,UAAU,gBAAgB0G,MAAO,CAACC,MAAM,MAE7C,yBAAK3G,UAAU,SACf,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACf,gDAIA,yBAAKA,UAAU,eACf,yBAAKA,UAAU,cACf,+BAQA,6BACA,uBAAGA,UAAU,+BAAb,mBAA8D,6BAE9D,uBAAGA,UAAU,+BAAb,cACA,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,wBAEf,2CACA,2BA5CS,UA6CT,qDAEA,yBAAKA,UAAU,oBAAmB,6BAChC,0BAAMA,UAAU,QAChB,uBAAGA,UAAU,yBAGf,yBAAKA,UAAU,yBACf,yCACA,2BAtDS,UAuDT,0DAIA,yBAAKA,UAAU,qBACf,0CACA,sCACA,0DAEA,6BACA,yBAAKA,UAAU,uBAEf,uBAAGA,UAAU,oBAAoB6G,QAAS,kBAAM,EAAKc,gBACnD,0BAAM3H,UAAU,QAChB,uBAAGA,UAAU,iBAEb,mE,GAjIuBE,aCuRlBkO,G,kDArRX,WAAYlP,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACXR,QAAS,GACT4N,KAAM,GACNC,KAAM,GAEN6B,kBAAmB,EACnBC,aAAc,EAEdC,kBAAmB,EACnBC,qBAAsB,EAEtBC,kBAAmB,EACnBC,uBAAwB,EAExBC,uBAAwB,EACxBC,0BAA2B,EAE3B1L,qBAAsB,EACtBxD,eAAgB,GAEhByD,qBAAsB,EACtBlD,eAAgB,IAvBJ,E,gEA4BE,IAAD,OACb4O,EAAazO,OAAOU,SAASG,KAE3BtC,EADI,IAAImQ,IAAID,GACEE,aAAa7K,IAAI,WAOrC,GAHA3E,KAAKmB,SAAS,CACZ/B,QAASA,IAEPyB,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAE1B,IAAM4D,EAAW/D,EAAKK,IAAI0D,SAASC,IAAU1F,KAAK2F,GAAGD,IAAU3F,SACzD6F,EAAmBlE,EAAKK,IAAI0D,SAASC,IAAUxF,aAAayF,GAAGD,IAAUvF,iBAEhF,EAAK2B,SAAS,CACZ2D,SAAUA,EACVG,iBAAkBA,IAMpB,EAAKiI,kBAITpI,EAASc,wBAAwBJ,KAAKpG,GAAS,SAAC+F,EAAOC,GACrD,EAAKjE,SAAS,CAACwC,qBAAsBlB,SAAS2C,KAGhD,IAAK,IAAIlF,EAAI,EAAGA,EAAI,EAAKN,MAAM+D,qBAAsBzD,IACnD4E,EAASsB,eAAeZ,KAAKpG,EAAQc,GAAG,SAACiF,EAAOlD,GAG9C6C,EAASmB,eAAeT,KAAKvD,GAAI,SAACkD,EAAOC,GAEvC,IAAM5C,EAAWF,EAAKC,YAAYN,EAAGmD,GACjCc,EAAY,EAAKtG,MAAMO,eAM3B,GALA+F,EAAU5F,KAAKkC,GAEf,EAAKrB,SAAS,CAAChB,eAAgB+F,IAG3BA,EAAU9F,SAAW,EAAKR,MAAM+D,qBAAqB,CAMvD,IAJD,IAAI8L,EAAqB,EACrBC,EAA0B,EAC1BC,EAAoB,EACpBC,EAAyB,EACnB1P,EAAI,EAAGA,EAAI,EAAKN,MAAM+D,qBAAsBzD,IAG/C,EAAKN,MAAMO,eAAeD,GAA1B,SAA2CoC,EAAKH,SAAS,IACzD,EAAKvC,MAAMO,eAAeD,GAA1B,SAA2CoC,EAAKH,SAAS,IAEzDyN,IACAD,GAAqB,EAAK/P,MAAMO,eAAeD,GAA1B,QAIvBwP,IACAD,GAAsB,EAAK7P,MAAMO,eAAeD,GAA1B,OAI5B,EAAKiB,SAAS,CACZ4N,aAAcU,EACdX,kBAAmBY,EAEnBT,qBAAsBU,EACtBX,kBAAmBY,cAU3B9K,EAASgB,wBAAwBN,KAAKpG,GAAS,SAAC+F,EAAOC,GAErD,EAAKjE,SAAS,CAACyC,qBAAsBnB,SAAS2C,KAEhD,IAAK,IAAIlF,EAAI,EAAGA,EAAI,EAAKN,MAAMgE,qBAAsB1D,IACnD4E,EAASkB,eAAeR,KAAKpG,EAAQc,GAAG,SAACiF,EAAOlD,GAI9C6C,EAASmB,eAAeT,KAAKvD,GAAI,SAACkD,EAAOC,GACvC,IAAM5C,EAAWF,EAAKC,YAAYN,EAAGmD,GAEjCc,EAAY,EAAKtG,MAAMc,eAK3B,GAJAwF,EAAU5F,KAAKkC,GAEf,EAAKrB,SAAS,CAACT,eAAgBwF,IAE3BA,EAAU9F,SAAW,EAAKR,MAAMgE,qBAAqB,CAMrD,IAJF,IAAI6L,EAAqB,EACrBC,EAA0B,EAC1BC,EAAoB,EACpBC,EAAyB,EAClB1P,EAAI,EAAGA,EAAI,EAAKN,MAAMgE,qBAAsB1D,IAG/C,EAAKN,MAAMc,eAAeR,GAA1B,SAA2CoC,EAAKH,SAAS,IACzD,EAAKvC,MAAMc,eAAeR,GAA1B,SAA2CoC,EAAKH,SAAS,IAEzDyN,IACAD,GAAqB,EAAK/P,MAAMc,eAAeR,GAA1B,QAIvBwP,IACAD,GAAsB,EAAK7P,MAAMc,eAAeR,GAA1B,OAI5B,EAAKiB,SAAS,CACZ+N,kBAAmBO,EACnBN,uBAAwBO,EAExBL,0BAA2BM,EAC3BP,uBAAwBQ,iBAYlC,MAAMnO,UAMRZ,OAAOU,SAASG,KAAO,W,wCAIb,IAAD,OAEnB1B,KAAKJ,MAAMqF,iBAAiBM,iBAAiBC,KAAKxF,KAAKJ,MAAMR,SAAS,SAAC+F,EAAOC,GAEnD,IAArB3C,SAAS2C,GAET,EAAKjE,SAAS,CACd6L,KAAM,GACNC,KAAM,KAKV,EAAKrN,MAAMqF,iBAAiBQ,UAAUD,KAAK,EAAK5F,MAAMR,QAAUgG,EAAS,GAAI,SAACD,EAAOC,GACnF,EAAKjE,SAAS,CACZ6L,KAAM5H,EAAO,GACb6H,KAAM7H,EAAO,a,+BAQf,IAAIyK,EAAW7P,KAAKJ,MAAMoN,KACtBC,EAAOjN,KAAKJ,MAAMqN,KAEtB,OACE,6BACE,kBAAC,EAAD,MAEF,6BAASxM,UAAU,WACnB,yBAAKA,UAAU,YAAY0G,MAAO,CAACC,MAAM,MACzC,uBAAG3G,UAAU,gBAAgB6G,QAAS,kBAAMzG,OAAOyI,QAAQC,SAA3D,gBAGA,6BAEA,yBAAK9I,UAAU,gBAAgB0G,MAAO,CAACC,MAAM,MAG3C,uBAAG3G,UAAU,+BAA+BoP,EAA5C,cACA,uBAAGpP,UAAU,qBAAb,oBACA,6BACA,uBAAGA,UAAU,qBAAqBwM,GAClC,6BACA,uBAAGxM,UAAU,qBAAb,yBACA,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,wBAEf,4CACA,+CAAqBT,KAAKJ,MAAMmP,aAAhC,QACA,sDAA4B/O,KAAKJ,MAAMkP,oBAGvC,yBAAKrO,UAAU,oBAAmB,8BAGlC,yBAAKA,UAAU,yBAEf,+CACA,kDAAwBT,KAAKJ,MAAMsP,kBAAnC,QACA,sDAA4BlP,KAAKJ,MAAMuP,0BAIvC,6BACA,uBAAG1O,UAAU,qBAAb,kCAEA,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,wBAEf,oCACA,iDAAuBT,KAAKJ,MAAMqP,qBAAlC,QACA,sDAA4BjP,KAAKJ,MAAMoP,oBAGvC,yBAAKvO,UAAU,oBAAmB,8BAGlC,yBAAKA,UAAU,yBAEf,uCACA,iDAAuBT,KAAKJ,MAAMyP,0BAAlC,QACA,sDAA4BrP,KAAKJ,MAAMwP,iC,GA3QrBzO,aC6BXmP,G,uKAtBX,OACE,6BACE,kBAAC,EAAD,MACA,6BACA,yBAAKrP,UAAU,YAAY0G,MAAO,CAACC,MAAM,MACzC,wBAAI3G,UAAU,+BAAd,0BAEA,6BACA,kBAAC,GAAD,MACA,6BAEA,6BACA,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAMD,GAAG,cAAa,uBAAGC,UAAU,qBAAb,sBAA6D,6BAAK,mC,GAlBzEE,aA6BnBoP,G,kDACJ,WAAYpQ,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACTR,QAAS,GACT4Q,SAAS,GAJG,E,gEAQE,IAAD,OACjB,GAAInP,OAAOC,SAAU,CACjB,IAAMC,EAAO,IAAIC,IAAKH,OAAOC,UAC7B,IACGD,OAAOC,SAASG,SAASC,MAAK,WAE3B,IAAM4D,EAAW/D,EAAKK,IAAI0D,SAASC,IAAUxF,aAAayF,GAAGD,IAAUvF,iBACjEyF,EAAmBlE,EAAKK,IAAI0D,SAASC,IAAUxF,aAAayF,GAAGD,IAAUvF,iBAE/E,EAAK2B,SAAS,CACZ/B,QAAS2B,EAAKK,IAAIC,SAAS,GAC3ByD,SAAUA,EACVG,iBAAkBA,IAEpB3D,aAAY,WACNP,EAAKK,IAAIC,SAAS,KAAO,EAAKzB,MAAMR,SACpCyB,OAAOU,SAASC,WAEnB,QAGP,MAAMC,UAORzB,KAAKL,MAAM2J,QAAQhJ,KAAK,Y,mCAKf,IAAD,OACN0M,EAAOe,SAASC,eAAe,aAAalL,MAC5CmK,EAAOc,SAASC,eAAe,aAAalL,MAElD9C,KAAKmB,SAAS,CAAC6O,SAAS,IAExBhQ,KAAKJ,MAAMqF,iBAAiB6K,WAAW9H,gBACrCgF,EACAC,EACA,CACEhF,KAAMjI,KAAKJ,MAAMR,QACjB8I,IAAK,KACPC,SAAU,OAEV,SAAChD,EAAOC,GACJR,QAAQC,IAAI,SAAWO,GACvBR,QAAQC,IAAI,QAAUM,GACxBtE,OAAOE,KAAKK,IAAI6E,eAAeb,GAAQ,SAACD,EAAOC,GACzCA,IACFR,QAAQC,IAAI,SAAWO,GACvBR,QAAQC,IAAI,QAAUM,GAKrBtE,OAAOU,SAASG,KAAhB,2BAA4C,EAAK9B,MAAMR,kB,+BActD,IAAD,OAEP,OACE,6BAEE,yBAAKqB,UAAU,gBAAgB0G,MAAO,CAACC,MAAM,MAC7C,yBAAK3G,UAAU,qBAEf,qCAEA,6BACA,2HACA,6BACA,yBAAKA,UAAU,uBACrB,yBAAKA,UAAU,yBACb,2BAAOA,UAAU,SAAjB,iBAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,WACX,2BAAOA,UAAU,kBAAkBR,KAAK,QAAQ6C,MAAO9C,KAAKJ,MAAMR,QAAS6Q,UAAQ,QAKnF,yBAAKxP,UAAU,uBACrB,yBAAKA,UAAU,yBACb,2BAAOA,UAAU,SAAjB,SAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,WACX,2BAAOA,UAAU,QAAQR,KAAK,OAAOuO,YAAY,YAAYvM,GAAG,kBAMxE,yBAAKxB,UAAU,uBACb,yBAAKA,UAAU,yBACb,2BAAOA,UAAU,SAAjB,SAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,WACb,8BAAUA,UAAU,WACpBwB,GAAG,YACHuM,YAAY,+FAMV,6BACA,yBAAK/N,UAAU,qBACf,4BAAQA,UAAU,oBAAoB6G,QAAS,kBAAM,EAAKwI,eAA1D,yB,GAxIsBnP,aCOjBuP,G,uKAnCX,OACI,6BAASzP,UAAU,yCACnB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,eAAb,eAUhB,yBAAKA,UAAU,aACf,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,eACX,4BAAQA,UAAU,SACd,yBAAKkK,IAAI,wHAAwHE,IAAI,0B,GA1BvIlK,a,qBCcPwP,G,uKAPX,OAEG,uBAAGzO,KAAK,uFAAR,IAA+F,yBAAKjB,UAAU,iBAAiBkK,IAAKyF,KAASvF,IAAI,c,GAT9HlK,aCsFX0P,G,4MAnEbC,cAAgB,SAAClR,GACf,EAAK+B,SAAS,CAAC/B,QAASA,K,EAG1BQ,MAAQ,CACN4N,KAAM,M,EAWV+C,e,sBAAiB,8BAAApN,EAAA,sEACQkK,MAAM,YADd,cACTC,EADS,gBAEIA,EAASC,OAFb,UAETiD,EAFS,OAIS,MAApBlD,EAASnL,OAJE,sBAKPsO,MAAMD,EAAKE,SALJ,gCAORF,GAPQ,2C,kEAPM,IAAD,OAEpBxQ,KAAKuQ,iBACFrP,MAAK,SAAAyP,GAAG,OAAI,EAAKxP,SAAS,CAAEqM,KAAMmD,EAAIC,aACtC/C,OAAM,SAAAgD,GAAG,OAAIjM,QAAQC,IAAIgM,Q,+BAc5B,OAGE,kBAAC,IAAD,KAEG,kBAACtG,EAAD,MAED,kBAAC,IAAD,KAGA,kBAAC,IAAD,CAAOuG,KAAK,IAAIC,OAAK,EAACC,UAAWxF,KAGjC,kBAAC,IAAD,CAAOsF,KAAK,aAAaC,OAAK,EAACC,UAAWvN,IAE1C,kBAAC,IAAD,CAAOqN,KAAK,QAAQC,OAAK,EAACC,UAAW5E,KAErC,kBAAC,IAAD,CAAO0E,KAAK,SAASC,OAAK,EAACC,UAAW1E,KAEtC,kBAAC,IAAD,CAAOwE,KAAK,kCAAkCC,OAAK,EAACC,UAAW3I,IAE/D,kBAAC,IAAD,CAAOyI,KAAK,oCAAoCC,OAAK,EAACC,UAAWzE,KACjE,kBAAC,IAAD,CAAOuE,KAAK,yBAAyBC,OAAK,EAACC,UAAW5I,KACtD,kBAAC,IAAD,CAAO0I,KAAK,oDAAoDC,OAAK,EAACC,UAAW5I,KACjF,kBAAC,IAAD,CAAO0I,KAAK,4BAA4BC,OAAK,EAACC,UAAWtC,KACzD,kBAAC,IAAD,CAAOoC,KAAK,wBAAwBC,OAAK,EAACC,UAAWlB,KAErD,kBAAC,IAAD,CAAOgB,KAAK,WAAWC,OAAK,EAACC,UAAWnC,KAExC,kBAAC,IAAD,CAAOiC,KAAK,eAAeC,OAAK,EAACC,UAAWb,KAE5C,kBAAC,IAAD,CAAOa,UAAWd,W,GA3DNvP,aCbZsQ,GAAcC,QACa,cAA7BrQ,OAAOU,SAAS8M,UAEe,UAA7BxN,OAAOU,SAAS8M,UAEhBxN,OAAOU,SAAS8M,SAASzF,MACvB,2DAsCN,SAASuI,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTlQ,MAAK,SAAAsQ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9R,QACfyR,UAAUC,cAAcO,WAK1BjN,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBgJ,OAAM,SAAA1I,GACLP,QAAQO,MAAM,4CAA6CA,M,8hCC7E5D,IAAM2M,GAAcC,YAAH,MCOxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEI,kBAACJ,GAAD,MACA,kBAAC,GAAD,OAGJ/D,SAASC,eAAe,SFIT,WACb,GAA6C,kBAAmBqD,UAAW,CAGzE,GADkB,IAAI9B,IAAI4C,GAAwBtR,OAAOU,UAC3C6Q,SAAWvR,OAAOU,SAAS6Q,OAIvC,OAGFvR,OAAOwR,iBAAiB,QAAQ,WAC9B,IAAMjB,EAAK,UAAMe,GAAN,sBAEPlB,KAiDV,SAAiCG,GAE/B/D,MAAM+D,GACHlQ,MAAK,SAAAoM,GAGkB,MAApBA,EAASnL,SACuD,IAAhEmL,EAASgF,QAAQ3N,IAAI,gBAAgB4N,QAAQ,cAG7ClB,UAAUC,cAAckB,MAAMtR,MAAK,SAAAsQ,GACjCA,EAAaiB,aAAavR,MAAK,WAC7BL,OAAOU,SAASC,eAKpB2P,GAAgBC,MAGnBvD,OAAM,WACLjJ,QAAQC,IACN,oEArEA6N,CAAwBtB,GAIxBC,UAAUC,cAAckB,MAAMtR,MAAK,WACjC0D,QAAQC,IACN,gHAMJsM,GAAgBC,OExB1BuB,K","file":"static/js/main.4de45b6d.chunk.js","sourcesContent":["const escrowAddress = '0xC3B6eB22682d8D6620eb745e690E311d2dCCA0C2'\r\n\r\n//smart contract address\r\nconst address = '0x0ea09dBF45047aD3C522435ffdEe4F5E08e18eC9'\r\n\r\nconst profile_address = '0x6Fb62221Dd1DD8d2f8CF50714d403148913a09B9'\r\n\r\nconst profile_abi = [\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"_name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"_info\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"SetProfile\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getProfileLength\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ProfileDB\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"info\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n\r\nconst abi = [\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getCustomerLedgerLength\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"fee\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setEscrowFee\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"TransactionLedger\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"customer\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"merchant\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"escrowAgent\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"escrowFee\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"status\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"notes\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"EscrowFee\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getEscrowLedgerLength\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"txid\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getTransaction\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"customer\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"merchant\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"escrow\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"escrowFee\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"status\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"notes\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"withdraw\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"EscrowLedger\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"releaseFunds\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"isOwner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"refundCustomer\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"raiseDispute\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getMerchantLedgerLength\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"CustomerLedger\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"_merchant\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"_escrowAgent\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"_notes\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"createPayment\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": true,\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Funds\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"MerchantLedger\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"customer\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"merchant\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"escrowAgent\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"PaymentCreation\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"customer\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"merchant\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"escrowAgent\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"status\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"PaymentCompletion\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"customer\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"merchant\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"escrowAgent\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"PaymentDispute\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Withdraw\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t}\r\n]\r\n\r\nconst page_size = 5;\r\nmodule.exports = {\r\n\taddress:address, abi:abi, escrowAddress: escrowAddress,\r\n\tprofile_abi: profile_abi, profile_address: profile_address,\r\n\tpage_size: page_size\r\n}","module.exports = __webpack_public_path__ + \"static/media/getmeta.885082cf.png\";","module.exports = __webpack_public_path__ + \"static/media/cover.1a378309.png\";","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Table extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        //0: customer ledger, 1: merchant ledger\r\n        display: 0\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let tableRows = []\r\n\r\n\r\n    if (this.props.type === 'sent'){\r\n      for (let i = 0; i < this.props.customerLedger.length; i++){\r\n        const url = `/activity/transaction/buyer/${this.props.customerLedger[i]['id']}`\r\n        \r\n        tableRows.push(\r\n          <tr key={this.props.customerLedger[i]['id']}>\r\n            <td>{this.props.customerLedger[i]['id']}</td>\r\n            <td><Link to={url}>Payment to {this.props.customerLedger[i]['sellerName']}</Link>\r\n            <p className=\"is-size-7\">{this.props.customerLedger[i]['Receiver']}</p>\r\n            {this.props.customerLedger[i]['status']}\r\n            </td>\r\n            <td>{this.props.customerLedger[i]['value']} ETH</td>\r\n          </tr>\r\n        )\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.props.merchantLedger.length; i++){\r\n        const url = `/activity/transaction/Receiver/${this.props.merchantLedger[i]['id']}`\r\n        tableRows.push(\r\n          <tr key={this.props.merchantLedger[i]['id']}>\r\n            <td>{this.props.merchantLedger[i]['id']}</td>\r\n            <td><Link to={url}>Payment from {this.props.merchantLedger[i]['buyerName']}</Link>\r\n            <p className=\"is-size-7\">{this.props.merchantLedger[i]['buyer']}</p>\r\n            {this.props.merchantLedger[i]['status']}\r\n            </td>\r\n            <td>{this.props.merchantLedger[i]['value']} ETH</td>\r\n          </tr>\r\n        )\r\n    }\r\n  }\r\n\r\n\r\n  let tx_type;\r\n  this.props.type === 'sent' ? tx_type = 'Transaction History (Sent)' : tx_type = 'Transaction History (Received)'\r\n\r\n\r\n    return (\r\n        <div>\r\n \r\n        <div>\r\n      <nav className=\"level\">\r\n      <div className=\"level-left\">\r\n        <div className=\"level-item\">\r\n        <p>{tx_type}</p>\r\n        </div>\r\n        </div>\r\n        </nav>\r\n        \r\n        </div>\r\n\r\n\r\n        <br/>\r\n\r\n        <table className=\"table is-fullwidth is-hoverable is-striped\">\r\n        <thead>\r\n        <td>Txid</td>\r\n        <td>Info</td>\r\n        <td>Amount</td>\r\n        </thead>\r\n        <tfoot>\r\n        </tfoot>\r\n\r\n        <tbody>\r\n            {tableRows}\r\n        </tbody>\r\n        </table>\r\n\r\n</div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\n\r\n\r\nclass Header extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        address: ''\r\n    }\r\n}\r\n\r\n  componentDidMount(){\r\n      if (window.ethereum) {\r\n          const web3 = new Web3(window.ethereum);\r\n          try { \r\n            window.ethereum.enable().then(() => {\r\n                // User has allowed account access to DApp...\r\n                this.setState({address: web3.eth.accounts[0]})\r\n                setInterval(() => {\r\n                  if (web3.eth.accounts[0] !== this.state.address) {\r\n                      window.location.reload();\r\n                  }\r\n                }, 100);\r\n            });\r\n            \r\n          } catch(e) {\r\n            // User has denied account access to DApp...\r\n          }\r\n      }\r\n\r\n      else {\r\n          window.location.href = \"/login\";\r\n      }\r\n  }\r\n  render() {\r\n    const profile_url = `/profile?address=${this.state.address}`\r\n    return (\r\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\" >\r\n        <div className=\"navbar-brand\">\r\n         \r\n      \r\n          <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </a>\r\n        </div>\r\n      \r\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\r\n          <div className=\"navbar-start\">\r\n         \r\n      \r\n          <Link to=\"/dashboard\"><p className=\"navbar-item\">\r\n            Dashboard\r\n            </p></Link>\r\n\r\n            <div className=\"navbar-item has-dropdown is-hoverable\">\r\n            <Link to={profile_url}><p className=\"navbar-link\">\r\n            View Profile\r\n          </p></Link>\r\n  \r\n          <div className=\"navbaAnonymous3256r-dropdown\">\r\n          <Link to=\"/activity/set_profile\" className=\"navbar-item\">\r\n              Update Profile\r\n            </Link>     \r\n          </div>\r\n      </div>\r\n      <Link to=\"/activity/send_payment\">\r\n      <p className=\"navbar-item\">\r\n            Send Payment\r\n            </p></Link>  \r\n           \r\n          </div>\r\n      \r\n          <div className=\"navbar-end\">\r\n            <div className=\"navbar-item\">\r\n              <AddressDropdown address={this.state.address}/>\r\n            </div>\r\n            <Link to=\"/\">\r\n            <p className=\"navbar-item\">\r\n             Logout\r\n            </p>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n\r\nclass AddressDropdown extends Component {\r\n    render(){\r\n\r\n    return (\r\n        <div className=\"navbar-item\">\r\n              {this.props.address}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import Web3 from 'web3';\r\nimport constants from '../common/constant.js'\r\nimport React, { Component } from 'react';\r\n\r\nconst status = ['Funds In Escrow', 'Funds Released', 'Refunded', 'Awaiting Resolution']\r\nconst web3 = new Web3(window.ethereum);\r\n\r\n\r\nclass StatusButton extends Component {\r\n    render(){\r\n    return (\r\n        <button>{this.props.text}</button>\r\n    );\r\n  }\r\n}\r\n\r\nconst util = {\r\n    returnTxMap: (id,transact) => {  \r\n        \r\n        return {\r\n            id: parseInt(id),\r\n            buyer: transact[0],\r\n            Receiver: transact[1],\r\n            escrow: transact[2],\r\n            fee: transact[3]/(10**18),\r\n            value: transact[4]/(10**18),\r\n            status: status[parseInt(transact[5])],\r\n            notes: transact[6]\r\n        }\r\n    },\r\n\r\n    sortTx: txs => {\r\n        return txs.sort((a,b) => a.id - b.id)\r\n    },\r\n\r\n    txTemplate: () => {\r\n        return{\r\n        id: '',\r\n        buyer: '',\r\n        Receiver: '',\r\n        escrow: '',\r\n        fee: '',\r\n        value: '',\r\n        status: '',\r\n        notes: ''\r\n    }\r\n    },\r\n\r\n    status: () => {\r\n        return status\r\n    },\r\n\r\n    statusButton: (size, type, icon) => {\r\n        return(\r\n        <StatusButton text='aaa'/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default util;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\n\r\n\r\nclass TxConfirmation extends Component {\r\n    \r\n  render() {\r\n    let content = ''\r\n    for (let i = 0; i < this.props.content.length; i++){\r\n      content = `${content} <br/> ${this.props.content[i]}`\r\n    }\r\n\r\n    return (\r\n  <div class=\"modal is-active\">\r\n  <div class=\"modal-background\"></div>\r\n  <div class=\"modal-card\">\r\n    <header class=\"modal-card-head\">\r\n      <p class=\"modal-card-title\">{this.props.title}</p>\r\n      <button class=\"delete\" aria-label=\"close\"></button>\r\n    </header>\r\n    <section class=\"modal-card-body\">\r\n      Your transaction has been sent to the blockchain and the confirmation is currently pending. <br/>\r\n      When confirmed refresh your browser to view the updates.<br/><br/>\r\n      Transaction id: {this.props.txid}\r\n      {content}\r\n    </section>\r\n    <footer class=\"modal-card-foot\">\r\n      <button class=\"button is-success\">View in Etherscan</button>\r\n      <button class=\"button\">Close</button>\r\n    </footer>\r\n  </div>\r\n</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TxConfirmation;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport '../index.css';\r\n\r\nimport Table from './table.js';\r\nimport Header from '../common/header.js'\r\nimport { Link } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\n\r\nimport constants from '../common/constant.js'\r\nimport util from '../common/util.js'\r\nimport TxConfirmation from '../common/txconfirmation.js'\r\nimport _ from 'lodash'\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        address: '',\r\n        balance: 0,\r\n        customerLedger: [],\r\n        merchantLedger: [],\r\n        customerLedgerLength: 0,\r\n        merchantLedgerLength: 0,\r\n        funds: 0,\r\n\r\n        profileName: 'Loading...',\r\n        profileInfo: 'Loading...',\r\n\r\n        customerLedgerName: [],\r\n        merchantLedgerName: [],\r\n\r\n        customerStart: 0,\r\n        merchantStart: 0,\r\n        customerEnd: 0,\r\n        merchantEnd: 0,\r\n\r\n        sentid: null,\r\n        receiveid: null\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const sentid = urlParams.get('sent');\r\n    const receiveid = urlParams.get('receive');\r\n    const popup = urlParams.get('popup');\r\n\r\n    console.log(sentid)\r\n    this.setState({\r\n      sentid: sentid,\r\n      receiveid: receiveid\r\n    })\r\n  \r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try { \r\n           window.ethereum.enable().then(() => {\r\n               // User has allowed account access to DApp...\r\n\r\n              //Load contract\r\n            const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n            const profile_contract = web3.eth.contract(constants.profile_abi).at(constants.profile_address)\r\n            //Save state\r\n            this.setState({\r\n              address: web3.eth.accounts[0],\r\n              contract: contract,\r\n              profile_contract: profile_contract\r\n            })\r\n            \r\n             //Get ETH balance of address\r\n            web3.eth.getBalance(web3.eth.accounts[0], (error, result) => {\r\n                this.setState({balance: web3.fromWei(result, \"ether\").toNumber()})\r\n             });\r\n\r\n\r\n\r\n             //get the profile info of address\r\n            profile_contract.getProfileLength.call(web3.eth.accounts[0], (error, result) => {\r\n              //console.log(`Length of profile info ${result}`);\r\n              if (parseInt(result) === 0){\r\n                this.setState({\r\n                  profileName: 'Empty',\r\n                  profileInfo: ''\r\n                })\r\n                return\r\n              }\r\n              //Then load profile info. Get last profile from array \r\n              profile_contract.ProfileDB.call(web3.eth.accounts[0], (result - 1), (error, result) => {\r\n                this.setState({\r\n                  profileName: result[0],\r\n                  profileInfo: result[1]\r\n                })\r\n              })\r\n            })\r\n\r\n            contract.EscrowFee.call(web3.eth.accounts[0], (error, result) => {\r\n              this.setState({fee: result/10.0})\r\n              //console.log(`fee ${result}`)\r\n            });\r\n\r\n            \r\n            contract.Funds.call(web3.eth.accounts[0], (error, result) => {\r\n              this.setState({funds: result/(10**18)})\r\n              //console.log(`funds ${result}`)\r\n            });\r\n\r\n          //Get length of customer ledger\r\n          this.state.contract.getCustomerLedgerLength.call(web3.eth.accounts[0], (error, result) => {\r\n            //console.log(`customer ledger length ${result}`)\r\n            let customerStart\r\n            if (sentid !== null && parseInt(sentid) < parseInt(result)){\r\n              console.log(sentid)\r\n              \r\n              this.setState({\r\n                customerLedgerLength: parseInt(result),\r\n                customerStart: parseInt(sentid),\r\n              });\r\n              customerStart = parseInt(sentid)\r\n            }\r\n\r\n            else{\r\n              this.setState({\r\n                customerLedgerLength: parseInt(result),\r\n                customerStart: parseInt(result) - 1,\r\n              });\r\n\r\n              customerStart = parseInt(result) - 1\r\n            }\r\n\r\n            this.loadCustomerLedger(customerStart)\r\n            })\r\n\r\n            //Get length of merchant ledger\r\n            contract.getMerchantLedgerLength.call(web3.eth.accounts[0], (error, result) => {\r\n              //console.log(`merchant ledger length ${result}`)\r\n              if (receiveid !== null && parseInt(receiveid) < parseInt(result)){\r\n                this.setState({\r\n                  merchantLedgerLength: parseInt(result),\r\n                  merchantStart: parseInt(receiveid),\r\n                });\r\n              }\r\n  \r\n              else{\r\n                this.setState({\r\n                  merchantLedgerLength: parseInt(result),\r\n                  merchantStart: parseInt(result) - 1,\r\n                });\r\n              }\r\n\r\n              \r\n            this.loadMerchantLedger()\r\n            });\r\n\r\n\r\n\r\n            //On address change, reload page.\r\n              setInterval(() => {\r\n                if (web3.eth.accounts[0] !== this.state.address) {\r\n                  window.location.href = '/dashboard';\r\n                }\r\n              }, 100);\r\n           });\r\n           \r\n        } catch(e) {\r\n           // User has denied account access to DApp...\r\n        }\r\n     }\r\n\r\n     else {\r\n        window.location.href = \"/login\";\r\n     }\r\n}\r\n\r\n  loadMerchantLedger(){\r\n    const web3 = new Web3(window.ethereum);\r\n    this.setState({\r\n      merchantEnd: (this.state.merchantStart + 1 - constants.page_size) < 0 ? 0 : (this.state.merchantStart + 1 - constants.page_size)\r\n    })\r\n    \r\n    //Loop through customer ledger from the end of list, get individual transaction id\r\n    this.setState({\r\n    merchantLedger: [],\r\n    merchantLedgerName: []\r\n  })\r\n    \r\n    for (let i = this.state.merchantStart; i >= this.state.merchantEnd; i--){\r\n      this.state.contract.MerchantLedger.call(web3.eth.accounts[0],i, (error, id) => {\r\n\r\n        //For individual transaction id, get the transaction from TransactionLedger\r\n        this.state.contract.getTransaction.call(id, (error, result) => {\r\n\r\n          const transact = util.returnTxMap(i,result)\r\n          let newLedger = this.state.merchantLedger;\r\n          newLedger.push(transact);\r\n          \r\n\r\n          //After loading the final transact, sort the transact array \r\n          if (newLedger.length === (1 + this.state.merchantStart - this.state.merchantEnd)){\r\n            //console.log(newLedger.length)\r\n            // newLedger = _.sortBy(newLedger, \"id\").reverse()\r\n            //Run another function to add names to the transaction array object\r\n            this.setState({merchantLedger: newLedger})\r\n            console.log('load name' + newLedger.length)\r\n \r\n            this.loadBuyerUserNames()\r\n            \r\n          }\r\n        })\r\n      })\r\n    }\r\n            \r\n  }\r\n\r\n  loadCustomerLedger(customerStart){\r\n    const web3 = new Web3(window.ethereum);\r\n    this.setState({\r\n      customerEnd: (customerStart + 1 - constants.page_size) < 0 ? 0 : (this.state.customerStart + 1 - constants.page_size)\r\n    })\r\n    let customerEnd = (customerStart + 1 - constants.page_size) < 0 ? 0 : (this.state.customerStart + 1 - constants.page_size)\r\n    console.log(customerStart)\r\n    console.log(customerEnd)\r\n    \r\n    //Loop through customer ledger from the end of list, get individual transaction id\r\n    this.setState({\r\n    customerLedger: [],\r\n    customerLedgerName: []\r\n    })\r\n    \r\n    \r\n    for (let i = customerStart; i >= customerEnd; i--){\r\n      this.state.contract.CustomerLedger.call(web3.eth.accounts[0],i, (error, id) => {\r\n        //console.log(id)\r\n\r\n        //For individual transaction id, get the transaction from TransactionLedger\r\n        this.state.contract.getTransaction.call(id, (error, result) => {\r\n\r\n          const transact = util.returnTxMap(i,result)\r\n          let newLedger = this.state.customerLedger;\r\n          newLedger.push(transact);\r\n          \r\n\r\n          //After loading the final transact, sort the transact array \r\n          if (newLedger.length === (1 + customerStart - customerEnd)){\r\n            //console.log(newLedger.length)\r\n            // newLedger = _.sortBy(newLedger, \"id\").reverse()\r\n            //Run another function to add names to the transaction array object\r\n            this.setState({customerLedger: newLedger})\r\n            console.log('load name' + newLedger.length)\r\n        \r\n            this.loadSellerUserNames()\r\n            \r\n          }\r\n        })\r\n      })\r\n    }\r\n            \r\n  }\r\n\r\n  loadBuyerUserNames222(){\r\n    console.log('transact len' + this.state.merchantLedger.length)\r\n   // console.log(txs)\r\n    for (let i = 0; i < this.state.merchantLedger.length; i++){\r\n\r\n    //get the profile info of address\r\n    this.state.profile_contract.getProfileLength.call(this.state.merchantLedger[i].Receiver, (error, result) => {\r\n    //console.log(`Length of profile info ${result}`);\r\n    if (parseInt(result) === 0)\r\n      {\r\n        this.state.merchantLedger[i].sellerName = '';\r\n        let a = this.state.merchantLedgerName.push(this.state.merchantLedger[i])\r\n        console.log(a)\r\n      }\r\n    \r\n    else {\r\n    //Then load profile info. Get last profile from array \r\n    this.state.profile_contract.ProfileDB.call(this.state.merchantLedger[i].Receiver, (result - 1), (error, result) => {\r\n      this.state.merchantLedger[i].sellerName = result[0]\r\n      let a = this.state.merchantLedgerName\r\n      a.push(this.state.merchantLedger[i])\r\n      this.setState({\r\n        merchantLedgerName: a\r\n      })\r\n      console.log('setname runs')\r\n      if (this.state.merchantLedgerName.length === this.state.merchantLedger.length){\r\n        let newLedger = _.sortBy(this.state.merchantLedgerName, \"id\").reverse()\r\n        this.setState({\r\n          merchantLedgerName: newLedger\r\n        })\r\n      }  \r\n    })\r\n    }\r\n\r\n    })\r\n  }\r\n}\r\n\r\n\r\n  loadSellerUserNames(){\r\n    console.log('transact len' + this.state.customerLedger.length)\r\n   // console.log(txs)\r\n    for (let i = 0; i < this.state.customerLedger.length; i++){\r\n\r\n    //get the profile info of address\r\n    this.state.profile_contract.getProfileLength.call(this.state.customerLedger[i].Receiver, (error, result) => {\r\n    //console.log(`Length of profile info ${result}`);\r\n    if (parseInt(result) === 0)\r\n      {\r\n        this.state.customerLedger[i].sellerName = '';\r\n        let a = this.state.customerLedgerName.push(this.state.customerLedger[i])\r\n        console.log(a)\r\n      }\r\n    \r\n    else {\r\n    //Then load profile info. Get last profile from array \r\n    this.state.profile_contract.ProfileDB.call(this.state.customerLedger[i].Receiver, (result - 1), (error, result) => {\r\n      this.state.customerLedger[i].sellerName = result[0]\r\n      let a = this.state.customerLedgerName\r\n      a.push(this.state.customerLedger[i])\r\n      this.setState({\r\n        customerLedgerName: a\r\n      })\r\n      console.log('setname runs')\r\n      if (this.state.customerLedgerName.length === this.state.customerLedger.length){\r\n        let newLedger = _.sortBy(this.state.customerLedgerName, \"id\").reverse()\r\n        this.setState({\r\n          customerLedgerName: newLedger\r\n        })\r\n      }  \r\n    })\r\n    }\r\n\r\n    })\r\n  }\r\n}\r\n\r\n\r\nloadBuyerUserNames(){\r\n  for (let i = 0; i < this.state.merchantLedger.length; i++){\r\n\r\n  //get the profile info of address\r\n  this.state.profile_contract.getProfileLength.call(this.state.merchantLedger[i].buyer, (error, result) => {\r\n  //console.log(`Length of profile info ${result}`);\r\n  if (parseInt(result) === 0)\r\n    {\r\n      this.state.merchantLedger[i].buyerName = '';\r\n      let a = this.state.merchantLedgerName.push(this.state.merchantLedger[i])\r\n      console.log(a)\r\n    }\r\n  \r\n  else {\r\n  //Then load profile info. Get last profile from array \r\n  this.state.profile_contract.ProfileDB.call(this.state.merchantLedger[i].buyer, (result - 1), (error, result) => {\r\n    this.state.merchantLedger[i].buyerName = result[0]\r\n    let a = this.state.merchantLedgerName\r\n    a.push(this.state.merchantLedger[i])\r\n    this.setState({\r\n      merchantLedgerName: a\r\n    })\r\n\r\n    if (this.state.merchantLedgerName.length === this.state.merchantLedger.length){\r\n      let newLedger = _.sortBy(this.state.merchantLedgerName, \"id\").reverse()\r\n      this.setState({\r\n        merchantLedgerName: newLedger\r\n      })\r\n    }\r\n  })\r\n  }\r\n  })\r\n}\r\n}\r\n\r\n\r\n  render() {\r\n   // console.log(this.state.customerLedger)\r\n   // console.log(this.state.customerLedgerName)\r\n    let sentNext\r\n    (this.state.customerStart - constants.page_size) <= 0 ? \r\n    sentNext = this.state.customerStart : \r\n    sentNext = this.state.customerStart - constants.page_size\r\n\r\n    let sentPrev\r\n    (this.state.customerStart + constants.page_size) >= this.state.customerLedgerLength ? \r\n    sentPrev = this.state.customerLedgerLength - 1 : \r\n    sentPrev = this.state.customerStart + constants.page_size\r\n\r\n    let receiveNext\r\n    (this.state.merchantStart - constants.page_size) <= 0 ? \r\n    receiveNext = this.state.merchantStart : \r\n    receiveNext = this.state.merchantStart - constants.page_size\r\n\r\n    let receivePrev\r\n    (this.state.merchantStart + constants.page_size) >= this.state.merchantLedgerLength ? \r\n    receivePrev = this.state.merchantLedgerLength - 1 : \r\n    receivePrev = this.state.merchantStart + constants.page_size\r\n\r\n    const sentNextUrl = `/dashboard?sent=${sentNext}&receive=${this.state.merchantStart}`\r\n    const sentPrevUrl = `/dashboard?sent=${sentPrev}&receive=${this.state.merchantStart}`\r\n    const receiveNextUrl = `/dashboard?receive=${receiveNext}&sent=${this.state.customerStart}`\r\n    const receivePrevUrl = `/dashboard?receive=${receivePrev}&sent=${this.state.customerStart}`\r\n\r\n    return (\r\n      <div>\r\n      <Header/>\r\n      <section className=\"section\">\r\n      \r\n     \r\n      <div className=\"container\" style={{width: 960}}>\r\n      <div className=\"columns\">\r\n      <div className=\"column is-one-third\">\r\n        \r\n        <FundsAvailable balance={this.state.balance}/>\r\n        <WithdrawFunds funds={this.state.funds} contract={this.state.contract} address={this.state.address}/>\r\n        <Profile profileName={this.state.profileName} profileInfo={this.state.profileInfo} address={this.state.address}/>\r\n        <SendPayment disabled={this.state.profileName === 'Empty' ? true : false}/>\r\n          </div>\r\n        \r\n        <div className=\"column\">\r\n\r\n\r\n\r\n        <div className=\"box\">\r\n\r\n\r\n       \r\n        <Table customerLedger={this.state.customerLedgerName} merchantLedger={this.state.merchantLedgerName} type={'sent'}/>\r\n        <br/>\r\n        <nav className=\"pagination is-centered is-small\" role=\"navigation\" aria-label=\"pagination\">\r\n        <Link to={sentPrevUrl} onClick={() => \r\n          {\r\n            setTimeout(() => {\r\n              this.componentDidMount()\r\n            }, 100)\r\n          }\r\n          }><a className=\"pagination-previous\">Previous</a></Link>\r\n        <Link to={sentNextUrl} onClick={() => \r\n          {\r\n            setTimeout(() => {\r\n              this.componentDidMount()\r\n            }, 100)\r\n          }\r\n          }><a className=\"button pagination-next\">Next page</a></Link>\r\n  \r\n        </nav>\r\n        </div>\r\n\r\n\r\n        <div className=\"box\">\r\n\r\n\r\n       \r\n        <Table customerLedger={this.state.customerLedgerName} merchantLedger={this.state.merchantLedgerName} type={'received'}/>\r\n        <br/>\r\n        <nav className=\"pagination is-centered is-small\" role=\"navigation\" aria-label=\"pagination\">\r\n        <Link to={receivePrevUrl} onClick={() => {\r\n            setTimeout(() => {\r\n              this.componentDidMount()\r\n            }, 100)\r\n          }}><a className=\"pagination-previous\">Previous</a></Link>\r\n        <Link to={receiveNextUrl} onClick={() => {\r\n            setTimeout(() => {\r\n              this.componentDidMount()\r\n            }, 100)\r\n          }}><a className=\"pagination-next\">Next page</a></Link>\r\n  \r\n        </nav>\r\n        </div>\r\n\r\n        </div>\r\n        </div>\r\n        </div>\r\n        \r\n        </section>\r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nclass Profile extends Component {\r\n\r\n  render() {\r\n    const profile_link = `/profile?address=${this.props.address}`\r\n    return (\r\n      <div className=\"box\">\r\n        <p className=\"is-size-4 has-text-weight-semibold\">Your Profile</p>\r\n        <br/>\r\n        <p>{this.props.profileName}</p>\r\n        <p>{this.props.profileInfo}</p>\r\n        <br/>\r\n        <p className=\"buttons is-centered\">\r\n        <Link to=\"/activity/set_profile\"><p className=\"button is-primary\">Update Profile</p></Link>\r\n        &nbsp;\r\n        <Link to={profile_link}><p className=\"button is-primary\">View Profile</p></Link>\r\n        </p>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass FundsAvailable extends Component {\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"box\">\r\n        <p className=\"is-size-4 has-text-weight-semibold\">Address Balance</p>\r\n        <br/>\r\n        <p className=\"is-size-3\"><a className=\"has-text-dark\" href=\"#\" title={this.props.balance}>\r\n          {+(this.props.balance).toFixed(10)}</a> ETH</p>\r\n        <br/>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass WithdrawFunds extends Component {\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div className=\"box\">\r\n      <p className=\"is-size-4 has-text-weight-semibold\">XBORDER Funds</p> \r\n      <br/>\r\n      <p className=\"is-size-3\"><a className=\"has-text-dark\" href=\"#\" title={this.props.funds}>\r\n        {+(this.props.funds).toFixed(10)}</a> ETH</p>\r\n      <br/>\r\n      <a className=\"button is-primary\" onClick={() => {\r\n        this.props.contract.withdraw.sendTransaction({\r\n          from: this.props.address,\r\n          gas:350000,\r\n        gasPrice: 88000000000\r\n        },\r\n        (error, result) => {\r\n          \r\n\r\n          //console.log(result)\r\n        })}}>\r\n        Withdraw Funds</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SendPayment extends Component {\r\n\r\n  render() {\r\n\r\n    if (this.props.disabled === true){\r\n      return (\r\n        <div className=\"box\">\r\n  \r\n        <p className=\"is-size-4 has-text-weight-semibold\">Payments</p><br/>\r\n        <p>Send payment for goods or services with Senderprotection.</p><br/>\r\n        <Link to=\"/activity/send_payment\"><button className=\"button is-primary\" disabled>Send Payment</button></Link>\r\n        <p className=\"is-size-7\">Please set your profile info to use XBORDER</p>\r\n        </div>\r\n   \r\n  \r\n      );\r\n    }\r\n\r\n    else{\r\n      return (\r\n        <div className=\"box\">\r\n  \r\n        <p className=\"is-size-4 has-text-weight-semibold\">Payments</p><br/>\r\n        <p>Send payment for goods or services with Senderprotection.</p><br/>\r\n        <Link to=\"/activity/send_payment\"><p className=\"button is-primary\">Send Payment</p></Link>\r\n        </div>\r\n   \r\n  \r\n      );\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nclass CreateInvoice extends Component {\r\n\r\n  render() {\r\n    const url = `/activity/create_invoice/${this.props.address}`\r\n    return (\r\n      <div className=\"box\">\r\n\r\n        <p className=\"is-size-4 has-text-weight-semibold\">Invoicing</p><br/>\r\n        <p>Your customers can pay you through the invoice link you send them.</p><br/>\r\n        <Link to={url}><p className=\"button is-primary\">Create Invoice</p></Link>\r\n        </div>\r\n \r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport Header from '../common/header.js'\r\nimport Web3 from 'web3';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport constants from '../common/constant.js'\r\nimport util from '../common/util.js'\r\n\r\nexport default class TransactionDetails extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      buyerName: '',\r\n      sellerName: '',\r\n      escrowName: '',\r\n      transact: util.txTemplate(),\r\n      txid: 0,\r\n      buyerTxCount: '',\r\n      sellerTxCount: '',\r\n      escrowTxCount: '',\r\n      ledgerid: 0\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n  console.log(this.props.match.params.id) \r\n  this.setState({\r\n    txid: this.props.match.params.id,\r\n    type: this.props.match.params.type\r\n  })\r\n  if (window.ethereum) {\r\n      const web3 = new Web3(window.ethereum);\r\n      try { \r\n         window.ethereum.enable().then(() => {\r\n             // User has allowed account access to DApp...\r\n            const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n            const user_contract = web3.eth.contract(constants.profile_abi).at(constants.profile_address)\r\n             \r\n            this.setState({\r\n              address: web3.eth.accounts[0],\r\n              contract: contract,\r\n              user_contract: user_contract\r\n            })\r\n\r\n            console.log(web3.eth.accounts[0])\r\n            console.log(this.props.match.params.id)\r\n            \r\n              contract.CustomerLedger.call(web3.eth.accounts[0],this.props.match.params.id, (error, id) => {\r\n\r\n                //For individual transaction id, get the transaction from TransactionLedger\r\n                contract.getTransaction.call(id, (error, result) => {\r\n                console.log(result)\r\n                const transact = util.returnTxMap(id,result)\r\n                this.setState({\r\n                  transact: transact,\r\n                  ledgerid: id\r\n                })\r\n\r\n                console.log(transact)\r\n                this.loadProfileName('buyer', transact.buyer)\r\n                this.loadProfileName('Receiver', transact.Receiver)\r\n                this.loadProfileName('escrow', transact.escrow)\r\n                this.loadCount(transact.buyer, transact.Receiver, transact.escrow)\r\n\r\n              \r\n                })\r\n              })\r\n\r\n            setInterval(() => {\r\n              if (web3.eth.accounts[0] !== this.state.address) {\r\n                  window.location.reload()\r\n              }\r\n            }, 100);\r\n         });\r\n         \r\n      } catch(e) {\r\n         // User has denied account access to DApp...\r\n      }\r\n   }\r\n\r\n   else {\r\n      window.location.href = \"/login\";\r\n   }\r\n}\r\n\r\n  loadProfileName(userType,address){\r\n    this.state.user_contract.getProfileLength.call(address, (error, result) => {\r\n      if (parseInt(result) === 0){\r\n        \r\n        return\r\n      }\r\n      this.state.user_contract.ProfileDB.call(address, (result - 1), (error, result) => {\r\n        switch(userType){\r\n          case 'buyer': \r\n              this.setState({buyerName: result})\r\n              break\r\n          case 'Receiver':\r\n              this.setState({sellerName: result})\r\n              break\r\n          case 'escrow':\r\n              this.setState({escrowName: result})\r\n              break\r\n          default:\r\n            break\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  loadCount(buyer, Receiver, escrow){\r\n    this.state.contract.getCustomerLedgerLength.call(buyer, (error, result) => {\r\n      this.setState({buyerTxCount: parseInt(result)})\r\n    })\r\n    this.state.contract.getMerchantLedgerLength.call(Receiver, (error, result) => {\r\n      this.setState({sellerTxCount: parseInt(result)})\r\n    })\r\n    this.state.contract.getEscrowLedgerLength.call(escrow, (error, result) => {\r\n      this.setState({escrowTxCount: parseInt(result)})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.txid)\r\n  \r\n   \r\n    let TransactionAction;\r\n    if (this.state.type === 'buyer'){\r\n      TransactionAction = <TxActionBuyer \r\n      contract={this.state.contract}\r\n      address={this.state.address}\r\n      ledgerid={this.state.ledgerid}\r\n      transact={this.state.transact}\r\n      />\r\n    } else {\r\n      TransactionAction = <TxActionSeller \r\n      contract={this.state.contract}\r\n      address={this.state.address}\r\n      ledgerid={this.state.ledgerid}\r\n      transact={this.state.transact}\r\n      />\r\n    }\r\n\r\n    const buyer_profile_url = `/profile?address=${this.state.transact['buyer']}`\r\n    const seller_profile_url = `/profile?address=${this.state.transact['Receiver']}`\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        \r\n      <section className=\"section\">\r\n      <div className=\"container\" style={{width:790}}>\r\n      <a className=\"has-text-left\" onClick={() => window.history.back()}>&larr; Back to Dashboard</a>\r\n      </div>\r\n      \r\n      <br/>\r\n\r\n      <div className=\"container box\" style={{width:800}}>\r\n      \r\n      <nav className=\"level\">\r\n      <div className=\"level-left\">\r\n        <div className=\"level-item\">\r\n        <p>Transaction Details</p>\r\n        \r\n        </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n        <div className=\"level-item\">\r\n        <p>Payment sent 08/6/2020 11:56am</p>\r\n        \r\n        </div>\r\n        </div>\r\n        </nav>\r\n        <hr></hr>\r\n        <p className=\"has-text-centered is-size-3\">{this.state.transact.value} ETH</p>\r\n\r\n        <div className=\"columns\">\r\n\r\n        <div className=\"column has-text-left\">\r\n       \r\n        <b>Payment from</b>\r\n        <p>{this.state.buyerName[0]}</p>\r\n        <p>{this.state.buyerTxCount} completed payments</p>\r\n        </div>\r\n        <div className=\"column is-narrow\"><br/>\r\n          <span className=\"icon\">\r\n          <i className=\"fas fa-arrow-right\"></i>\r\n          </span>\r\n          </div>\r\n        <div className=\"column has-text-right\"> \r\n        <b>Payment to</b>\r\n        <p>{this.state.sellerName[0]}</p>\r\n        <p>{this.state.sellerTxCount} completed transactions</p>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"has-text-centered\">\r\n        <b>Escrowed By</b>\r\n        <p>{this.state.escrowName[0]}</p>\r\n        <p>{this.state.escrowTxCount} transactions escrowed</p>\r\n        </div>\r\n        <br/>\r\n        <div className=\"buttons is-centered\">\r\n        <Link to={buyer_profile_url}><p className=\"button is-primary\">\r\n          <span className=\"icon\">\r\n          <i className=\"far fa-user\"></i>\r\n          </span>\r\n          <span>View SenderProfile</span>\r\n        </p></Link>\r\n        &nbsp;\r\n        <Link to={seller_profile_url}>\r\n        <p className=\"button is-primary\">\r\n          <span className=\"icon\">\r\n          <i className=\"far fa-user\"></i>\r\n          </span>\r\n          <span>View Receiver Profile</span>\r\n        </p></Link>\r\n      \r\n        </div>\r\n\r\n        <hr></hr>\r\n\r\n        <b>Payment Details</b><br/><br/>\r\n\r\n\r\n    \r\n        <table className=\"table\">\r\n          <tbody>\r\n          <tr>\r\n          <th style={{width:150}}>Gross Amount</th>\r\n          <td>{this.state.transact.value} ETH</td>\r\n          </tr>\r\n          <tr>\r\n          <th>Fee</th>\r\n          <td>{this.state.transact.fee} ETH</td>\r\n          </tr>\r\n      \r\n          <tr>\r\n          <th>Net amount</th>\r\n          <td>{this.state.transact.value - this.state.transact.fee} ETH</td>\r\n          </tr>\r\n\r\n          \r\n          <tr>\r\n          <th>Note from buyer</th>\r\n          <td>\r\n            {this.state.transact.notes}\r\n          </td>\r\n          </tr>\r\n          </tbody>\r\n          </table>\r\n        <hr/>\r\n       \r\n       \r\n        <p className=\"has-text-left\">Transaction Status</p>\r\n       <br/>\r\n       <p className=\"buttons is-centered\">\r\n        <button className=\"button is-primary is-large\">\r\n          <span className=\"icon\">\r\n          <i className=\"fas fa-plane\"></i>\r\n          </span>\r\n          <span>{this.state.transact.status}</span>\r\n        </button>\r\n        </p>\r\n        <hr/>\r\n        {TransactionAction}\r\n\r\n        </div>\r\n        </section>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nclass TxActionSeller extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <p className=\"has-text-left\">Transaction Action</p>\r\n      <br/>\r\n     \r\n      <p className=\"buttons is-centered\">\r\n      <RefundButton \r\n      contract={this.props.contract}\r\n      address={this.props.address}\r\n      txid={this.props.ledgerid}\r\n      transact={this.props.transact}/>\r\n\r\n      <RaiseDisputeButton\r\n       contract={this.props.contract} \r\n       address={this.props.address} \r\n       txid={this.props.ledgerid}\r\n       transact={this.props.transact}/>\r\n\r\n       </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TxActionBuyer extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n      <p className=\"has-text-left\">Transaction Action</p>\r\n      <br/>\r\n      <p className=\"buttons is-centered\">\r\n      <ReleaseFundsButton \r\n      contract={this.props.contract}\r\n      address={this.props.address}\r\n      txid={this.props.ledgerid}\r\n      transact={this.props.transact}\r\n      />\r\n      <RaiseDisputeButton \r\n      contract={this.props.contract}\r\n      address={this.props.address}\r\n      txid={this.props.ledgerid}\r\n      transact={this.props.transact}\r\n      />\r\n\r\n       </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ReleaseFundsButton extends Component {\r\n  releaseFunds(){\r\n    const web3 = new Web3(window.ethereum)\r\n    const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n    console.log(this.props.txid)\r\n    contract.releaseFunds.sendTransaction(\r\n      this.props.txid,\r\n      {\r\n        from: this.props.address,\r\n        gas:350000,\r\n      gasPrice: 88000000000\r\n      },\r\n      (error, result) => {\r\n        console.log(result)\r\n      }\r\n    )\r\n  }\r\n  \r\n    render() {\r\n\r\n      if (this.props.transact.status === util.status()[0] || this.props.transact.status === util.status()[3]){\r\n        return (\r\n          <button className=\"button is-primary\" onClick={this.releaseFunds.bind(this)}>\r\n          <span className=\"icon\">\r\n          <i className=\"fas fa-dollar-sign\"></i>\r\n          </span>\r\n          <span>Release Funds</span>\r\n          </button>\r\n        );\r\n      }\r\n\r\n      else{\r\n        return (\r\n          <button className=\"button is-primary\" disabled>\r\n          <span className=\"icon\">\r\n          <i className=\"fas fa-dollar-sign\"></i>\r\n          </span>\r\n          <span>Release Funds</span>\r\n          </button>\r\n        );\r\n      }\r\n\r\n     \r\n    }\r\n  }\r\n\r\n  class RefundButton extends Component {\r\n    refund(){\r\n      const web3 = new Web3(window.ethereum)\r\n      const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n      console.log(this.props.txid)\r\n      contract.refundCustomer.sendTransaction(\r\n        this.props.txid,\r\n        {\r\n          from: this.props.address\r\n        },\r\n        (error, result) => {\r\n          console.log(result)\r\n        }\r\n      )\r\n    }\r\n    \r\n      render() {\r\n\r\n        if (this.props.transact.status === util.status()[0] || this.props.transact.status === util.status()[3]){\r\n          return (\r\n            <a className=\"button is-primary\" onClick={this.refund.bind(this)}>\r\n            <span className=\"icon\">\r\n            <i className=\"fas fa-dollar-sign\"></i>\r\n            </span>\r\n            <span>Refund Buyer</span>\r\n            </a>\r\n          );\r\n        }\r\n\r\n        else{\r\n          return (\r\n            <a className=\"button is-primary\" disabled>\r\n            <span className=\"icon\">\r\n            <i className=\"fas fa-dollar-sign\"></i>\r\n            </span>\r\n            <span>Refund Buyer</span>\r\n            </a>\r\n          );\r\n        }\r\n\r\n\r\n      }\r\n    }\r\n\r\nclass RaiseDisputeButton extends Component {\r\n    raiseDispute(){\r\n      const web3 = new Web3(window.ethereum)\r\n      const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n      console.log(this.props.txid)\r\n      contract.raiseDispute.sendTransaction(\r\n        this.props.txid,\r\n        {\r\n          from: this.props.address\r\n        },\r\n        (error, result) => {\r\n          console.log(result)\r\n        }\r\n      )\r\n    }\r\n    \r\n      render() {\r\n\r\n        if (this.props.transact.status === util.status()[0] || this.props.transact.status === util.status()[3]){\r\n          return ( \r\n            <a className=\"button is-info\" onClick={this.raiseDispute.bind(this)}>\r\n            <span className=\"icon\">\r\n            <i className=\"fas fa-phone\"></i>\r\n            </span>\r\n            <span>Raise Dispute</span>\r\n            </a>\r\n          );\r\n        }\r\n        \r\n        else{\r\n          return ( \r\n            <a className=\"button is-info\" disabled>\r\n            <span className=\"icon\">\r\n            <i className=\"fas fa-phone\"></i>\r\n            </span>\r\n            <span>Raise Dispute</span>\r\n            </a>\r\n          );\r\n        }\r\n        \r\n      }\r\n    }","import React, { Component } from 'react';\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport '../App.css';\r\n\r\nconst HomeContainer = styled(Navbar)`\r\nbox-shadow: inset 0px -1px 0px #f3f3f4;\r\nbackground: #002C73;\r\nheight: 60px ;\r\ncolor: #6e6d7a ;\r\nposition: sticky ;\r\n\r\n@media (max-width: 992px) {\r\n  & {\r\n    position: static;\r\n    height: 60px ;\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst Logo = styled(Image)`\r\nwidth: 12rem ;\r\nheight: auto;\r\n`;\r\n\r\nexport default function MainNav() {\r\n\r\n    return (\r\n\r\n\r\n<HomeContainer expand=\"lg\" >\r\n<Container>\r\n  <Navbar.Brand className=\"mr-auto\" href=\"/\">\r\n    <Logo src={require(\"../assets/cover.png\")} alt=\"logo\"/>\r\n  </Navbar.Brand>\r\n  <Nav >\r\n    <ButtonGroup\r\n      className=\"d-none d-lg-block d-xl-block ml-3 \"\r\n      variant=\"primary\"\r\n    >\r\n      <Button href=\"/\">Home</Button>\r\n      <Button href=\"/info\">Info</Button>\r\n      <Button href=\"/login\">Connect</Button>\r\n    </ButtonGroup>\r\n    \r\n  </Nav>\r\n</Container>\r\n</HomeContainer>\r\n\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport styled from \"styled-components\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\n//import '../App.css';\r\nimport MainNav from './MainNav'\r\nimport {SocialMediaIconsReact} from 'social-media-icons-react';\r\n\r\n\r\nconst MainJumbotron = styled(Jumbotron)`\r\nbackground: #f9f8fd;\r\n`;\r\n\r\nconst MainContainer = styled(Container)`\r\ndisplay: flex;\r\nflex-flow: column-reverse;\r\nalign-items: center;\r\n\r\n@media (min-width: 992px) {\r\n  & {\r\n    flex-flow: row;\r\n  }\r\n}\r\n`;\r\n\r\nconst MainImage = styled(Image)`\r\n@media (max-width: 576px) {\r\n  max-width: 100%;\r\n}\r\n@media (min-width: 576px) {\r\n  width: 400px;\r\n}\r\n@media (min-width: 768px) {\r\n  width: 450px;\r\n}\r\n@media (min-width: 1200px) {\r\n  width: 100%;\r\n}\r\n`;\r\n\r\nconst CreditsText = styled.p`\r\ncolor: #9e9ea7;\r\n\r\n& a {\r\n  color: #9e9ea7;\r\n}\r\n`;\r\n\r\n\r\n\r\nexport default function Home() {\r\n  \r\n  return (\r\n    \r\n   \r\n\r\n\r\n<section >\r\n\r\n    <Section1/>\r\n\r\n  <Section3/>\r\n  <Section4/>\r\n  <Section2/>\r\n\r\n  <Section6/>\r\n  <DevSection/>\r\n  <Section5/>\r\n</section>\r\n\r\n);\r\n}\r\n\r\n\r\n\r\n\r\nclass Section1 extends Component {\r\n\r\nrender() {\r\n\r\n\r\nreturn (\r\n<MainJumbotron fluid>\r\n      <MainContainer className=\"d-flex align-items-center text-center text-lg-left\">\r\n        <div id=\"text-container\">\r\n          <h1 className=\"display-4 font-weight-bold\">\r\n          The distinguished decentralized platform for cross-border transfers\r\n          </h1>\r\n          <p className=\"lead font-weight-normal\">\r\n            XBORDER enables international money transfer through the use of decentralized Chainlink oracles providing data for Ethereum smart contracts.\r\n          </p>\r\n          <Button variant=\"primary\" size=\"lg\" role=\"button\" href=\"/login\">\r\n            Connect using Metamask\r\n          </Button>\r\n        </div>\r\n        <div id=\"image-container\" className=\"ml-md-5\">\r\n          <MainImage\r\n            src=\"https://chain.link/assets/images/payments-api-diagram-e6ec6879.png\"\r\n            alt=\"diagram\"\r\n          />\r\n          <CreditsText className=\"text-center text-lg-right my-3\">\r\n            Source{\" \"}\r\n            <a href=\"https://chain.link/\" target=\"_blank\" rel=\"noopener noreferrer\" >\r\n              <u>Chainlink</u>\r\n            </a>\r\n          </CreditsText>\r\n        </div>\r\n      </MainContainer>\r\n    </MainJumbotron>\r\n);\r\n}\r\n\r\n}\r\n\r\nclass Section2 extends Component {\r\n\r\nrender() {\r\n\r\n\r\nreturn (\r\n<section className=\"container\">\r\n    <br/>\r\n    <br/>\r\n<div className=\"content has-text-centered\"><h1>Benefits of XBORDER</h1></div>\r\n<div className=\"columns features\">\r\n    <div className=\"column is-4\">\r\n        <div className=\"card is-shady\">\r\n            <div className=\"card-image has-text-centered\">\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <div className=\"content\">\r\n                    <h4>Secure Payments</h4>\r\n                    <p>\r\n                        Money transfer using Ether will make remittance payment safer than ever. Unlike normal normal remittance payments,\r\n                        payments are held in escrow using an Ethereum smart contract.\r\n                        <br/><br/>\r\n                        \r\n                        Funds from transactions are released when the system is absolutely sure it can make the transactions.\r\n                        \r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"column is-4\">\r\n        <div className=\"card is-shady\">\r\n            <div className=\"card-image has-text-centered\">\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <div className=\"content\">\r\n                    <h4>No bank account need</h4>\r\n                    <p>\r\n                    Another key obstacle to the payment of remittances via formal banking channels is that the recipient needs to have a banking account to receive the payment. <br/><br/>\r\n                    \r\n                    The unfortunate reality is that the vast majority of people receiving the money do not have bank accounts. Even if they do, many live in rural areas and have to travel long distances to get to the nearest bank branch to collect their money.  As a result, many remittances are made using informal channels.\r\n                    <br/><br/>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"column is-4\">\r\n        <div className=\"card is-shady\">\r\n            <div className=\"card-image has-text-centered\">\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <div className=\"content\">\r\n                    <h4>Maximum security with minimised costs</h4>\r\n                    <p>\r\n                    Exclusion of third parties reduces cost of processing payment and turnaround time for settlement (TAT), also eliminating the risk of discrepancies in record keeping. This is because the decentralised ledger, a feature of Blockchain inherited by smart contracts, holds irreversible and distributed record of every transaction available for all peers to see—enabling real time security<br/><br/>\r\n                        <br/><br/>\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br/>\r\n</section>\r\n);\r\n}\r\n\r\n}\r\n\r\n\r\nclass Section3 extends Component {\r\n\r\nrender() {\r\n\r\n\r\nreturn (\r\n<div className=\"hero-body\">\r\n<div className=\"container has-text-centered\">\r\n    <div className=\"columns is-vcentered is-centered\">\r\n        <div className=\"column is-7\">\r\n        <h1 className=\"title is-3\">\r\n                About XBORDER\r\n            </h1>\r\n            <h2 className=\"subtitle is-5\">\r\n            </h2>\r\n            <p>XBORDER is the world's first cross-border payment processor built on Ethereum smart contracts.\r\n            This application leverage blockchain technology to minimise cost of international money transfer whilst providing highest security standards.\r\n            </p>\r\n        </div>\r\n        \r\n    </div>\r\n</div>\r\n</div>\r\n);\r\n}\r\n\r\n}\r\n\r\n\r\nclass Section4 extends Component {\r\n\r\nrender() {\r\n\r\n\r\nreturn (\r\n<div className=\"hero-body\">\r\n<div className=\"container has-text-centered\">\r\n    <div className=\"columns is-vcentered is-centered\">\r\n    <div className=\"column is-7\">\r\n    <h1 className=\"title is-2\">Intuitive dashboard</h1>\r\n  \r\n    <figure  className=\"ml-md-5\">\r\n                <img width=\"100%\" src=\"https://chain.link/assets/images/sub-hero-chainlink-diagram-3fb7d8e9.png\" alt=\"\"/>\r\n            </figure><br/>\r\n            <p>  XBORDER is designed to be simple and intuitive for users familar with traditional payment processors, such as Paypal and Stripe. \r\n        Currently we support ETH payments, and stablecoin payments are coming soon.<br/><br/>\r\n        You can also test sending and receiving of payments on the Ropsten testnet.\r\n       </p>\r\n        <br/>\r\n            <p className=\"buttons is-centered\">\r\n            <Link to=\"/login\" className=\" button is-info is-outlined\">\r\n    View Dashboard\r\n  </Link>\r\n  \r\n  </p>\r\n \r\n  <p className=\"is-size-7\">Login with <a href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\" target=\"_blank\">metamask</a> to view the dashboard. No signup required.</p>\r\n\r\n\r\n            \r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n);\r\n}\r\n\r\n}\r\n\r\nclass Section5 extends Component {\r\n\r\nrender() {\r\n\r\n\r\nreturn (\r\n<div className=\"hero-body bg-lb\">\r\n<div className=\"container has-text-centered\">\r\n<h1 className=\"title is-3\">\r\n    Contact Us\r\n</h1>\r\n<p>Feel free to reach out if you have any questions, feedback or suggestion. Reach us on my social media: </p>\r\n            <br/>\r\n            <p className=\"buttons is-centered\">\r\n<SocialMediaIconsReact icon={\"reddit\"} size={44} roundness={30} url=\"https://www.reddit.com/r/XBORDER\"/>\r\n<SocialMediaIconsReact icon=\"twitter\" size={44} roundness={30}  url=\"https://twitter.com/XBORDER5\"/>\r\n<SocialMediaIconsReact icon=\"mail\" size={44} roundness={30}  url=\"mailto:xborderofficial@gmail.com\"/>\r\n<SocialMediaIconsReact icon=\"linkedin\" size={44} roundness={30} url=\"https://www.linkedin.com/in/-muhammadhamza\"/>\r\n<SocialMediaIconsReact icon=\"github\" size={44} roundness={30} url=\"https://github.com/hamza3256\"/>\r\n        \r\n            </p>\r\n<br/>\r\n<b>Email</b><br/> xborderofficial@gmail.com\r\n<br/>\r\n<br/>\r\n<b>Reddit</b><br/>\r\nhttps://www.reddit.com/r/XBORDER\r\n<br/>\r\n<br/>\r\n<b>Twitter</b><br/>\r\nhttps://twitter.com/XBORDER5\r\n<br/><br/>\r\n\r\n            \r\n</div>\r\n</div>\r\n);\r\n}\r\n\r\n}\r\n\r\n\r\nclass DevSection extends Component {\r\n\r\nrender() {\r\n\r\n\r\nreturn (\r\n<div className=\"hero-body\">\r\n<div className=\"container has-text-centered\">\r\n<h1 className=\"title is-3\">\r\n    Developers Section\r\n</h1>\r\n<p>View our open sourced smart contracts and technical documents.</p>\r\n<br/>\r\n<p><b>XBORDER Profile</b><br/><a href=\"https://rinkeby.etherscan.io/address/0xbB5A380E585155592Ff33dF4c50E9ff9921dC4df\">Rinkeby </a>| <a href=\"https://ropsten.etherscan.io/address/0xebEc2EAf1325bCbd0Df07cdeae57aE00bD3C6728\" target=\"_blank\">Ropsten</a></p><br/>\r\n</div>\r\n\r\n\r\n</div>\r\n);\r\n}\r\n\r\n}\r\n\r\nclass Section6 extends Component {\r\n\r\nrender() {\r\n\r\n\r\n  return (\r\n    <div className=\"hero-body bg-lb\">\r\n    <div className=\"container has-text-centered\">\r\n        <div className=\"columns is-centered\">\r\n            <div className=\"column is-7\">\r\n            <h1 className=\"title is-3\">\r\n        How XBORDER Works\r\n    </h1>\r\n    <p>\r\n       \r\n      \r\n       XBORDER initally set out to be a platform which enables cross-border payment transfers from any fiat currency, converting to Ether then transferring those Ethers to receiver's wallet. The received Ethers are then converted into a different fiat currency corresponding to the receiver.<br/><br/>\r\n        \r\n\r\n        The transaction involves holding Ethers in escrow in the Ethereum smart contract. \r\n        When the necessary checks are performed to ensure that the Ethers can be converted without any problems, the Ethers are release onto the subsequent part of the operation. \r\n        The Receiver also has the ability to refund the buyer.\r\n        <br/><br/>\r\n        If a dispute occurs, the transaction immediately stops and Ethers are held at the current place of where the error occurred. \r\n        For further information on how this application works, please visit our <Link to=\"/login\">info page</Link>.\r\n    </p>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <br/>\r\n        <img src=\"https://hackernoon.com/photos/81XqUPpcXvVvRMiScfSezcRqKy33-572349p\" width=\"800\"/>\r\n    \r\n                <br/>\r\n               \r\n    </div>\r\n</div>\r\n);\r\n}\r\n\r\n}\r\n  ","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport {SocialMediaIconsReact} from 'social-media-icons-react';\r\n\r\n\r\nclass Info extends Component {\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n        <div>\r\n        <section class=\"hero is-info\">\r\n            <div class=\"hero-body\">\r\n                <div class=\"container\">\r\n                    <h1 class=\"title\">\r\n                    More information\r\n                    </h1>\r\n                    <h2 class=\"subtitle\">\r\n                    How XBORDER was intended to work\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n    </section>\r\n    <div class=\"content container\" style={{width:800}}>\r\n    <br/>\r\n    <h1>Main idea</h1>\r\n    <p>This project began with the intention of implementing smart contracts which would have enabled peer-to-peer fiat transfers outside the current jurisdiction of the smart contract caller. The transaction was planned to involve series of processes that includes Fiat-Ether conversion, peer-to-peer Ether transfers, subsequently converting the received Ether into receiver’s fiat currency. This decentralized application makes the use of Ethereum blockchain.</p>\r\n\r\n    <h1>The inevitable issue of smart contracts</h1>\r\n    <p>Further research was done in order to find the absolute way of implementing this project and several trial-and-errors were done. Several drawbacks of smart contracts were discovered—for each apropos features that were being implemented. The major issue with the project was discovering the fact that smart contracts cannot directly interact with external data outside the blockchain. This reemphasized how immutable smart contracts really are.</p>\r\n\r\n    <h1>Current and future work</h1>\r\n    <p>External adapters were implemented that would operate on Chainlink’s node operators. These external adapters will acts as the 'bridge' between smart contracts and the external world thus enabling the XBORDER's true intention. Each node job is verified by series of decentralized oracles provided by Chainlink. These oracles provide the same security as a smart contract.</p>\r\n    \r\n    <h1></h1>\r\n    \r\n    <h4>To get in touch use the following social media platforms.</h4>\r\n    \r\n    <p className=\"buttons is-centered\">\r\n<SocialMediaIconsReact icon={\"reddit\"} size={44} roundness={30} url=\"https://www.reddit.com/r/XBORDER\"/>\r\n<SocialMediaIconsReact icon=\"twitter\" size={44} roundness={30}  url=\"https://twitter.com/XBORDER5\"/>\r\n<SocialMediaIconsReact icon=\"mail\" size={44} roundness={30}  url=\"mailto:xborderofficial@gmail.com\"/>\r\n<SocialMediaIconsReact icon=\"linkedin\" size={44} roundness={30} url=\"https://www.linkedin.com/in/-muhammadhamza\"/>\r\n<SocialMediaIconsReact icon=\"github\" size={44} roundness={30} url=\"https://github.com/hamza3256\"/>\r\n        \r\n            </p>\r\n\r\n    </div>\r\n    <br/>\r\n    \r\n   \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\nimport Header from '../common/header.js'\r\n\r\n\r\n\r\nclass Login extends Component { \r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            address: ''\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        if (window.ethereum) {\r\n            const web3 = new Web3(window.ethereum);\r\n            try { \r\n               window.ethereum.enable().then(() => {\r\n                   // User has allowed account access to DApp...\r\n                  this.setState({address: web3.eth.accounts[0]})\r\n                  setInterval(() => {\r\n                    if (web3.eth.accounts[0] !== this.state.address) {\r\n                        this.setState({address: web3.eth.accounts[0]})\r\n                    }\r\n                  }, 100);\r\n               });\r\n               \r\n            } catch(e) {\r\n               // User has denied account access to DApp...\r\n            }\r\n         }\r\n\r\n         else {\r\n            window.location.href = \"/GetMetamask\";\r\n         }\r\n    }\r\n\r\n\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    let profile_created = true;\r\n    let authorized = true;\r\n    let acc_status = [];\r\n\r\n    let profile_text;\r\n    profile_created === true ? profile_text = <p>Profile Created<span class=\"icon has-text-success\"><i class=\"fas fa-check-square\"></i></span></p> :\r\n    profile_text = <p>Profile Created<span class=\"icon has-text-warning\"><i class=\"fas fa-exclamation-triangle\"></i></span></p>\r\n\r\n    let authorized_text;\r\n    authorized === true ? authorized_text = <p>XBORDER Authorized<span class=\"icon has-text-success\"><i class=\"fas fa-check-square\"></i></span></p> :\r\n    authorized_text = <p>XBORDER Authorized<span class=\"icon has-text-warning\"><i class=\"fas fa-exclamation-triangle\"></i></span></p>\r\n\r\n    let signup_text;\r\n    if ((authorized && profile_created) === true){\r\n        \r\n        signup_text = <p>Signup Complete<span class=\"icon has-text-success\"><i class=\"fas fa-check-square\"></i></span></p>\r\n\r\n    } else{\r\n\r\n        signup_text = <p>Signup Complete<span class=\"icon has-text-warning\"><i class=\"fas fa-exclamation-triangle\"></i></span></p>\r\n\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n        <section class=\"hero is-fullheight\"><Header/>\r\n        <div class=\"hero-body\">\r\n            <div class=\"container has-text-centered\">\r\n                <div class=\"column is-6 is-offset-3\">\r\n                    <h3 class=\"title has-text-grey\">Login</h3>\r\n                    <p class=\"subtitle has-text-grey\">Login to access your dashboard</p>\r\n                    <div class=\"box\">\r\n                        \r\n                        <br/>\r\n                        \r\n                            <p className=\"has-text-centered\">{this.state.address}</p>\r\n                    \r\n                            <br/>\r\n                            <Link to=\"/dashboard\"><button class=\"button is-block is-info is-large is-fullwidth\">Login</button></Link>\r\n                       \r\n                    </div>\r\n                  \r\n                </div>\r\n            </div>\r\n        </div>\r\n        </section>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport Header from '../common/header.js'\r\nimport { Link } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\nimport constants from '../common/constant.js'\r\n\r\nclass CreateInvoice extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            ethPrice: 'Loading...',\r\n            address: '',\r\n            ethInputText: <p className=\"help\"></p>,\r\n            currency: 'eth',\r\n            modal: '',\r\n            ethAmount: 0,\r\n            usdAmount: 0,\r\n            sellerAddress: '',\r\n            addressInputText: <p className=\"help\"></p>,\r\n            name: '',\r\n            info: '',\r\n            url: ''\r\n        }\r\n        this.loadProfileInfo = this.loadProfileInfo.bind(this);\r\n        \r\n        this.LoadEthPrice = this.LoadEthPrice.bind(this);\r\n        this.updateAmountInputText = this.updateAmountInputText.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (window.ethereum) {\r\n            const web3 = new Web3(window.ethereum);\r\n            try { \r\n               window.ethereum.enable().then(() => {\r\n                   // User has allowed account access to DApp...\r\n                  const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n                  const user_contract = web3.eth.contract(constants.profile_abi).at(constants.profile_address)\r\n                  \r\n\r\n                  this.setState({\r\n                      address: web3.eth.accounts[0],\r\n                      user_contract: user_contract\r\n\r\n                    })\r\n                  setInterval(() => {\r\n                    if (web3.eth.accounts[0] !== this.state.address) {\r\n                        window.location.reload()\r\n                    }\r\n                  }, 100);\r\n               });\r\n               \r\n            } catch(e) {\r\n               // User has denied account access to DApp...\r\n            }\r\n         }\r\n    \r\n         else {\r\n            window.location.href = \"/login\";\r\n         }\r\n\r\n        this.LoadEthPrice();\r\n    }\r\n\r\n  LoadEthPrice(){\r\n    \r\n    fetch('https://api.gemini.com/v1/book/ethusd?limit_bids=1&limit_asks=1')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const price = Math.round((parseFloat(data['bids'][0]['price']) + parseFloat(data['asks'][0]['price']))/2*100)/100\r\n      this.setState({ethPrice: price});\r\n    })\r\n    .catch(error => console.error(error))\r\n  }\r\n\r\n  updateAmountInputText(){\r\n    const input = document.getElementById(\"amount\").value\r\n    if (this.checkAmountInputText()){\r\n\r\n    if (this.state.currency === 'eth'){\r\n        this.setState({\r\n            ethInputText: <p className=\"help\">{input} ETH = US$ {Math.round(input * this.state.ethPrice*100)/100}</p>,\r\n            ethAmount: parseFloat(input)\r\n        })\r\n\r\n    //Convert usd to eth\r\n    } else if (this.state.currency === 'usd'){\r\n\r\n    let ethAmount = Math.round(input/this.state.ethPrice*10000000)/10000000\r\n        this.setState({\r\n            usdAmount: input,\r\n            ethInputText: <p className=\"help\">{ethAmount} ETH = US$ {input}</p>,\r\n            ethAmount: parseFloat(ethAmount)\r\n        })\r\n    }\r\n\r\n    } \r\n  }\r\n\r\n  checkAmountInputText(){\r\n    const input = document.getElementById(\"amount\").value\r\n    if (String(parseFloat(input)) === input && String(parseFloat(input)) > 0){\r\n        return true\r\n    }\r\n    else {\r\n\r\n        return false\r\n    } \r\n  }\r\n\r\n  activateModal(){\r\n    //First check eth inputs\r\n    if (this.checkAmountInputText() === false){\r\n        //set error msg, return\r\n        this.setState({\r\n            ethInputText: <p className=\"help is-danger\">Input should be a positive number</p>,\r\n        })\r\n        return\r\n    }\r\n    \r\n    console.log(this.state.name)\r\n    if (this.state.name === 'Unregistered User'){\r\n        this.setState({\r\n            addressInputText: <p className=\"help is-danger\">Address is not registered. Please ask Receiver to set profile name.</p>\r\n        })\r\n        return\r\n    }\r\n\r\n    else{\r\n        const amount = this.state.currency === 'eth' ? this.state.ethAmount : this.state.usdAmount\r\n\r\n        this.setState({\r\n            url: `${window.location.protocol}//${window.location.hostname}/activity/send_payment/${this.state.address}/${this.state.currency}/${amount}`\r\n        })\r\n    }\r\n  }\r\n\r\n  loadProfileInfo(){\r\n    //Load profile info\r\n\r\n    const web3 = new Web3(window.ethereum);\r\n    const address = web3.eth.accounts[0]\r\n    \r\n\r\n    if (web3.isAddress(address) === false){\r\n        console.log('address invalid')\r\n        this.setState({\r\n            addressInputText: <p className=\"help is-danger\">Invalid ETH address</p>\r\n        })\r\n        return\r\n    }\r\n\r\n    this.state.user_contract.getProfileLength.call(address, (error, result) => {\r\n        console.log(`Length of profile info ${result}`);\r\n        console.log(`${address}`);\r\n        if (parseInt(result) === 0)\r\n        {\r\n          this.setState({\r\n          name: 'Unregistered User',\r\n          info: '',\r\n          addressInputText: <p className=\"help is-danger\">Unregistered User. Please <Link to=\"/activity/set_profile\">set your profile</Link> before sending payment.</p>\r\n          \r\n        \r\n        })\r\n        return\r\n        }\r\n      \r\n      \r\n      //Then load profile info. Get last profile from array \r\n      this.state.user_contract.ProfileDB.call(address, (result - 1), (error, result) => {\r\n        this.setState({\r\n          name: \"hamza\",\r\n          info: result[1],\r\n          sellerAddress: address,\r\n          addressInputText: <p className=\"help is-info\">Receiver name: {result[0]}</p>\r\n        })\r\n      })\r\n      \r\n      })\r\n      }\r\n\r\n\r\n  render() {\r\n    const profile_url = `/profile/${this.state.sellerAddress}`\r\n    \r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        \r\n        <div className={`modal ${this.state.modal}`}>\r\n        <div className=\"modal-background\" onClick={() => this.setState({modal: ''})}></div>\r\n        <div className=\"modal-content\">\r\n            <SendPaymentConfirm \r\n            address={this.state.address}\r\n            ethAmount={this.state.ethAmount}\r\n            sellerAddress={this.state.sellerAddress}\r\n            />\r\n        </div>\r\n        <button className=\"modal-close is-large\" onClick={() => this.setState({modal: ''})}></button>\r\n        </div>\r\n\r\n\r\n      <section className=\"section\">\r\n      <div className=\"container\" style={{width:790}}>\r\n      <a className=\"has-text-left\" onClick={() => window.history.back()}>&larr; Back</a>\r\n      </div>\r\n      \r\n      <br/>\r\n\r\n      <div className=\"container box\" style={{width:800}}>\r\n      \r\n      <nav className=\"level\">\r\n      <div className=\"level-left\">\r\n        <div className=\"level-item\">\r\n        <p>Create Invoice</p>\r\n        \r\n        </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n        <div className=\"level-item\">\r\n        <p>1 ETH = US$ {this.state.ethPrice}</p>\r\n        \r\n        </div>\r\n        </div>\r\n        </nav>\r\n        <hr></hr>\r\n\r\n    <label className=\"label\">Payment Amount</label>\r\n    <div className=\"field has-addons\">\r\n\r\n    <div className=\"control\">\r\n        <span className=\"select\">\r\n        <select id=\"currency\" name=\"currency\"\r\n        onChange={() => \r\n        {\r\n            this.setState({\r\n                currency: document.getElementById('currency').value,\r\n                ethInputText: <p className=\"help\"></p>\r\n                })\r\n            document.getElementById('amount').value = ''\r\n        \r\n        }}>\r\n            <option value=\"eth\">ETH</option>\r\n            <option value=\"usd\">USD</option>\r\n        </select>\r\n        </span>\r\n    </div>\r\n    \r\n    <div className=\"control\">\r\n        <input className=\"input\" type=\"text\" placeholder=\"Amount\" id=\"amount\" onChange={this.updateAmountInputText}/>\r\n    </div>\r\n    \r\n    </div>\r\n    {this.state.ethInputText}\r\n    <p className=\"help\">For invoice in USD, Senderwill pay equivalent amount in ETH at conversion rate at time of payment.</p>\r\n    <br/>\r\n    <br/>\r\n\r\n\r\n    <br/>\r\n    <div className=\"buttons is-centered\">\r\n        \r\n        <p className=\"button is-primary\" onClick={() => this.activateModal()}>\r\n       \r\n          <span>Generate Invoice Link</span>\r\n        </p>\r\n       \r\n        </div>\r\n       <p className=\"has-text-centered\">{this.state.url}</p>\r\n\r\n</div>\r\n\r\n        </section>\r\n      \r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default CreateInvoice;\r\n\r\n\r\nclass SendPaymentConfirm extends Component {\r\n\r\n  \r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        buyerTxCount: '',\r\n        sellerTxCount: '',\r\n        escrowTxCount: '',\r\n        buyerName: '',\r\n        sellerName: '',\r\n        escrowName: '',\r\n        txt: 'Confirm and Send payment'\r\n    }\r\n    this.loadProfileName = this.loadProfileName.bind(this)\r\n    this.loadCount = this.loadCount.bind(this)\r\n}\r\n\r\ncomponentDidMount(){\r\n    console.log(this.props.sellerAddress)\r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try { \r\n           window.ethereum.enable().then(() => {\r\n               // User has allowed account access to DApp...\r\n              const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n              const user_contract = web3.eth.contract(constants.profile_abi).at(constants.profile_address)\r\n              this.setState({\r\n                contract: contract,\r\n                user_contract: user_contract\r\n              })\r\n\r\n              this.loadProfileName('buyer', web3.eth.accounts[0])\r\n              this.loadProfileName('Receiver', this.props.sellerAddress)\r\n              this.loadProfileName('escrow', constants.escrowAddress)\r\n              this.loadCount(web3.eth.accounts[0], this.props.sellerAddress, constants.escrowAddress)\r\n           \r\n           });\r\n           \r\n        } catch(e) {\r\n           // User has denied account access to DApp...\r\n        }\r\n     }\r\n\r\n     else {\r\n        window.location.href = \"/login\";\r\n     }\r\n\r\n}\r\n\r\ncomponentWillReceiveProps(){\r\n    this.loadProfileName('Receiver', this.props.sellerAddress)\r\n}\r\n\r\nSendPayment(){\r\n\r\n  this.state.contract.createPayment.sendTransaction(\r\n    this.props.sellerAddress,\r\n     this.state.address,   //constants.escrowAddress,\r\n    '', //notes. leave empty for now\r\n    {\r\n      from: this.props.address,\r\n      value: this.props.ethAmount*(10**18),\r\n      gas: 350000\r\n    },\r\n\r\n    (error, result) => {\r\n      console.log(result)\r\n      this.setState({\r\n          txt: 'Payment Sent'\r\n      })\r\n      setInterval(() => {\r\n        window.location.href = \"/dashboard\"\r\n      }, 500);\r\n    }\r\n  )\r\n}\r\n\r\nloadProfileName(userType,address){\r\n    this.state.user_contract.getProfileLength.call(address, (error, result) => {\r\n      if (parseInt(result) === 0){\r\n        \r\n        return\r\n      }\r\n\r\n      console.log('bb')\r\n      this.state.user_contract.ProfileDB.call(address, (result - 1), (error, result) => {\r\n        switch(userType){\r\n          case 'buyer': \r\n              this.setState({buyerName: result})\r\n              break\r\n          case 'Receiver':\r\n              this.setState({sellerName: result})\r\n              break\r\n          case 'escrow':\r\n              this.setState({escrowName: result})\r\n              break\r\n          default:\r\n            break\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  loadCount(buyer, Receiver, escrow){\r\n    this.state.contract.getCustomerLedgerLength.call(buyer, (error, result) => {\r\n      this.setState({buyerTxCount: parseInt(result)})\r\n    })\r\n    this.state.contract.getMerchantLedgerLength.call(Receiver, (error, result) => {\r\n      this.setState({sellerTxCount: parseInt(result)})\r\n    })\r\n    this.state.contract.getEscrowLedgerLength.call(escrow, (error, result) => {\r\n      this.setState({escrowTxCount: parseInt(result)})\r\n    \r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div>\r\n      <br/>\r\n      <div className=\"container box\" style={{width:850}}>\r\n      \r\n      <nav className=\"level\">\r\n      <div className=\"level-left\">\r\n        <div className=\"level-item\">\r\n        <p>Confirm Payment</p>\r\n        \r\n        </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n        <div className=\"level-item\">\r\n        <p></p>\r\n        \r\n        </div>\r\n        </div>\r\n        </nav>\r\n  \r\n        <hr></hr>\r\n        <p className=\"has-text-centered is-size-4\">You are sending</p><br/>\r\n\r\n        <p className=\"has-text-centered is-size-3\">{this.props.ethAmount} ETH</p>\r\n        <div className=\"columns\">\r\n\r\n        <div className=\"column has-text-left\">\r\n       \r\n        <b>Payment from</b>\r\n        <p>{this.state.buyerName[0]}</p>\r\n        <p className=\"is-size-7\">{this.props.address} (You)</p>\r\n        </div>\r\n        <div className=\"column is-narrow\"><br/>\r\n          <span className=\"icon\">\r\n          <i className=\"fas fa-arrow-right\"></i>\r\n          </span>\r\n          </div>\r\n        <div className=\"column has-text-right\"> \r\n        <b>Payment to</b>\r\n        <p>{this.state.sellerName[0]}</p>\r\n        <p className=\"is-size-7\">{this.props.sellerAddress}</p>\r\n        <p></p>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"has-text-centered\">\r\n        <b>Escrowed By</b>\r\n        <p>XBORDER</p>\r\n        </div>\r\n        <br/>\r\n        <div className=\"buttons is-centered\">\r\n        \r\n        <a className=\"button is-primary\" onClick={() => this.SendPayment()}>\r\n          \r\n          <span>{this.state.txt}</span>\r\n        </a>\r\n       \r\n        </div>\r\n        <hr/>\r\n        <p className=\"is-size-7\">\r\n            After payment, funds will be locked in escrow<br/>\r\n            When your item is received, please release funds to Receiver in your dashboard<br/>\r\n            If you require assistance, contact us at XBORDER@gmail.com\r\n            </p>\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport Header from '../common/header.js'\r\nimport { Link } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\nimport constants from '../common/constant.js'\r\n\r\nclass SendPayment extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            ethPrice: 'Loading...',\r\n            address: '',\r\n            ethInputText: <p className=\"help\"></p>,\r\n            currency: 'eth',\r\n            modal: '',\r\n            ethAmount: 0,\r\n            sellerAddress: '',\r\n            addressInputText: <p className=\"help\"></p>,\r\n            name: '',\r\n            info: ''\r\n        }\r\n        this.loadProfileInfo = this.loadProfileInfo.bind(this);\r\n        \r\n        this.LoadEthPrice = this.LoadEthPrice.bind(this);\r\n        this.updateAmountInputText = this.updateAmountInputText.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (window.ethereum) {\r\n            const web3 = new Web3(window.ethereum);\r\n            try { \r\n               window.ethereum.enable().then(() => {\r\n                   // User has allowed account access to DApp...\r\n                  const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n                  const user_contract = web3.eth.contract(constants.profile_abi).at(constants.profile_address)\r\n                  \r\n                  this.setState({\r\n                      address: web3.eth.accounts[0],\r\n                      user_contract: user_contract\r\n                    })\r\n                  setInterval(() => {\r\n                    if (web3.eth.accounts[0] !== this.state.address) {\r\n                        window.location.reload()\r\n                    }\r\n                  }, 100);\r\n               });\r\n               \r\n            } catch(e) {\r\n               // User has denied account access to DApp...\r\n            }\r\n         }\r\n    \r\n         else {\r\n            window.location.href = \"/login\";\r\n         }\r\n\r\n        this.LoadEthPrice();\r\n    }\r\n\r\n  LoadEthPrice(){\r\n    \r\n    fetch('https://api.gemini.com/v1/book/ethusd?limit_bids=1&limit_asks=1')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const price = Math.round((parseFloat(data['bids'][0]['price']) + parseFloat(data['asks'][0]['price']))/2*100)/100\r\n      this.setState({ethPrice: price});\r\n    })\r\n    .catch(error => console.error(error))\r\n  }\r\n\r\n  updateAmountInputText(){\r\n    const input = document.getElementById(\"amount\").value\r\n    if (this.checkAmountInputText()){\r\n\r\n    if (this.state.currency === 'eth'){\r\n        this.setState({\r\n            ethInputText: <p className=\"help\">{input} ETH = US$ {Math.round(input * this.state.ethPrice*100)/100}</p>,\r\n            ethAmount: parseFloat(input)\r\n        })\r\n\r\n    //Convert usd to eth\r\n    } else if (this.state.currency === 'usd'){\r\n\r\n    let ethAmount = Math.round(input/this.state.ethPrice*10000000)/10000000\r\n        this.setState({\r\n            ethInputText: <p className=\"help\">{ethAmount} ETH = US$ {input}</p>,\r\n            ethAmount: parseFloat(ethAmount)\r\n        })\r\n    }\r\n\r\n    } \r\n  }\r\n\r\n  checkAmountInputText(){\r\n    const input = document.getElementById(\"amount\").value\r\n    if (String(parseFloat(input)) === input && String(parseFloat(input)) > 0){\r\n        return true\r\n    }\r\n    else {\r\n\r\n        return false\r\n    } \r\n  }\r\n\r\n  activateModal(){\r\n    //First check eth inputs\r\n    if (this.checkAmountInputText() === false){\r\n        //set error msg, return\r\n        this.setState({\r\n            ethInputText: <p className=\"help is-danger\">Input should be a positive number</p>,\r\n        })\r\n        return\r\n    }\r\n\r\n    //Then check address input\r\n    const web3 = new Web3(window.ethereum);    \r\n    const address = document.getElementById('selleraddress').value\r\n    if (web3.isAddress(address) === false){\r\n        console.log('address invalid')\r\n        this.setState({\r\n            addressInputText: <p className=\"help is-danger\">Invalid ETH address</p>\r\n        })\r\n        return\r\n    }\r\n\r\n\r\n    \r\n    console.log(this.state.name)\r\n    if (this.state.name === 'Unregistered User'){\r\n        this.setState({\r\n            addressInputText: <p className=\"help is-danger\">Address is not registered. Please ask Receiver to set profile name.</p>\r\n        })\r\n        return\r\n    }\r\n\r\n    this.setState({\r\n        modal: 'is-active',\r\n        sellerAddress: document.getElementById('selleraddress').value\r\n    })\r\n  }\r\n\r\n  loadProfileInfo(){\r\n    //Load profile info\r\n\r\n    const address = document.getElementById('selleraddress').value\r\n    const web3 = new Web3(window.ethereum);\r\n\r\n    if (web3.isAddress(address) === false){\r\n        console.log('address invalid')\r\n        this.setState({\r\n            addressInputText: <p className=\"help is-danger\">Invalid ETH address</p>\r\n        })\r\n        return\r\n    }\r\n\r\n    this.state.user_contract.getProfileLength.call(address, (error, result) => {\r\n        console.log(`Length of profile info ${result}`);\r\n        console.log(`${address}`);\r\n        if (parseInt(result) === 0)\r\n        {\r\n          this.setState({\r\n          name: 'Unregistered User',\r\n          info: '',\r\n          addressInputText: <p className=\"help is-danger\">Unregistered User. Please ask Receiver to register before sending payment.</p>\r\n          \r\n        \r\n        })\r\n        return\r\n        }\r\n      \r\n      \r\n      //Then load profile info. Get last profile from array \r\n      this.state.user_contract.ProfileDB.call(address, (result - 1), (error, result) => {\r\n        this.setState({\r\n          name: result[0],\r\n          info: result[1],\r\n          sellerAddress: address,\r\n          addressInputText: <p className=\"help is-info\">Receiver name: {result[0]}</p>\r\n        })\r\n      })\r\n      \r\n      })\r\n      }\r\n\r\n\r\n  render() {\r\n    const profile_url = `/profile?address=${this.state.sellerAddress}`\r\n    \r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        \r\n        <div className={`modal ${this.state.modal}`}>\r\n        <div className=\"modal-background\" onClick={() => this.setState({modal: ''})}></div>\r\n        <div className=\"modal-content\">\r\n            <SendPaymentConfirm \r\n            address={this.state.address}\r\n            ethAmount={this.state.ethAmount}\r\n            sellerAddress={this.state.sellerAddress}\r\n            />\r\n        </div>\r\n        <button className=\"modal-close is-large\" onClick={() => this.setState({modal: ''})}></button>\r\n        </div>\r\n\r\n\r\n      <section className=\"section\">\r\n      <div className=\"container\" style={{width:790}}>\r\n      <a className=\"has-text-left\" onClick={() => window.history.back()}>&larr; Back</a>\r\n      </div>\r\n      \r\n      <br/>\r\n\r\n      <div className=\"container box\" style={{width:800}}>\r\n      \r\n      <nav className=\"level\">\r\n      <div className=\"level-left\">\r\n        <div className=\"level-item\">\r\n        <p>Send ETH Payment</p>\r\n        \r\n        </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n        <div className=\"level-item\">\r\n        <p>1 ETH = US$ {this.state.ethPrice}</p>\r\n        \r\n        </div>\r\n        </div>\r\n        </nav>\r\n        <hr></hr>\r\n\r\n    <label className=\"label\">Payment Amount</label>\r\n    <div className=\"field has-addons\">\r\n\r\n    <div className=\"control\">\r\n        <span className=\"select\">\r\n        <select id=\"currency\" name=\"currency\"\r\n        onChange={() => \r\n        {\r\n            this.setState({\r\n                currency: document.getElementById('currency').value,\r\n                ethInputText: <p className=\"help\"></p>\r\n                })\r\n            document.getElementById('amount').value = ''\r\n        \r\n        }}>\r\n            <option value=\"eth\">ETH</option>\r\n            <option value=\"usd\">USD</option>\r\n        </select>\r\n        </span>\r\n    </div>\r\n    \r\n    <div className=\"control\">\r\n        <input className=\"input\" type=\"text\" placeholder=\"Amount\" id=\"amount\" onChange={this.updateAmountInputText}/>\r\n    </div>\r\n    \r\n    </div>\r\n    {this.state.ethInputText}\r\n    <br/>\r\n\r\n\r\n    <div className=\"field\">\r\n    <label className=\"label\">Pay To Address</label>\r\n    <div className=\"control has-icons-left has-icons-right\" style={{width:500}}>\r\n        <input className=\"input\" type=\"text\" \r\n        placeholder=\"0xeb77a63131254d76121063128AC7Fa985bb00Eb3\" \r\n        id='selleraddress'\r\n        onChange={() =>this.loadProfileInfo()}\r\n        />\r\n        <span className=\"icon is-small is-left\">\r\n        <i className=\"fas fa-user\"></i>\r\n        </span>\r\n        \r\n    </div>\r\n    {this.state.addressInputText}\r\n    <br/>\r\n    <Link to={profile_url} target=\"_blank\"><p className=\"button is-primary is-small\">\r\n          <span className=\"icon\">\r\n          <i className=\"far fa-user\"></i>\r\n          </span>\r\n          <span>View Receiver's Profile</span>\r\n        </p></Link>\r\n    </div>\r\n    <br/>\r\n    <div className=\"buttons is-centered\">\r\n        \r\n        <p className=\"button is-primary\" onClick={() => this.activateModal()}>\r\n          <span className=\"icon\">\r\n          <i className=\"far fa-user\"></i>\r\n          </span>\r\n          <span>Next</span>\r\n        </p>\r\n       \r\n        </div>\r\n        <p className=\"has-text-centered is-size-7\">You will be asked to confirm your payment on the next page</p>\r\n\r\n</div>\r\n\r\n        </section>\r\n      \r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default SendPayment;\r\n\r\n\r\nclass SendPaymentConfirm extends Component {\r\n\r\n  \r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        buyerTxCount: '',\r\n        sellerTxCount: '',\r\n        escrowTxCount: '',\r\n        buyerName: '',\r\n        sellerName: '',\r\n        escrowName: '',\r\n        txt: 'Confirm and Send payment'\r\n    }\r\n    this.loadProfileName = this.loadProfileName.bind(this)\r\n    this.loadCount = this.loadCount.bind(this)\r\n}\r\n\r\ncomponentDidMount(){\r\n    console.log(this.props.sellerAddress)\r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try { \r\n           window.ethereum.enable().then(() => {\r\n               // User has allowed account access to DApp...\r\n              const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n              const user_contract = web3.eth.contract(constants.profile_abi).at(constants.profile_address)\r\n              this.setState({\r\n                contract: contract,\r\n                user_contract: user_contract\r\n              })\r\n\r\n              this.loadProfileName('buyer', web3.eth.accounts[0])\r\n              this.loadProfileName('Receiver', this.props.sellerAddress)\r\n              this.loadProfileName('escrow', constants.escrowAddress)\r\n              this.loadCount(web3.eth.accounts[0], this.props.sellerAddress, constants.escrowAddress)\r\n           \r\n           });\r\n           \r\n        } catch(e) {\r\n           // User has denied account access to DApp...\r\n        }\r\n     }\r\n\r\n     else {\r\n        window.location.href = \"/login\";\r\n     }\r\n\r\n}\r\n\r\ncomponentWillReceiveProps(){\r\n    this.loadProfileName('Receiver', this.props.sellerAddress)\r\n}\r\n\r\nSendPayment(){\r\n\r\n  this.setState({\r\n      txt: 'Metamask Payment Confirmation...'\r\n  })\r\n\r\n  this.state.contract.createPayment.sendTransaction(\r\n    this.props.sellerAddress,\r\n    constants.escrowAddress,\r\n    '', //notes. leave empty for now\r\n    {\r\n      from: this.props.address,\r\n      value: this.props.ethAmount*(10**18),\r\n      gas:350000,\r\n      gasPrice: 88000000000\r\n    },\r\n\r\n    (error, result) => {\r\n\r\n      if (!error){\r\n        console.log(result)\r\n        this.setState({\r\n            txt: 'Payment Sent'\r\n        })\r\n        setInterval(() => {\r\n          window.location.href = \"/dashboard\"\r\n        }, 1000);\r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n            txt: 'Confirm and Send Payment'\r\n        })\r\n      }\r\n      \r\n    }\r\n  )\r\n}\r\n\r\nloadProfileName(userType,address){\r\n    this.state.user_contract.getProfileLength.call(address, (error, result) => {\r\n      if (parseInt(result) === 0){\r\n        \r\n        return\r\n      }\r\n\r\n      console.log('bb')\r\n      this.state.user_contract.ProfileDB.call(address, (result - 1), (error, result) => {\r\n        switch(userType){\r\n          case 'buyer': \r\n              this.setState({buyerName: result})\r\n              break\r\n          case 'Receiver':\r\n              this.setState({sellerName: result})\r\n              break\r\n          case 'escrow':\r\n              this.setState({escrowName: result})\r\n              break\r\n          default:\r\n            break\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  loadCount(buyer, Receiver, escrow){\r\n    this.state.contract.getCustomerLedgerLength.call(buyer, (error, result) => {\r\n      this.setState({buyerTxCount: parseInt(result)})\r\n    })\r\n    this.state.contract.getMerchantLedgerLength.call(Receiver, (error, result) => {\r\n      this.setState({sellerTxCount: parseInt(result)})\r\n    })\r\n    this.state.contract.getEscrowLedgerLength.call(escrow, (error, result) => {\r\n      this.setState({escrowTxCount: parseInt(result)})\r\n    \r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div>\r\n      <br/>\r\n      <div className=\"container box\" style={{width:850}}>\r\n      \r\n      <nav className=\"level\">\r\n      <div className=\"level-left\">\r\n        <div className=\"level-item\">\r\n        <p>Confirm Payment</p>\r\n        \r\n        </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n        <div className=\"level-item\">\r\n        <p></p>\r\n        \r\n        </div>\r\n        </div>\r\n        </nav>\r\n  \r\n        <hr></hr>\r\n        <p className=\"has-text-centered is-size-4\">You are sending</p><br/>\r\n\r\n        <p className=\"has-text-centered is-size-3\">{this.props.ethAmount} ETH</p>\r\n        <div className=\"columns\">\r\n\r\n        <div className=\"column has-text-left\">\r\n       \r\n        <b>Payment from</b>\r\n        <p>{this.state.buyerName[0]}</p>\r\n        <p className=\"is-size-7\">{this.props.address} (You)</p>\r\n        </div>\r\n        <div className=\"column is-narrow\"><br/>\r\n          <span className=\"icon\">\r\n          <i className=\"fas fa-arrow-right\"></i>\r\n          </span>\r\n          </div>\r\n        <div className=\"column has-text-right\"> \r\n        <b>Payment to</b>\r\n        <p>{this.state.sellerName[0]}</p>\r\n        <p className=\"is-size-7\">{this.props.sellerAddress}</p>\r\n        <p></p>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"has-text-centered\">\r\n        <b>Escrowed By</b>\r\n        <p>XBORDER</p>\r\n        </div>\r\n        <br/>\r\n        <div className=\"buttons is-centered\">\r\n        \r\n        <a className=\"button is-primary\" onClick={() => this.SendPayment()}>\r\n          \r\n          <span>{this.state.txt}</span>\r\n        </a>\r\n       \r\n        </div>\r\n        <hr/>\r\n        <p className=\"is-size-7\">\r\n            After payment, funds will be locked in escrow<br/>\r\n            When your item is received, please release funds to Receiver in your dashboard<br/>\r\n            If you require assistance, contact us at XBORDER@gmail.com\r\n            </p>\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport Header from '../common/header.js'\r\nimport { Link } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\nimport constants from '../common/constant.js'\r\n\r\nclass SendPaymentConfirm extends Component {\r\n\r\n  \r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        address: ''\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try { \r\n           window.ethereum.enable().then(() => {\r\n               // User has allowed account access to DApp...\r\n              const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n\r\n              this.setState({\r\n                address: web3.eth.accounts[0],\r\n                contract: contract\r\n              })\r\n              setInterval(() => {\r\n                if (web3.eth.accounts[0] !== this.state.address) {\r\n                    window.location.reload()\r\n                }\r\n              }, 100);\r\n           });\r\n           \r\n        } catch(e) {\r\n           // User has denied account access to DApp...\r\n        }\r\n     }\r\n\r\n     else {\r\n        window.location.href = \"/login\";\r\n     }\r\n\r\n}\r\n\r\nSendPayment(){\r\n  this.state.contract.createPayment.sendTransaction(\r\n    \"0x0ea09dbf45047ad3c522435ffdee4f5e08e18ec9\",\r\n    \"0xC3B6eB22682d8D6620eb745e690E311d2dCCA0C2\",\r\n    \"\",\r\n    {\r\n      from: this.state.address,\r\n      value: 0.01*(10**18),\r\n      gas:350000,\r\n      gasPrice: 88000000000\r\n    },\r\n    (error, result) => {\r\n      console.log(result)\r\n    }\r\n  )\r\n}\r\n\r\n  render() {\r\n    const user = 'userrr';\r\n    const amount = '217';\r\n    const role = 'Buyer';\r\n   \r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        \r\n      <section className=\"section\">\r\n      <div className=\"container\" style={{width:790}}>\r\n      <a className=\"has-text-left\" onClick={() => window.history.back()}>&larr; Back</a>\r\n      </div>\r\n      \r\n      <br/>\r\n\r\n      <div className=\"container box\" style={{width:800}}>\r\n      \r\n      <nav className=\"level\">\r\n      <div className=\"level-left\">\r\n        <div className=\"level-item\">\r\n        <p>Confirm Payment</p>\r\n        \r\n        </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n        <div className=\"level-item\">\r\n        <p></p>\r\n        \r\n        </div>\r\n        </div>\r\n        </nav>\r\n      \r\n\r\n  \r\n        <hr></hr>\r\n        <p className=\"has-text-centered is-size-4\">You are sending</p><br/>\r\n\r\n        <p className=\"has-text-centered is-size-3\">217.50 DAI</p>\r\n        <div className=\"columns\">\r\n\r\n        <div className=\"column has-text-left\">\r\n       \r\n        <b>Payment from</b>\r\n        <p>{user}</p>\r\n        <p>88 completed payments</p>\r\n        </div>\r\n        <div className=\"column is-narrow\"><br/>\r\n          <span className=\"icon\">\r\n          <i className=\"fas fa-arrow-right\"></i>\r\n          </span>\r\n          </div>\r\n        <div className=\"column has-text-right\"> \r\n        <b>Payment to</b>\r\n        <p>{user}</p>\r\n        <p>57 completed transactions</p>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"has-text-centered\">\r\n        <b>Escrowed By</b>\r\n        <p>XBORDER</p>\r\n        <p>1385 transactions escrowed</p>\r\n        </div>\r\n        <br/>\r\n        <div className=\"buttons is-centered\">\r\n        \r\n        <a className=\"button is-primary\" onClick={() => this.SendPayment()}>\r\n          <span className=\"icon\">\r\n          <i className=\"far fa-user\"></i>\r\n          </span>\r\n          <span>Confirm and Send payment</span>\r\n        </a>\r\n       \r\n        </div>\r\n     \r\n        \r\n</div>\r\n\r\n        </section>\r\n      \r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default SendPaymentConfirm;\r\n\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport Header from '../common/header.js'\r\nimport Web3 from 'web3';\r\nimport constants from '../common/constant.js'\r\nimport util from '../common/util.js'\r\nclass ProfilePage extends Component {\r\n\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          address: '',\r\n          name: '',\r\n          info: '',\r\n\r\n          totalSentComplete: 0,\r\n          totalSentEth: 0,\r\n          \r\n          totalSentInEscrow: 0,          \r\n          totalSentInEscrowEth: 0,          \r\n          \r\n          totalTransfersEth: 0,          \r\n          totalTransfersComplete: 0,   \r\n\r\n          totalTransfersInEscrow: 0,          \r\n          totalTransfersInEscrowEth: 0,\r\n\r\n          customerLedgerLength: 0,\r\n          customerLedger: [],\r\n\r\n          merchantLedgerLength: 0,\r\n          merchantLedger: []\r\n        }\r\n       \r\n    }\r\n\r\n    componentDidMount(){\r\n      var url_string = window.location.href;\r\n      var url = new URL(url_string);\r\n      const address = url.searchParams.get(\"address\");\r\n\r\n\r\n      //const address = this.props.match.params.address\r\n      this.setState({\r\n        address: address\r\n      })\r\n      if (window.ethereum) {\r\n          const web3 = new Web3(window.ethereum);\r\n          try { \r\n             window.ethereum.enable().then(() => {\r\n                 // User has allowed account access to DApp...\r\n                 const contract = web3.eth.contract(constants.abi).at(constants.address)\r\n                 const profile_contract = web3.eth.contract(constants.profile_abi).at(constants.profile_address)\r\n                \r\n                this.setState({\r\n                  contract: contract,\r\n                  profile_contract: profile_contract\r\n                })\r\n\r\n                //Load transact history\r\n\r\n                \r\n                this.loadProfileInfo()\r\n\r\n\r\n            //Get length of customer ledger\r\n            contract.getCustomerLedgerLength.call(address, (error, result) => {\r\n              this.setState({customerLedgerLength: parseInt(result)});\r\n              \r\n            //Loop through customer ledger from the end of list, get individual transaction id\r\n            for (let i = 0; i < this.state.customerLedgerLength; i++){\r\n              contract.CustomerLedger.call(address,i, (error, id) => {\r\n\r\n                //For individual transaction id, get the transaction from TransactionLedger\r\n                contract.getTransaction.call(id, (error, result) => {\r\n\r\n                  const transact = util.returnTxMap(id,result)\r\n                  let newLedger = this.state.customerLedger;\r\n                  newLedger.push(transact);\r\n                  \r\n                  this.setState({customerLedger: newLedger})\r\n\r\n                  //After loading the final transact\r\n                  if (newLedger.length === this.state.customerLedgerLength){\r\n                   //Compute the totals\r\n                   let sum_transacted_eth = 0\r\n                   let sum_transacted_transact = 0\r\n                   let sum_in_escrow_eth = 0\r\n                   let sum_in_escrow_transact = 0\r\n                    for (let i = 0; i < this.state.customerLedgerLength; i++){\r\n\r\n                      //If transact in escrow and incomplete\r\n                      if (this.state.customerLedger[i][\"status\"] === util.status()[0] ||\r\n                          this.state.customerLedger[i][\"status\"] === util.status()[3])\r\n                      {\r\n                          sum_in_escrow_transact++\r\n                          sum_in_escrow_eth += this.state.customerLedger[i][\"value\"]\r\n                      }\r\n\r\n                      else{\r\n                        sum_transacted_transact++\r\n                        sum_transacted_eth += this.state.customerLedger[i][\"value\"]\r\n                      }\r\n                    }\r\n\r\n                  this.setState({\r\n                    totalSentEth: sum_transacted_eth,\r\n                    totalSentComplete: sum_transacted_transact,\r\n\r\n                    totalSentInEscrowEth: sum_in_escrow_eth,\r\n                    totalSentInEscrow: sum_in_escrow_transact\r\n                  })\r\n\r\n                  }\r\n                })\r\n              })\r\n            }\r\n            });\r\n\r\n            //Get length of merchant ledger\r\n            contract.getMerchantLedgerLength.call(address, (error, result) => {\r\n              //console.log(`merchant ledger length ${result}`)\r\n              this.setState({merchantLedgerLength: parseInt(result)});\r\n            //Loop through merchant ledger from the end of list, get individual transaction id\r\n            for (let i = 0; i < this.state.merchantLedgerLength; i++){\r\n              contract.MerchantLedger.call(address,i, (error, id) => {\r\n                //console.log(id)\r\n\r\n                //For individual transaction id, get the transaction from TransactionLedger\r\n                contract.getTransaction.call(id, (error, result) => {\r\n                  const transact = util.returnTxMap(id,result)\r\n                  //console.log(transact);\r\n                  let newLedger = this.state.merchantLedger;\r\n                  newLedger.push(transact);\r\n\r\n                  this.setState({merchantLedger: newLedger})\r\n                  //After loading the final transact\r\n                  if (newLedger.length === this.state.merchantLedgerLength){\r\n                    //Compute the totals\r\n                    let sum_transacted_eth = 0\r\n                    let sum_transacted_transact = 0\r\n                    let sum_in_escrow_eth = 0\r\n                    let sum_in_escrow_transact = 0\r\n                      for (let i = 0; i < this.state.merchantLedgerLength; i++){\r\n  \r\n                        //If transact in escrow and incomplete\r\n                        if (this.state.merchantLedger[i][\"status\"] === util.status()[0] ||\r\n                            this.state.merchantLedger[i][\"status\"] === util.status()[3])\r\n                        {\r\n                            sum_in_escrow_transact++\r\n                            sum_in_escrow_eth += this.state.merchantLedger[i][\"value\"]\r\n                        }\r\n  \r\n                        else{\r\n                          sum_transacted_transact++\r\n                          sum_transacted_eth += this.state.merchantLedger[i][\"value\"]\r\n                        }\r\n                      }\r\n  \r\n                    this.setState({\r\n                      totalTransfersEth: sum_transacted_eth,\r\n                      totalTransfersComplete: sum_transacted_transact,\r\n  \r\n                      totalTransfersInEscrowEth: sum_in_escrow_eth,\r\n                      totalTransfersInEscrow: sum_in_escrow_transact\r\n                    })\r\n  \r\n                    }\r\n                })\r\n              })\r\n            }\r\n            });\r\n\r\n          \r\n             });\r\n             \r\n          } catch(e) {\r\n             // User has denied account access to DApp...\r\n          }\r\n       }\r\n  \r\n       else {\r\n          window.location.href = \"/login\";\r\n       }\r\n  }\r\n\r\n  loadProfileInfo(){\r\n//Load profile info\r\nthis.state.profile_contract.getProfileLength.call(this.state.address, (error, result) => {\r\n  //console.log(`Length of profile info ${result}`);\r\n  if (parseInt(result) === 0)\r\n    {\r\n      this.setState({\r\n      name: '',\r\n      info: ''})\r\n    }\r\n  \r\n  else {\r\n  //Then load profile info. Get last profile from array \r\n  this.state.profile_contract.ProfileDB.call(this.state.address, (result - 1), (error, result) => {\r\n    this.setState({\r\n      name: result[0],\r\n      info: result[1]\r\n    })\r\n  })\r\n  }\r\n  })\r\n  }\r\n\r\n  render() {\r\n    let username = this.state.name;\r\n    let info = this.state.info\r\n   \r\n    return (\r\n      <div>\r\n        <Header/>\r\n        \r\n      <section className=\"section\">\r\n      <div className=\"container\" style={{width:790}}>\r\n      <a className=\"has-text-left\" onClick={() => window.history.back()}>&larr; Back</a>\r\n      </div>\r\n      \r\n      <br/>\r\n\r\n      <div className=\"container box\" style={{width:800}}>\r\n      \r\n     \r\n        <p className=\"has-text-centered is-size-3\">{username}'s profile</p>\r\n        <p className=\"has-text-centered\">Joined 20/2/2019</p>\r\n        <br/>\r\n        <p className=\"has-text-centered\">{info}</p>\r\n        <hr></hr>\r\n        <p className=\"has-text-centered\">Lifetime transactions</p>\r\n        <div className=\"columns\">\r\n\r\n        <div className=\"column has-text-left\">\r\n       \r\n        <b>SenderHistory</b>\r\n        <p>Total ETH spent: {this.state.totalSentEth} ETH</p>\r\n        <p>Transactions Completed: {this.state.totalSentComplete}</p>\r\n\r\n        </div>\r\n        <div className=\"column is-narrow\"><br/>\r\n         \r\n          </div>\r\n        <div className=\"column has-text-right\"> \r\n       \r\n        <b>Receiver History</b>\r\n        <p>Total ETH received: {this.state.totalTransfersEth} ETH</p>\r\n        <p>Transactions Completed: {this.state.totalTransfersComplete}</p>\r\n        </div>\r\n        </div>\r\n\r\n        <hr/>\r\n        <p className=\"has-text-centered\">Current in escrow transactions</p>\r\n\r\n        <div className=\"columns\">\r\n\r\n        <div className=\"column has-text-left\">\r\n       \r\n        <b>Buyer</b>\r\n        <p>Amount unreleased: {this.state.totalSentInEscrowEth} ETH</p>\r\n        <p>Transactions In Escrow: {this.state.totalSentInEscrow}</p>\r\n        \r\n        </div>\r\n        <div className=\"column is-narrow\"><br/>\r\n         \r\n        </div>\r\n        <div className=\"column has-text-right\"> \r\n       \r\n        <b>Receiver</b>\r\n        <p>Amount receivable: {this.state.totalTransfersInEscrowEth} ETH</p>\r\n        <p>Transactions in Escrow: {this.state.totalTransfersInEscrow}</p>\r\n        </div>\r\n        </div>\r\n\r\n        </div>        \r\n        </section>\r\n      \r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;\r\n\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Web3 from 'web3';\r\nimport constants from '../common/constant.js'\r\nimport { Link } from \"react-router-dom\";\r\nimport {Spinner} from '@blueprintjs/core'\r\n\r\nimport Header from '../common/header.js'\r\n\r\nclass SetProfile extends Component {\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <br/>\r\n        <div className=\"container\" style={{width:800}}>\r\n        <h1 className=\"is-size-3 has-text-centered\">Setup XBORDER Profile</h1>\r\n        </div>\r\n        <br/>\r\n        <InitializeProfile/>\r\n        <br/>\r\n        \r\n        <br/>\r\n        <div className=\"has-text-centered\">\r\n          <Link to=\"/dashboard\"><p className=\"button is-primary\">Back to Dashboard</p></Link><br/><br/>\r\n        </div>\r\n       \r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default SetProfile;\r\n\r\nclass InitializeProfile extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        address: '',\r\n        loading: false\r\n    }\r\n}\r\n\r\n  componentDidMount(){\r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try { \r\n           window.ethereum.enable().then(() => {\r\n               // User has allowed account access to DApp...\r\n              const contract = web3.eth.contract(constants.profile_abi).at(constants.profile_address)\r\n              const profile_contract = web3.eth.contract(constants.profile_abi).at(constants.profile_address)\r\n              \r\n              this.setState({\r\n                address: web3.eth.accounts[0],\r\n                contract: contract,\r\n                profile_contract: profile_contract\r\n              })\r\n              setInterval(() => {\r\n                if (web3.eth.accounts[0] !== this.state.address) {\r\n                    window.location.reload()\r\n                }\r\n              }, 100);\r\n           });\r\n           \r\n        } catch(e) {\r\n           // User has denied account access to DApp...\r\n        }\r\n     }\r\n\r\n     else {\r\n       //window.location.href = \"/login\";\r\n        this.props.history.push('/login')\r\n\r\n     }\r\n}\r\n\r\n  SetProfile () {\r\n    const name = document.getElementById('nameinput').value\r\n    const info = document.getElementById('infoinput').value\r\n    \r\n    this.setState({loading: true})\r\n\r\n    this.state.profile_contract.SetProfile.sendTransaction(\r\n      name,\r\n      info,\r\n      {\r\n        from: this.state.address, \r\n        gas: 350000,\r\n      gasPrice: 88000000000\r\n      },\r\n      (error, result) => {\r\n          console.log(\"result\" + result)\r\n          console.log(\"error\" + error)\r\n        window.web3.eth.getTransaction(result, (error, result) => {\r\n          if (result) {\r\n            console.log(\"result\" + result)\r\n            console.log(\"error\" + error)\r\n            // this.setState({\r\n            //   name: name,\r\n            //   info: info\r\n            // })\r\n             window.location.href =  `/profile?address=${this.state.address}`;\r\n          } \r\n        }\r\n        );\r\n        \r\n      }\r\n    )\r\n    \r\n    }\r\n\r\n\r\n  \r\n\r\n\r\n    render() {\r\n      \r\n      return (\r\n        <div>\r\n         \r\n          <div className=\"container box\" style={{width:800}}>\r\n          <div className=\"has-text-centered\">\r\n          \r\n          <b>Setup</b>\r\n          </div>\r\n          <br/>\r\n          <p>Add name and information to your XBORDER profile for customers and receiver to identify you.</p>\r\n          <br/>\r\n          <div className=\"field is-horizontal\">\r\n    <div className=\"field-label is-normal\">\r\n      <label className=\"label\">Your address</label>\r\n    </div>\r\n    <div className=\"field-body\">\r\n      <div className=\"field\">\r\n        <p className=\"control\">\r\n          <input className=\"input is-static\" type=\"email\" value={this.state.address} readOnly/>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n          <div className=\"field is-horizontal\">\r\n    <div className=\"field-label is-normal\">\r\n      <label className=\"label\">Name</label>\r\n    </div>\r\n    <div className=\"field-body\">\r\n      <div className=\"field\">\r\n        <p className=\"control\">\r\n          <input className=\"input\" type=\"text\" placeholder=\"*Required\" id=\"nameinput\"></input>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div className=\"field is-horizontal\">\r\n    <div className=\"field-label is-normal\">\r\n      <label className=\"label\">Info</label>\r\n    </div>\r\n    <div className=\"field-body\">\r\n      <div className=\"field\">\r\n        <p className=\"control\">\r\n        <textarea className=\"textarea\"\r\n        id=\"infoinput\"\r\n        placeholder=\"Optional. Place contact information here, such as a link to your forum profile or bio.\"></textarea>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n          <br/>\r\n          <div className=\"has-text-centered\">\r\n          <button className=\"button is-primary\" onClick={() => this.SetProfile()}>Update Profile</button>\r\n          </div>\r\n\r\n          </div>\r\n          \r\n          </div>\r\n          \r\n      );\r\n    }\r\n  }\r\n  \r\n\r\n    \r\n  ","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Page404 extends Component {\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n        <section className=\"hero is-fullheight is-default is-bold\">\r\n        <div className=\"hero-head\">\r\n            <nav className=\"navbar\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                        <p className=\"navbar-item\">\r\n            XBORDER\r\n          </p>\r\n                       \r\n                    </div>\r\n                  \r\n                </div>\r\n            </nav>\r\n        </div>  \r\n \r\n        <div className=\"hero-body\">\r\n        <div className=\"container has-text-centered\">\r\n            <div className=\"columns is-vcentered\">\r\n                <div className=\"column is-5\">\r\n                    <figure className=\"image\">\r\n                        <img src=\"https://i1.wp.com/saedx.com/blog/wp-content/uploads/2019/01/saedx-blog-featured-70.jpg?zoom=1.25&fit=1200%2C500&ssl=1\" alt=\"Description\"/>\r\n                    </figure>\r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n    </div>\r\n      \r\n    </section>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Page404;\r\n","import React, { Component } from 'react';\r\n\r\nimport getmeta from '../assets/getmeta.png'\r\n\r\n\r\nclass getMetamask extends Component {\r\n  \r\n\r\n  render() {\r\n\r\n    \r\n\r\n    return (\r\n      \r\n       <a href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\"> <img className=\"img-responsive\" src={getmeta} alt=\"logo\"/></a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default getMetamask;\r\n","import React, {Component} from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\n//import Login from \"./pages/Login\";\r\nimport Dashboard from './dashboard/body.js'\r\n\r\nimport TransactionDetails  from './transaction/tx_details'\r\nimport Home from './home/home';\r\nimport MainNav from './home/MainNav'\r\nimport Info from './pages/info';\r\nimport Login from './getstarted/login';\r\n\r\n\r\nimport CreateInvoice from './transaction/create_invoice';\r\nimport 'bulma'\r\nimport SendPayment from './transaction/send_payment';\r\nimport SendPaymentConfirm from './transaction/send_payment_confirm';\r\nimport ProfilePage from './profile/profile_page';\r\nimport SetProfile from './dashboard/set_profile';\r\nimport Page404 from './common/404';\r\nimport getMetamask from 'pages/getmetamask'\r\n\r\nclass App extends Component {\r\n  handleAddress = (address) => {\r\n    this.setState({address: address});\r\n  }\r\n\r\n  state = {\r\n    data: null\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    // Call our fetch function below once the component mounts\r\n  this.callBackendAPI()\r\n    .then(res => this.setState({ data: res.express }))\r\n    .catch(err => console.log(err));\r\n}\r\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\r\ncallBackendAPI = async () => {\r\n  const response = await fetch('/xborder');\r\n  const body = await response.json();\r\n\r\n  if (response.status !== 200) {\r\n    throw Error(body.message) \r\n  }\r\n  return body;\r\n};\r\n\r\n  render() {\r\n  return (\r\n   \r\n\r\n    <BrowserRouter>\r\n       \r\n       <MainNav/>\r\n\r\n      <Switch>\r\n      \r\n     \r\n      <Route path=\"/\" exact component={Home} />\r\n\r\n       \r\n      <Route path=\"/dashboard\" exact component={Dashboard} />\r\n  \r\n      <Route path=\"/info\" exact component={Info} />\r\n  \r\n      <Route path=\"/login\" exact component={Login} />\r\n  \r\n      <Route path=\"/activity/transaction/:type/:id\" exact component={TransactionDetails} />\r\n  \r\n      <Route path=\"/activity/create_invoice/:address\" exact component={CreateInvoice} />\r\n      <Route path=\"/activity/send_payment\" exact component={SendPayment} />\r\n      <Route path=\"/activity/send_payment/:address/:currency/:amount\" exact component={SendPayment} />\r\n      <Route path=\"/activity/confirm_payment\" exact component={SendPaymentConfirm} />\r\n      <Route path=\"/activity/set_profile\" exact component={SetProfile} />\r\n  \r\n      <Route path=\"/profile\" exact component={ProfilePage} />\r\n\r\n      <Route path=\"/getMetamask\" exact component={getMetamask} />\r\n      \r\n      <Route component={Page404} />\r\n  \r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n  }\r\n}\r\n\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    font-family: 'Inter', sans-serif;\r\n    color: #0d0c22;\r\n  }\r\n\r\n  .btn {\r\n    padding: 10px 20px;\r\n    border-radius: 5px ;\r\n    border: none;\r\n    font-weight: 500;\r\n    display: inline-block;\r\n  }\r\n \r\n\r\n  .btn-primary {\r\n    background-color: #002C73;\r\n  }\r\n  \r\n\r\n  .btn-primary:hover, .btn-primary:focus, .btn-primary.focus {\r\n    background-color: #d1b22e;\r\n    box-shadow: none;\r\n  }\r\n\r\n  .btn-primary:not(:disabled):not(.disabled).active:focus, .btn-primary:not(:disabled):not(.disabled):active:focus, .show>.btn-primary.dropdown-toggle:focus {\r\n    box-shadow: none;\r\n  }\r\n\r\n  .btn-primary:not(:disabled):not(.disabled).active, .btn-primary:not(:disabled):not(.disabled):active, .show>.btn-primary.dropdown-toggle {\r\n    background-color: #6259ff;\r\n    outline: none;\r\n    box-shadow: none;\r\n  }\r\n\r\n  ::selection {\r\n    color: #fff;\r\n    color: rgba(255,255,255,0.85);\r\n    background: #ea4c89;\r\n  }\r\n\r\n  .card-img-overlay {\r\n    padding: 0.2rem 1.15rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n//import \"./utilities/theme.scss\";\r\n\r\nimport { GlobalStyle } from \"./utilities/GlobalStyle\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n      <GlobalStyle />\r\n      <App />\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}